<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>yHat</title>
<link>https://www.rsangole.com/blog.html</link>
<atom:link href="https://www.rsangole.com/blog.xml" rel="self" type="application/rss+xml"/>
<description>rahul&#39;s blog on data science</description>
<generator>quarto-1.3.450</generator>
<lastBuildDate>Wed, 01 Nov 2023 04:00:00 GMT</lastBuildDate>
<item>
  <title>How LDA Works, Using Shiny for Python</title>
  <dc:creator>Rahul </dc:creator>
  <link>https://www.rsangole.com/posts/2023-11-01_lda-with-shiny-for-python/lda-with-shiny-for-python.html</link>
  <description><![CDATA[ 



<p><img src="https://www.rsangole.com/posts/2023-11-01_lda-with-shiny-for-python/lda_shiny_viz.jpg" class="img-fluid"></p>
<p>After learning about Shiny for Python üêç in the last Posit PBC conference, I finally got around to implementing my first shiny dashboard in Python.</p>
<p>And I must say - I absolutely love it.</p>
<p>Here are some first impressions:</p>
<ol type="1">
<li>‚úÖ If you‚Äôre already a Shiny developer in R, the barrier to entry is very low. Posit have written some excellent documentation, and you won‚Äôt have any trouble getting your app running in Python.</li>
<li>Reactive values, observe events are created using decorators instead of functions like in R</li>
<li>I love how readable the UI and server bits of the code are; though this could just be my preference for how clean &amp; readable Python code is compared to other languages</li>
<li>üìõ It is important to understand mutability in Python objects, and adjust your mental model of objects, especially if you‚Äôre coming from a R-first paradigm. I spent way too much time trying to figure out why something simple wouldn‚Äôt work, till I realized I was modifying a variable in place. Fortunately, Posit has an excellent page documenting this.</li>
<li>üö∏ Shiny for Python is brand new, and quite a work in progress. There isn‚Äôt the ecosystem of packages for Python as there is for R today. But, I suspect it‚Äôs only a matter of time.</li>
<li>With the app running live in VSCode, I loved the live preview on save. It made development a breeze.</li>
</ol>
<section id="links" class="level2">
<h2 class="anchored" data-anchor-id="links">Links</h2>
<p><a href="https://rsangole.shinyapps.io/LDA_Visual/">Live Shiny Dashboard</a></p>
<p><a href="https://github.com/rsangole/shiny-python-lda/tree/main">GitHub Codebase</a></p>


</section>

 ]]></description>
  <category>Shiny</category>
  <category>Python</category>
  <guid>https://www.rsangole.com/posts/2023-11-01_lda-with-shiny-for-python/lda-with-shiny-for-python.html</guid>
  <pubDate>Wed, 01 Nov 2023 04:00:00 GMT</pubDate>
  <media:content url="https://www.rsangole.com/posts/2023-11-01_lda-with-shiny-for-python/lda_shiny_viz.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>2023 #30DayChallenge</title>
  <dc:creator>Rahul </dc:creator>
  <link>https://www.rsangole.com/posts/2023-04-01_30-day-chart-challenge/apr-30-day-challenge.html</link>
  <description><![CDATA[ 



<section id="part-of-a-whole" class="level1">
<h1>Part of a Whole</h1>
<p><img src="https://www.rsangole.com/posts/2023-04-01_30-day-chart-challenge/day1.png" class="img-fluid"></p>
</section>
<section id="relationships" class="level1">
<h1>Relationships</h1>
<p><img src="https://www.rsangole.com/posts/2023-04-01_30-day-chart-challenge/day5-1.png" class="img-fluid"></p>


</section>

 ]]></description>
  <category>Visualization</category>
  <guid>https://www.rsangole.com/posts/2023-04-01_30-day-chart-challenge/apr-30-day-challenge.html</guid>
  <pubDate>Mon, 03 Apr 2023 04:00:00 GMT</pubDate>
  <media:content url="https://www.rsangole.com/posts/2023-04-01_30-day-chart-challenge/day1.png" medium="image" type="image/png" height="155" width="144"/>
</item>
<item>
  <title>Performance Benchmarking Data Read Write</title>
  <dc:creator>Rahul </dc:creator>
  <link>https://www.rsangole.com/posts/2022-09-14_data-read-write-performance/data-read-write-perf.html</link>
  <description><![CDATA[ 



<section id="background" class="level1">
<h1>Background</h1>
<p>In a recent conversation, I was asked how to speed up execution of scripts dealing with computation on big data sets (biggish i.e.&nbsp;in-memory). The scripts had some data read and write features with some ETL sandwiched in between. Upon reviewing the code base, I found some immediate improvements by moving a bunch of ETL code from <code>{dplyr}</code> to <code>{data.table}</code>, which has been my defacto go to for large data sets.</p>
<p>On the data read/write side of the equation, I used to be an ardent <code>{qs}</code> user with intermittent forays into <code>{data.table::fread/fwrite}</code> functions. However, recently, I‚Äôve switched majority of my work to <code>{arrow}</code> which has proven itself a strong ally in the war against slow data transaction times.</p>
<p>The question remains - which one works better? Particularly, which one works better on the machines I‚Äôm using as well as the server I have access to? My configuration has changed from my last performance review posting. I‚Äôm now running:</p>
<ul>
<li>MacBook Pro, running MacOS 12.5</li>
<li>2.4 GHz 8-Core Intel Core i9</li>
<li>64 GB 2667 MHz DDR4</li>
<li>R version 4.2.0 on x86_64-apple-darwin17.0 (64-bit)</li>
</ul>
</section>
<section id="execution" class="level1 page-columns page-full">
<h1>Execution</h1>
<p>At a high level, the method is quite simple.</p>
<ol type="1">
<li>Create fake large data sets</li>
<li>For each, measure read and write speed for all approaches</li>
<li>Plot and compare</li>
</ol>
<p>The devil is in the details though, especially concerning scaling this approach. While my first approaches were linear script based, this quickly uncovered the ineffectiveness of scripts - the lack of ability to cache &amp; reference previous results (at least without significant coding). I quickly pivoted to using <code>{targets}</code> to build this measurement pipeline, learning ‚Äòdynamic branching‚Äô along the way, and I must say - I‚Äôm glad I did so.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>In case you‚Äôre not familiar, <code>{targets}</code> is a ‚Äú<em>‚Ä¶Make-like pipeline tool for Statistics and data science ‚Ä¶ [to] maintain a reproducible workflows‚Ä¶</em>‚Äù Learn more <a href="https://books.ropensci.org/targets/">here</a>.</p>
</div></div><p>Not only is the pipeline <em>much</em> easier to grok, but is extremely scalable. Since <code>{targets}</code> caches previous runs, I can very rapidly experiment with data, modeling &amp; plotting combinations while maintaining end-to-end verifiable reproducibility, without wasting any time re-executing long-running experiments.</p>
<p>I won‚Äôt delve into how I created this pipeline in this post, but the code base is available <a href="https://github.com/rsangole/perf-tests">here</a>.</p>
<section id="data" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="data">Data</h2>
<div class="cell page-columns page-full" data-hash="data-read-write-perf_cache/html/unnamed-chunk-1_9fe00822f668201a19cbb2a77d1c008d">

<div class="no-row-height column-margin column-container"><div class="cell-output-display">
<table class="lightable-classic-2 table table-sm table-striped small" data-quarto-postprocess="true">
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">cat_A</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">cat_B</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">date</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">num_1</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">num_2</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">num_3</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">num_4</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">chr_1</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">chr_2</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">chr_3</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">chr_4</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Alabama</td>
<td style="text-align: left;">B</td>
<td style="text-align: left;">2023-03-01</td>
<td style="text-align: right;">0.67</td>
<td style="text-align: right;">0.13</td>
<td style="text-align: right;">0.83</td>
<td style="text-align: right;">0.04</td>
<td style="text-align: left;">h</td>
<td style="text-align: left;">p</td>
<td style="text-align: left;">i</td>
<td style="text-align: left;">u</td>
</tr>
<tr class="even">
<td style="text-align: left;">Alabama</td>
<td style="text-align: left;">B</td>
<td style="text-align: left;">2022-10-18</td>
<td style="text-align: right;">0.52</td>
<td style="text-align: right;">0.63</td>
<td style="text-align: right;">0.29</td>
<td style="text-align: right;">0.14</td>
<td style="text-align: left;">s</td>
<td style="text-align: left;">o</td>
<td style="text-align: left;">h</td>
<td style="text-align: left;">a</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Alaska</td>
<td style="text-align: left;">A</td>
<td style="text-align: left;">2023-03-20</td>
<td style="text-align: right;">0.42</td>
<td style="text-align: right;">0.24</td>
<td style="text-align: right;">0.45</td>
<td style="text-align: right;">0.21</td>
<td style="text-align: left;">n</td>
<td style="text-align: left;">g</td>
<td style="text-align: left;">l</td>
<td style="text-align: left;">n</td>
</tr>
<tr class="even">
<td style="text-align: left;">Arkansas</td>
<td style="text-align: left;">B</td>
<td style="text-align: left;">2023-08-07</td>
<td style="text-align: right;">0.60</td>
<td style="text-align: right;">0.12</td>
<td style="text-align: right;">0.46</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: left;">c</td>
<td style="text-align: left;">p</td>
<td style="text-align: left;">r</td>
<td style="text-align: left;">b</td>
</tr>
</tbody>
</table>


</div></div></div>
<p>I created some fake data with categoricals, numerics and date-time vars. I‚Äôve used ‚Äòlong‚Äô data here, since it represented the use case I typically have, although I wonder if the results would change if the data were wider. After a few iterations, I settled on number of rows: 100k, 1M, and 5M. The results for number of rows = 1M+ did not change, to be honest.</p>
</section>
<section id="approaches" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="approaches">Approaches</h2>
<p>I tested the packages I tend to use the most, along with a new one <code>vroom</code> and the traditional RDS format from R. All in all, I tested:</p>
<ol type="1">
<li><code>data.table</code> - both the traditional CSV, and <code>yaml = TRUE</code> formulations</li>
<li><code>arrow</code> - two configurations: <code>parquet</code> and <code>arrow_csv</code></li>
<li><code>qs</code></li>
<li><code>vroom</code></li>
<li><code>RDS</code></li>
<li><code>feather</code></li>
<li><code>fst</code></li>
<li><code>duckdb</code></li>
</ol>
<p>Each approach is shown by a green square in the middle here. Each square represents a read and write using <code>{microbenchmark}</code> to measure the execution times. In total, this pipeline runs {10 read/write approaches x 3 data sets x 10 repeats} for a total of 300 runs.</p>
<div class="column-page">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.rsangole.com/posts/2022-09-14_data-read-write-performance/images/paste-925DBC69.png" class="img-fluid figure-img" width="861"></p>
</figure>
</div>
</div>
</section>
</section>
<section id="results" class="level1 page-columns page-full">
<h1>Results</h1>
<p>So what do the results look like? To be honest, they quite agree with what I had experienced in my work with large data sets.</p>
<section id="speeds" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="speeds">Speeds</h2>
<p>The plots below show the absolute read &amp; write speeds on the left (measured in seconds), with relative speed decrease as compared to the best performer on the right.</p>
<p>Let‚Äôs just look at the largest data size of 5 million rows.</p>
<p><strong>tldr</strong></p>
<ul>
<li><p><em>updated!</em> <code>feather</code> (as opposed to <code>arrow-parquet</code>) is now the clear winner for read speeds! The next best is <code>arrow-parquet</code> at 2.5x slower. <code>feather</code> is simply <em>blazing!</em> At sub-second read speeds, I had to confirm something wasn‚Äôt going wrong in the code-base!</p></li>
<li><p><code>qs</code>, <code>fst</code> and <code>feather</code> all perform admirably for write-speeds. <code>arrow</code> and <code>data.table</code> are the next best at 2-3x slower speeds than <code>qs</code>.</p></li>
<li><p>For <code>data.table</code> , the <code>yaml = TRUE</code> setting doesn‚Äôt make any difference to read-speeds. <em>This one surprised me, since I thought it would speed it up at least a bit.</em></p></li>
<li><p><code>rds</code> is the slowest, unsurprisingly, at 20-30x slower than <code>arrow</code>.</p></li>
<li><p><code>duckdb</code> and <code>vroom</code> performance were the middle of the pack.</p></li>
</ul>
<div class="cell column-screen fig-column-screen-inset-shaded quarto-layout-panel" data-hash="data-read-write-perf_cache/html/unnamed-chunk-2_fb6f5d14ed19d768572318900eb7817d">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="cell-output-display quarto-layout-cell" style="flex-basis: 100.0%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.rsangole.com/posts/2022-09-14_data-read-write-performance/data-read-write-perf_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="1344"></p>
</figure>
</div>
</div>
</div>
</div>
</section>
<section id="file-sizes" class="level2">
<h2 class="anchored" data-anchor-id="file-sizes">File Sizes</h2>
<p>This one is a doozey! Significant differences across all the packages, especially for large 5M row data sets. There seem to be three groupings: [qs, rds and arrow-parquet], [fst, feather &amp; duckdb], and finally [datatable, vroom and arrow-csv].</p>
<div class="cell" data-hash="data-read-write-perf_cache/html/unnamed-chunk-3_ef07255b6743c1c08f06b9c9f099cfa9">
<div class="cell-output-display">
<p><img src="https://www.rsangole.com/posts/2022-09-14_data-read-write-performance/data-read-write-perf_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>I‚Äôm curious to see if this result varies for wider data sets, or data sets with more/less characters and numerics.</p>
</section>
</section>
<section id="takeaway" class="level1">
<h1>Takeaway</h1>
<p>For the foreseeable future, I‚Äôm <em>still</em> indexing very heavily to arrow for my structured data sets, despite <code>feather</code> being faster (for some other reasons). It‚Äôs fast read and write times, combined with ability for lazy execution of queries on partitioned data makes it a clear winner for large data for my use cases.</p>


</section>

 ]]></description>
  <category>Benchmarking</category>
  <guid>https://www.rsangole.com/posts/2022-09-14_data-read-write-performance/data-read-write-perf.html</guid>
  <pubDate>Sat, 17 Sep 2022 04:00:00 GMT</pubDate>
  <media:content url="https://www.rsangole.com/posts/2022-09-14_data-read-write-performance/_image.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Making the Anomaly Database</title>
  <dc:creator>Rahul </dc:creator>
  <link>https://www.rsangole.com/posts/2021-08-18-making-an-anomaly-database/2021-08-18-making-an-anomaly-database.html</link>
  <description><![CDATA[ 



<p><em>This is part two of the two part post related to Docker, Postgres databases and Anomaly data-sets. Read <a href="https://rsangole.netlify.app2021/08/07/docker-based-rstudio-postgres/">Part 1</a>, which teaches you how to setup a new postgres database using Docker.</em></p>
<p>This post describes how you populate the anomaly database built in Part 1.</p>
<section id="motivation" class="level1">
<h1>Motivation</h1>
<p>Continuing the theme of end-to-end reproducible workflows, I want to be able to recreate my raw database programmatically as well.</p>
<p>At the end of this activity, I‚Äôm able to quickly load and manage ~6G of data for my personal use.</p>
<p><img src="https://www.rsangole.com/posts/2021-08-18-making-an-anomaly-database/anomaly-db-vscode.gif" class="img-fluid"></p>
<p>The entire codebase for populating the database is in my <a href="https://github.com/rsangole/anomaly_db">GitHub repo</a>.</p>
</section>
<section id="who-should-read-this" class="level1">
<h1>Who should read this?</h1>
<p>If you‚Äôre comfortable using <code>download.file()</code>, system commands, <code>arff</code> file formats, and <code>{DBI}</code> you won‚Äôt learn much here. Read on if you‚Äôre curious about my approach.</p>
</section>
<section id="steps" class="level1">
<h1>Steps</h1>
<p>Only three files here:</p>
<ol type="1">
<li>Initial Setup (<a href="https://github.com/rsangole/anomaly_db/blob/master/00-execute.R"><code>00-execute.R</code></a>)</li>
<li>Download data from the web (<a href="https://github.com/rsangole/anomaly_db/blob/master/01-download-data.R"><code>01-download-data.R</code></a>)</li>
<li>Load data into <code>anomaly</code> database in Postgres (<a href="https://github.com/rsangole/anomaly_db/blob/master/02-load-data-to-postgres.R"><code>02-load-data-to-postgres.R</code></a>)</li>
</ol>
<section id="initial-setup" class="level3">
<h3 class="anchored" data-anchor-id="initial-setup">Initial Setup</h3>
<p>A list helps be keep track of the data sources, and helps me turn any downloads off to save on space/time (the Monash one is a ~2G download, for example).</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">datasets <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb1-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ionosphere =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb1-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nab =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb1-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">monash =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2G download, 6G uncompressed</span></span>
<span id="cb1-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ucr =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb1-6">)</span></code></pre></div>
<p>Some simple housekeeping to ensure directories are setup correctly. Furthermore, if the folder is git controlled, the directory which will house the datasets <code>large_data</code> needs to be in <code>.gitignore</code>. I check for this.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create large_data/ if does not exist</span></span>
<span id="cb2-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>fs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dir_exists</span>(here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"large_data"</span>))) {</span>
<span id="cb2-3">  cli<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cli_alert</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{here::here('large_data')} does not exist"</span>)</span>
<span id="cb2-4">  resp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb2-5">    usethis<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ui_yeah</span>(</span>
<span id="cb2-6">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Create {here::here('large_data')}?"</span>,</span>
<span id="cb2-7">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yes =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y"</span>,</span>
<span id="cb2-8">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">no =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>,</span>
<span id="cb2-9">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shuffle =</span> F</span>
<span id="cb2-10">    )</span>
<span id="cb2-11">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>resp)</span>
<span id="cb2-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stop</span>()</span>
<span id="cb2-13">  fs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dir_create</span>(here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"large_data"</span>))</span>
<span id="cb2-14">}</span>
<span id="cb2-15"></span>
<span id="cb2-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># git but no gitignore?</span></span>
<span id="cb2-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (fs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dir_exists</span>(here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".git"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb2-18">    <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>fs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file_exists</span>(here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".gitignore"</span>))) {</span>
<span id="cb2-19">  cli<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cli_alert_danger</span>(</span>
<span id="cb2-20">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You have a git project, but no .gitignore. You must add {here::here('large_data')} to .gitignore since the data are massive."</span></span>
<span id="cb2-21">  )</span>
<span id="cb2-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stop</span>()</span>
<span id="cb2-23">}</span>
<span id="cb2-24"></span>
<span id="cb2-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gitignore but large_data missing?</span></span>
<span id="cb2-26"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (fs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file_exists</span>(here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".gitignore"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb2-27">    <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">any</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"large_data"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">readLines</span>(here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".gitignore"</span>))))) {</span>
<span id="cb2-28">  cli<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cli_alert_danger</span>(</span>
<span id="cb2-29">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Your .gitignore does not have `large_data` specified. Add this to continue, since the data are massive."</span></span>
<span id="cb2-30">  )</span>
<span id="cb2-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stop</span>()</span>
<span id="cb2-32">}</span></code></pre></div>
</section>
<section id="download-data" class="level3">
<h3 class="anchored" data-anchor-id="download-data">Download Data</h3>
<p>Now, for those datasets in the list above, simply download the data using <code>download.file()</code> for the selected datasets and move/unzip them to the <code>large_data</code> folder. I‚Äôm also checking if the folder already exists, and I‚Äôd like to overwrite it.</p>
<p>Here‚Äôs an example for the UCR dataset. The code for the rest of the datasets is pretty similar.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(datasets<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ucr){</span>
<span id="cb3-2">  DIR <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"large_data/UCRArchive_2018"</span>)</span>
<span id="cb3-3">  resp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> T</span>
<span id="cb3-4">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(fs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dir_exists</span>(DIR)){</span>
<span id="cb3-5">    resp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> usethis<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ui_yeah</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{DIR} already exists. Re-download data?"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shuffle =</span> F)</span>
<span id="cb3-6">    fs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dir_delete</span>(here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"large_data/UCRArchive_2018"</span>))</span>
<span id="cb3-7">  }</span>
<span id="cb3-8">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(resp){</span>
<span id="cb3-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">download.file</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">url =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://www.cs.ucr.edu/%7Eeamonn/time_series_data_2018/UCRArchive_2018.zip"</span>,</span>
<span id="cb3-10">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">destfile =</span> here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"large_data/UCRArchive_2018.zip"</span>))</span>
<span id="cb3-11">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">command =</span> glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'unzip -P someone {here::here("large_data/UCRArchive_2018.zip")} -d {here::here("large_data")}'</span>))</span>
<span id="cb3-12">    fs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file_delete</span>(here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"large_data/UCRArchive_2018.zip"</span>))</span>
<span id="cb3-13">  }</span>
<span id="cb3-14">}</span></code></pre></div>
</section>
<section id="load-data" class="level3">
<h3 class="anchored" data-anchor-id="load-data">Load Data</h3>
<p>Now, it‚Äôs as easy as:</p>
<ol type="1">
<li>Connect to the postgres database using <code>DBI::dbConnect</code></li>
<li>Read a dataset from <code>large_data/</code></li>
<li>Simple cleanup (<code>janitor::clean_names</code>, all timestamp cols are called <code>time</code> etc)</li>
<li>Use <code>DBI::dbWriteTable</code> to load the data into postgres</li>
</ol>
<p>Here‚Äôs an example codebase:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># DB Connection ----</span></span>
<span id="cb4-2">con <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbConnect</span>(</span>
<span id="cb4-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">drv =</span> RPostgres<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Postgres</span>(),</span>
<span id="cb4-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dbname =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"anomaly"</span>,</span>
<span id="cb4-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">host =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"db"</span>,</span>
<span id="cb4-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">user =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rahul"</span>,</span>
<span id="cb4-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">password =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pass"</span>,</span>
<span id="cb4-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">port =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5432</span></span>
<span id="cb4-9">)</span>
<span id="cb4-10"></span>
<span id="cb4-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (datasets<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ionosphere) {</span>
<span id="cb4-12">  dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb4-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"large_data/ionosphere/ionosphere.data"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col_names =</span> F) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> X35)</span>
<span id="cb4-15">  DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbWriteTable</span>(con, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ionosphere"</span>, dat)</span>
<span id="cb4-16"></span>
<span id="cb4-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Quick check</span></span>
<span id="cb4-18">  con <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tbl</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ionosphere"</span>)</span>
<span id="cb4-19">  </span>
<span id="cb4-20">}</span></code></pre></div>
<p><em>For the monash dataset, you do need to use <a href="https://stat.ethz.ch/R-manual/R-devel/library/foreign/html/read.arff.html"><code>foreign::read.arff()</code></a>.</em></p>
<hr>
</section>
</section>
<section id="tips" class="level1">
<h1>Tips</h1>
<p><strong>Large file downloads</strong> will timeout within the default timeout-window of 1 min. Handle this before calling <code>download.file()</code>.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">timeout.existing <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getOption</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"timeout"</span>)</span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">on.exit</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">timeout =</span> timeout.existing))</span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">timeout =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span></code></pre></div>
<p><strong>Data dictionaries</strong> can be stored directly in the DB too. I store the contents of each <code>README.md</code> in the <code>UCR_Archive2018/*</code> folder in a data dictionary table called <code>ucr_00_meta</code>. This allows me to programatically call the dictionary in downstream development.</p>
<p><img src="https://www.rsangole.com/posts/2021-08-18-making-an-anomaly-database/ucr_00_meta.png" class="img-fluid"></p>
<p><strong>Shiny</strong> can be effectively used for quick exploration. Here‚Äôs an example of something I‚Äôm building for myself. The dashboard pulls data from PostgreSQL directly. UCR metadata is also pulled from the db rendered at the top of each page, making it quick to browse through the datasets. As I add more datasets, I keep expanding this dashboard.</p>
<p><img src="https://www.rsangole.com/posts/2021-08-18-making-an-anomaly-database/anomaly-db-shiny.gif" class="img-fluid"></p>


</section>

 ]]></description>
  <category>Docker</category>
  <category>Postgres</category>
  <guid>https://www.rsangole.com/posts/2021-08-18-making-an-anomaly-database/2021-08-18-making-an-anomaly-database.html</guid>
  <pubDate>Wed, 18 Aug 2021 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Docker based RStudio &amp; PostgreSQL</title>
  <dc:creator>Rahul </dc:creator>
  <link>https://www.rsangole.com/posts/2021-08-03_docker-based-rstudio-postgres/2021-08-03-docker-based-rstudio-postgres.html</link>
  <description><![CDATA[ 



<p><em>This is part one of the two part post related to Docker, PostgreSQL databases and Anomaly data-sets.</em></p>
<section id="background" class="level1">
<h1>Background</h1>
<p>In recent LinkedIn posts (<a href="https://www.linkedin.com/posts/rahulsangole_rstats-datascience-analytics-activity-6824183826877698048-0ImA">original</a> and <a href="https://github.com/RamiKrispin">Rami</a>‚Äôs <a href="https://www.linkedin.com/posts/rami-krispin_anomalydetection-data-timeseries-activity-6825126331672612864-MEks">repost</a>) and <a href="https://twitter.com/rsangole/status/1418418477329620993">tweet</a>, I asked the internet for their favorite datasets for anomaly detection problems, particularly in the time-series domain. I got lots of responses, and now have a massive amount of data to play with, thank you folks who responded.</p>
<p>To play with these data, I wanted a better solution than keeping data as CSV files, <code>qs</code> objects, or in R Packages. I wanted a database to store the raw input data, my processed data and algorithm results. While I‚Äôve setup databases in the past the traditional way, this time I wanted the entire codebase to be portable &amp; reproducible.</p>
<p>As a result, I setup everything using Docker and it works seemlessly. If you‚Äôd like to learn how to do so, follow along my next posts:</p>
<ul>
<li>Part I - (this post) Will teach you how to setup a simple reproducible Docker based workflow for a personal PostgreSQL Database + RStudio for code development</li>
<li>Part II - (next post) Will be the ETL pipelines for anomaly data</li>
</ul>
</section>
<section id="why-should-you-read-this" class="level1">
<h1>Why should you read this?</h1>
<p>At the end of this tutorial, you‚Äôll be able to rapidly setup a Docker based personal<sup>1</sup> PostgreSQL database. You will learn how to quickly deploy PostgreSQL &amp; RStudio using <code>docker-compose</code>. You will be able to access the database in R and begin development immediately. And most importantly, the whole process will be fully reproducible as you inherit the benefits of setup scripts and Docker.</p>
<p><em>This tutorial assumes you‚Äôre familiar with Docker and RStudio in a Docker environment. If you‚Äôre not, I recommend reading <a href="https://rsangole.netlify.app/post/2020/10/10/reproducible-work-in-r/">Reproducible Work in R</a> first.</em></p>
</section>
<section id="overview" class="level1">
<h1>Overview</h1>
<p>You will be launching two Docker images:</p>
<ol type="1">
<li>A PostgreSQL image. I choose <a href="https://hub.docker.com/_/postgres/"><code>postgres:13.3</code></a></li>
<li>An RStudio image. I choose <a href="https://hub.docker.com/r/hatmatrix/blog/tags?page=1&amp;ordering=last_updated"><code>hatmatrix/blog:base</code></a> <sup>2</sup></li>
</ol>
<p>To permanently store your data beyond the life of the containers, you will mount two volumes, one for each container. I chose:</p>
<ol type="1">
<li>For PostgreSQL: <code>$HOME/docker/volumes/postgres</code></li>
<li>For R Projects: <code>$HOME/github</code></li>
</ol>
<p><img src="https://www.rsangole.com/posts/2021-08-03_docker-based-rstudio-postgres/docker-compose.png" class="img-fluid"><sup>3</sup></p>
<p>None of these paths, except for the in-container PostgreSQL are special; you can customize the others to your liking. By default, <code>postgres:13.3</code> expects the database to be at <code>/var/lib/postgresql/data</code>. If you choose another database, modify this accordingly.</p>
<p>I use <code>docker-compose</code> to launch both PostgreSQL and RStudio services together. It‚Äôs convenient while also ensuring the PostgreSQL service runs first followed by RStudio. It‚Äôs easy to start or stop all the services using just a few commands.</p>
</section>
<section id="first-time-setup" class="level1">
<h1>First Time Setup</h1>
<p>You need to run these steps the first time you‚Äôre setting up the PostgreSQL database. I‚Äôve stored these steps in <a href="https://github.com/rsangole/postgres/blob/master/00-postgres-init.sh"><code>00-postgres-init.sh</code>.</a></p>
<section id="directory-setup" class="level3">
<h3 class="anchored" data-anchor-id="directory-setup">1 - Directory Setup</h3>
<p>You need a local directory to store the PostgreSQL database in. Lines 3-10 take care of this for you.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create directory if does not exist</span></span>
<span id="cb1-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-d</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$HOME</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/docker/volumes/postgres"</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span> </span>
<span id="cb1-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">then</span></span>
<span id="cb1-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Directory </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$HOME</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/docker/volumes/postgres exists."</span> </span>
<span id="cb1-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb1-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error: Directory </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$HOME</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/docker/volumes/postgres does not exists."</span></span>
<span id="cb1-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$HOME</span>/docker/volumes/postgres</span>
<span id="cb1-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">fi</span></span></code></pre></div>
</section>
<section id="postgresql-setup" class="level3">
<h3 class="anchored" data-anchor-id="postgresql-setup">2 - PostgreSQL Setup</h3>
<p>Now it‚Äôs time to setup the database. You need two steps at a minimum to get started:</p>
<ol type="1">
<li>A new ‚Äòrole‚Äô (akin to a login) with rights to create new databases.</li>
<li>At least one database to work in. In my script, I‚Äôm making two: <code>work</code> and <code>anomaly</code>.</li>
</ol>
<p>To manipulate the database, you need a PostgreSQL server running to process the <code>psql</code> commands. You‚Äôll launch one using <code>docker run</code>. You need the correct volume mounted using <code>-v</code>. Next, we create the role and databases by piping <code>psql</code> commands into <code>docker exec</code>. Then, we stop the container.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># launch the postgres image called 'post_setup',</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># attach it to the local volume</span></span>
<span id="cb2-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--rm</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span> post_setup <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> POSTGRES_USER=postgres <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> POSTGRES_PASSWORD=docker <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> 5432:5432 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$HOME</span>/docker/volumes/postgres:/var/lib/postgresql/data <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-9">  postgres:13.3</span>
<span id="cb2-10"></span>
<span id="cb2-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create a new role, and two databases</span></span>
<span id="cb2-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CREATE ROLE rahul WITH PASSWORD 'pass' CREATEDB LOGIN;</span></span>
<span id="cb2-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">CREATE DATABASE work; CREATE DATABASE anomaly;"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-14"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> exec <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> post_setup <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-15"> psql <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-U</span> postgres</span>
<span id="cb2-16"></span>
<span id="cb2-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># stop the docker container</span></span>
<span id="cb2-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> stop post_setup</span></code></pre></div>
<p>In summary, now I have a PostgresSQL database:</p>
<ul>
<li>stored at <code>$HOME/docker/volumes/postgres</code></li>
<li>with a new role <code>rahul</code> and password <code>pass</code></li>
<li>with 2 databases: <code>work</code> and <code>anomaly</code></li>
</ul>
</section>
</section>
<section id="daily-workflow" class="level1">
<h1>Daily Workflow</h1>
<section id="tldr-how-do-you-get-going" class="level3">
<h3 class="anchored" data-anchor-id="tldr-how-do-you-get-going">tldr: How do you get going?</h3>
<ol type="1">
<li>Store <a href="https://github.com/rsangole/postgres/blob/master/docker-compose.yml"><code>docker-compose.yml</code></a> in a local directory</li>
<li>Modify it if you‚Äôve changed my chosen images/directories</li>
<li>In shell, run <code>docker-compose up -d</code></li>
</ol>
<p><em>protip</em>: to launch a browser (firefox for me) directly into RStudio as well, run this command in the directory where you have <code>docker-compose.yml</code>:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker-compose</span> up <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">firefox</span> localhost:8787</span></code></pre></div>
<p><em>pro-protip</em>: save an alias and generalize the command. The <code>-f</code> arg instructs <code>docker-compose</code> which file you‚Äôd like to use. Now <a href="https://www.youtube.com/watch?v=0yBoY1SQA5A"><code>engage</code></a> can be run from anywhere in the system.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> engage=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'docker-compose \</span></span>
<span id="cb4-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            -f $HOME/github/docker/docker-compose.yml \</span></span>
<span id="cb4-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            up -d; firefox localhost:8787'</span> </span></code></pre></div>
</section>
<section id="the-breakdown" class="level3">
<h3 class="anchored" data-anchor-id="the-breakdown">The breakdown</h3>
<p>What‚Äôs in <a href="https://github.com/rsangole/postgres/blob/master/docker-compose.yml"><code>docker-compose.yml</code></a>? We‚Äôre creating two services, one called <code>db</code> and the other <code>rstudio</code>.<sup>4</sup></p>
<p>Let‚Äôs look at <code>db</code> first. Most of the arguments will look familiar if you‚Äôre familiar with <code>docker run</code> args. What‚Äôs new here is the <code>restart: unless-stopped</code> arg which tells Docker to only start PostgreSQL if it‚Äôs currently stopped.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">version</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3.3"</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">services</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb5-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">db</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb5-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> postgres:13.3</span></span>
<span id="cb5-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">restart</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> unless-stopped</span></span>
<span id="cb5-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">environment</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb5-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">POSTGRES_DB</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"anomaly"</span></span>
<span id="cb5-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">POSTGRES_USER</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rahul"</span></span>
<span id="cb5-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">POSTGRES_PASSWORD</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pass"</span></span>
<span id="cb5-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ports</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb5-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5432:5432"</span></span>
<span id="cb5-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">volumes</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb5-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bind"</span></span>
<span id="cb5-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">source</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"$HOME/docker/volumes/postgres"</span></span>
<span id="cb5-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">target</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/var/lib/postgresql/data"</span></span></code></pre></div>
<p>The 2nd service is <code>rstudio</code>. Apart from the typical args, the interesting arg here is <code>depends_on</code> which tells Docker to only run this image <em>after</em> the database is up and running. Fantastic!</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb6-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rstudio</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb6-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> hatmatrix/blog:base</span></span>
<span id="cb6-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ports</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb6-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8787:8787"</span></span>
<span id="cb6-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3838:3838"</span></span>
<span id="cb6-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">environment</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb6-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DISABLE_AUTH</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"true"</span></span>
<span id="cb6-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">volumes</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb6-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bind"</span></span>
<span id="cb6-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">source</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"$HOME/github"</span></span>
<span id="cb6-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">target</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/rstudio"</span></span>
<span id="cb6-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">depends_on</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb6-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"db"</span></span></code></pre></div>
</section>
<section id="connecting-via-r" class="level2">
<h2 class="anchored" data-anchor-id="connecting-via-r">Connecting via R</h2>
<p>Use <a href="https://github.com/rsangole/postgres/blob/master/postgres.R"><code>postgres.R</code></a> to test your connection. Run your <code>DBI::</code> commands you would normally, <em>except</em> for one key difference.</p>
<p>While making the connection, make sure the name of the <code>host</code> is the name of the database service you‚Äôve chosen in <code>docker-compose.yml</code>. (Outside docker, you would have typically used <code>localhost</code> to connect to a local PostgreSQL server).</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">con <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbConnect</span>(</span>
<span id="cb7-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">drv =</span> RPostgres<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Postgres</span>(),</span>
<span id="cb7-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dbname =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"anomaly"</span>,</span>
<span id="cb7-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">host =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"db"</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># this needs to be the name of the postgres service</span></span>
<span id="cb7-5">               <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (line 3 in docker-compose.yml)</span></span>
<span id="cb7-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">user =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rahul"</span>,</span>
<span id="cb7-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">password =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pass"</span>,</span>
<span id="cb7-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">port =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5432</span></span>
<span id="cb7-9">)</span></code></pre></div>
<p>That‚Äôs it! You‚Äôre off to the races now. Use the DB as you normally would using <a href="https://dbi.r-dbi.org/"><code>{DBI}</code></a>.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">con <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbListTables</span>()</span>
<span id="cb8-2">con <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tbl</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"table_name"</span>)</span></code></pre></div>
</section>
<section id="to-stop-services" class="level2">
<h2 class="anchored" data-anchor-id="to-stop-services">To Stop Services</h2>
<p>You have two options here:</p>
<ol type="1">
<li><code>docker-compose stop</code> will stop the services, which you can restart using <code>docker-compose start</code>.</li>
<li><code>docker-compose down</code> will and remove containers as well. Run <code>docker-compose up</code> to get going once again.</li>
</ol>


</section>
</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>I harp on ‚Äòpersonal‚Äô given I‚Äôm not setting up appropriate roles, auth etc needed in a work environment. But, it‚Äôs good enough for my personal use.‚Ü©Ô∏é</p></li>
<li id="fn2"><p>This is my own image based off of <a href="https://hub.docker.com/r/rocker/rstudio"><code>rocker/rstudio</code></a>‚Ü©Ô∏é</p></li>
<li id="fn3"><div>
DB icon by <a href="https://www.flaticon.com/authors/pixel-perfect" title="Pixel perfect">Pixel perfect</a>
</div>
<div>
Folder icon by <a href="https://www.flaticon.com/authors/icongeek26" title="Icongeek26">Icongeek26</a>
</div>
<div>
RAM icon by <a href="https://www.freepik.com" title="Freepik">Freepik</a>
</div>
<div>
Storage icon by <a href="https://smashicons.com/" title="Smashicons">Smashicons</a>
</div>
‚Ü©Ô∏é</li>
<li id="fn4"><p>These are just labels, you can call them what you‚Äôd like‚Ü©Ô∏é</p></li>
</ol>
</section></div> ]]></description>
  <category>Docker</category>
  <category>Postgres</category>
  <guid>https://www.rsangole.com/posts/2021-08-03_docker-based-rstudio-postgres/2021-08-03-docker-based-rstudio-postgres.html</guid>
  <pubDate>Sat, 07 Aug 2021 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Enhance ETL pipeline monitoring with text plots</title>
  <dc:creator>Rahul </dc:creator>
  <link>https://www.rsangole.com/posts/2021-07-19_enhance-etl-text-plots/2021-07-19-enhance-etl-text-plots.html</link>
  <description><![CDATA[ 



<p>I often use data ETL pipeline scripts cron-jobed on text-only interfaces (be it Jenkins, or cron-jobed in shell). While I print descriptive stats to keep tabs on ETL runs, I‚Äôve found <a href="https://cran.r-project.org/web/packages/txtplot/index.html"><code>{txtplot}</code></a> adds a higher level of fidelity in my logfiles. <a href="https://www.rdocumentation.org/collaborators/name/Bjoern%20Bornkamp">Bjoern Bornkamp</a>‚Äôs package offers a simple and effective way to enhance my logfiles.</p>
<p>Will I use them to visualize my data? No.&nbsp;Are they useful tokeep an eye on your pipelines and quickly diagnose issues? Yes, I‚Äôve been able to diagnose more than a few data quality spills very quickly because I had these rudimentary plots in my logfiles.</p>
<p>Some examples‚Ä¶</p>
<section id="whats-the-distribution-of-a-variable" class="level3">
<h3 class="anchored" data-anchor-id="whats-the-distribution-of-a-variable">What‚Äôs the distribution of a variable?</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>starwars <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">across</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">where</span>(is.character), forcats<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>fct_infreq))</span>
<span id="cb1-3"></span>
<span id="cb1-4">dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-5">  tidyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drop_na</span>(height) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(height) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">txtdensity</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"starwars: height distribution"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>      +-----------+--------------+-------oo----+-------------+-------+
 0.02 +                                oooooo                        +
      |                               oo    oo                       |
0.015 +                              oo      o                       +
      |                             oo        o                      |
 0.01 +                             o         oo                     +
      |                            o           oo                    |
0.005 +         ooo              oo              ooo                 +
      |  oooooooo oooooooooooooooo                 ooooooooo   ooo   |
    0 +-----------+--------------+-------------+-----------ooooo-----+
                 100            150           200           250       
                       starwars: height distribution                  </code></pre>
</div>
</div>
</section>
<section id="counts-of-a-factor" class="level3">
<h3 class="anchored" data-anchor-id="counts-of-a-factor">Counts of a factor?</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">txtbarchart</span>(dat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sex, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>   +--x--------------+--------------+--------------+--------------+--+
60 +  x                                                              +
   |  x                                                              |
   |  x                                                              |
40 +  x                                                              +
   |  x                                                              |
20 +  x              x                                               +
   |  x              x                                               |
   |  x              x              x              x              x  |
 0 +--x--------------x--------------x--------------x--------------x--+
      1              2              3              4              5   
Legend: 1=male, 2=female, 3=none, 4=hermaphroditic, 5=NA's</code></pre>
</div>
</div>
</section>
<section id="boxplots" class="level3">
<h3 class="anchored" data-anchor-id="boxplots">Boxplots</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">txtboxplot</span>(dat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>height, dat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>mass, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> 0            50            100           150           200           
 |-------------+-------------+-------------+-------------+-----------|
                                                +---+--+              
1                                       --------|   |  |---------     
                                                +---+--+              
                 +-----+-+                                            
2     -----------|     | |----------                                  
                 +-----+-+                                            
     +                                                                
3    |                                                                
     +                                                                
Legend: 1=dat$height, 2=dat$mass, 3=12</code></pre>
</div>
</div>
</section>
<section id="time-series-plots" class="level3">
<h3 class="anchored" data-anchor-id="time-series-plots">Time series plots</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">txtplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> LakeHuron, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1875</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1972</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"level"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  582 +--*--+----------+-----------+----------+-----------+----------+
      |      ****                                                    |
  581 +  *****  *                       *            **              +
l 580 +    *     ** *     ***    **                  * *       ***   +
e 579 +           **  ****   * * ***     *      ****   *  *     *    +
v     |             ** *     **    **   *       *       *  *  **     |
e 578 +                       * *    * *     **     *   *  *  *      +
l 577 +                               *  ** ** *         ** **       +
      |                                    *                         |
  576 +-----+----------+-----------+----------+-----------+-*--------+
          1880       1900        1920       1940        1960          
                                   year                               </code></pre>
</div>
</div>
<p>ACF plots, though I‚Äôve not used these in production yet.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">txtacf</span>(sunspot.year, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  1 +--*--------------+-------------+--------------+--------------+--+
    |  *                                                             |
    |  *  *                                                          |
    |  *  *                         *  *                             |
0.5 +  *  *  *                   *  *  *  *                          +
    |  *  *  *                   *  *  *  *                       *  |
    |  *  *  *                 * *  *  *  *  *                    *  |
  0 +  *  *  *  *  *  *  *  *  * *  *  *  *  *  *  *  *  *  *  *  *  +
    |              *  *  *  *                   *  *  *  *  *        |
    |              *  *  *                         *  *  *           |
    +--+--------------*-------------+--------------+--------------+--+
       0              5            10             15             20   </code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>Visualization</category>
  <guid>https://www.rsangole.com/posts/2021-07-19_enhance-etl-text-plots/2021-07-19-enhance-etl-text-plots.html</guid>
  <pubDate>Mon, 19 Jul 2021 04:00:00 GMT</pubDate>
  <media:content url="https://www.rsangole.com/posts/2021-07-19_enhance-etl-text-plots/graph.png" medium="image" type="image/png" height="59" width="144"/>
</item>
<item>
  <title>Visualizing Correlations</title>
  <dc:creator>Rahul </dc:creator>
  <link>https://www.rsangole.com/posts/2021-04-13-30-day-chart-challenge/2021-04-13-30-day-chart-challenge.html</link>
  <description><![CDATA[ 



<div class="cell page-columns page-full" data-layout-align="center">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggdark)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggtext)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggforce)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># https://data.world/markmarkoh/kepler-confirmed-planets</span></span>
<span id="cb1-8">dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data.table<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fread</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"planets.csv"</span>)</span>
<span id="cb1-9"></span>
<span id="cb1-10">hull_a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(st_rad, st_mass) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(st_rad <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.335</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> st_rad <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.95</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> st_mass <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-13">  tidyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drop_na</span>()</span>
<span id="cb1-14">cor_a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_number</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">accuracy =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>)(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cor</span>(hull_a)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span>
<span id="cb1-15"></span>
<span id="cb1-16">hull_b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(st_rad, st_mass) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(st_rad <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.95</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-19">  tidyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drop_na</span>()</span>
<span id="cb1-20">cor_b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_number</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">accuracy =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>)(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cor</span>(hull_b)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span>
<span id="cb1-21"></span>
<span id="cb1-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># https://coolors.co/1c1f35-151728-44243e-723054-68838c-4e636a-4ab6d3</span></span>
<span id="cb1-23">pt_color <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#6BC3DB"</span></span>
<span id="cb1-24">hull_color <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#68838C"</span></span>
<span id="cb1-25">axis_text_color <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#68838C"</span></span>
<span id="cb1-26">caption_color <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#4E636A"</span></span>
<span id="cb1-27">grid_color <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#1C1F35"</span></span>
<span id="cb1-28">plot_title_color <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#903C6A"</span></span>
<span id="cb1-29">bg_color <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#151728"</span></span>
<span id="cb1-30"></span>
<span id="cb1-31">dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> st_rad, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> st_mass)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(</span>
<span id="cb1-34">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> pt_color,</span>
<span id="cb1-35">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>,</span>
<span id="cb1-36">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb1-37">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span></span>
<span id="cb1-38">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-39">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_mark_hull</span>(</span>
<span id="cb1-40">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> hull_a,</span>
<span id="cb1-41">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Group A</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Corr: {cor_a}"</span>)),</span>
<span id="cb1-42">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">concavity =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb1-43">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> hull_color,</span>
<span id="cb1-44">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>,</span>
<span id="cb1-45">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">radius =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">02</span>,</span>
<span id="cb1-46">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">con.cap =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb1-47">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">con.colour =</span> hull_color,</span>
<span id="cb1-48">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">con.border =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>,</span>
<span id="cb1-49">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label.fill =</span> bg_color,</span>
<span id="cb1-50">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label.colour =</span> hull_color,</span>
<span id="cb1-51">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label.margin =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">margin</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mm"</span>)</span>
<span id="cb1-52">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-53">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_mark_hull</span>(</span>
<span id="cb1-54">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> hull_b,</span>
<span id="cb1-55">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Group B</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Corr: {cor_b}"</span>)),</span>
<span id="cb1-56">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">concavity =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb1-57">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> hull_color,</span>
<span id="cb1-58">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>,</span>
<span id="cb1-59">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">radius =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">02</span>,</span>
<span id="cb1-60">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">con.cap =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb1-61">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">con.colour =</span> hull_color,</span>
<span id="cb1-62">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">con.border =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>,</span>
<span id="cb1-63">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label.fill =</span> bg_color,</span>
<span id="cb1-64">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label.colour =</span> hull_color,</span>
<span id="cb1-65">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label.margin =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">margin</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mm"</span>)</span>
<span id="cb1-66">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-67">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(</span>
<span id="cb1-68">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"curve"</span>,</span>
<span id="cb1-69">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.09</span>,</span>
<span id="cb1-70">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.06</span>,</span>
<span id="cb1-71">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.09</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>,</span>
<span id="cb1-72">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.06</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb1-73">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">curvature =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb1-74">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mm"</span>)),</span>
<span id="cb1-75">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> hull_color</span>
<span id="cb1-76">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-77">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(</span>
<span id="cb1-78">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>,</span>
<span id="cb1-79">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.09</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>,</span>
<span id="cb1-80">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.06</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb1-81">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Each point</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">is a star"</span>,</span>
<span id="cb1-82">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>,</span>
<span id="cb1-83">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.4</span>,</span>
<span id="cb1-84">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> hull_color</span>
<span id="cb1-85">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-86">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trans =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"log10"</span>,</span>
<span id="cb1-87">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span></span>
<span id="cb1-88">                       scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_number</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">suffix =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>,</span>
<span id="cb1-89">                                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">accuracy =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-90">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span></span>
<span id="cb1-91">                       scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_number</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">suffix =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>,</span>
<span id="cb1-92">                                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">accuracy =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-93">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dark_theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-94">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clip =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-95">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb1-96">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> bg_color, </span>
<span id="cb1-97">                                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> bg_color),</span>
<span id="cb1-98">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.minor =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb1-99">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.major =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> grid_color),</span>
<span id="cb1-100">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> axis_text_color),</span>
<span id="cb1-101">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> axis_text_color),</span>
<span id="cb1-102">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> axis_text_color),</span>
<span id="cb1-103">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_markdown</span>(</span>
<span id="cb1-104">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Inter-Medium"</span>,</span>
<span id="cb1-105">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> plot_title_color,</span>
<span id="cb1-106">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span>,</span>
<span id="cb1-107">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">margin =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">margin</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">unit =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"line"</span>)</span>
<span id="cb1-108">    ),</span>
<span id="cb1-109">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.title.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot"</span>,</span>
<span id="cb1-110">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.subtitle =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_markdown</span>(</span>
<span id="cb1-111">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> plot_title_color,</span>
<span id="cb1-112">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,</span>
<span id="cb1-113">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lineheight =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span>,</span>
<span id="cb1-114">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">margin =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">margin</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">unit =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"line"</span>)</span>
<span id="cb1-115">    ),</span>
<span id="cb1-116">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.margin =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">margin</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">unit =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"line"</span>),</span>
<span id="cb1-117">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>),</span>
<span id="cb1-118">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.caption =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> caption_color, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb1-119">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-120">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb1-121">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Radius compared to the Sun"</span>,</span>
<span id="cb1-122">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mass compared to the Sun"</span>,</span>
<span id="cb1-123">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Stars of the Kepler K2 Mission"</span>,</span>
<span id="cb1-124">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The Kepler K2 mission was a 5-year long expedition searching for Earth-like or smaller planets orbiting stars in our galaxy.&lt;br /&gt;Kepler was a special-purpose spacecraft that precisely measured the light variations from thousands of distant stars, looking for planetary transits.&lt;br /&gt;This graphic shows the relationship between the stellar mass &amp; stellar radii of {n} stars, with a potential {pl_n} orbiting exoplanets.&lt;br /&gt;It's fascinating to see two distinct clusters: stars with very high correlation between mass and radius, and those with radii &gt; 3x our sun, &lt;br /&gt; with near-zero correlation between mass &amp; radii."</span>,</span>
<span id="cb1-125">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pl_n =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_comma</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">accuracy =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)(dat[,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(pl_pnum)]),</span>
<span id="cb1-126">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_comma</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">accuracy =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)(dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count</span>(pl_hostname) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>())),</span>
<span id="cb1-127">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DAY 13 - #30DayChartChallenge</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DATASET BY @markmarkoh</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">PLOT BY @rsangole"</span></span>
<span id="cb1-128">  )</span></code></pre></div>
<div class="cell-output-display column-page">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.rsangole.com/posts/2021-04-13-30-day-chart-challenge/2021-04-13-30-day-chart-challenge_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid figure-img" width="1152"></p>
</figure>
</div>
</div>
</div>
<!-- ## Day 14 - Space -->
<!-- ```{r echo=TRUE, message=FALSE, warning=FALSE} -->
<!-- library(tidyverse) -->
<!-- library(ggplot2) -->
<!-- library(ggdark) -->
<!-- library(ggtext) -->
<!-- library(ggforce) -->
<!-- # https://api.nasa.gov -->
<!-- download_mars_rover_manifests <- function(rover_name, -->
<!--                                           BASE_URL = "https://api.nasa.gov/mars-photos/api/v1/", -->
<!--                                           END_PT = "manifests/"){ -->
<!--   curl_url <- glue::glue("curl -s '{BASE_URL}{END_PT}{rover_name}?api_key={Sys.getenv(\"NASA_API_KEY\")}'") -->
<!--   jq <- "'.photo_manifest.photos[] | {sol: .sol, date: .earth_date, photos: .total_photos, cameras: .cameras | to_entries[]} | [.sol, .date, .photos, .cameras.value] | @tsv'" -->
<!--   cmd <- glue::glue("{curl_url} | jq -r {jq}") -->

<!--   data.table::fread( -->
<!--     cmd = cmd, -->
<!--     col.names = c("sol", "date", "photos", "camera") -->
<!--   ) %>%  -->
<!--     dplyr::mutate(rover = rover_name) -->
<!-- } -->
<!-- rovers <- c("curiosity", "opportunity", "spirit") -->
<!-- dat <- lapply(rovers, download_mars_rover_manifests) %>%  -->

<!--   data.table::rbindlist() -->
<!-- dat[, date := as.Date(date)] -->
<!-- ``` -->
<!-- ```{r} -->
<!-- dat %>%  -->
<!--   group_by(sol, rover) %>%  -->
<!--   summarize(sol_photos = sum(photos)) %>%  -->
<!--   ggplot(aes(sol, sol_photos)) +  -->
<!--   geom_line(aes(color = rover)) -->
<!-- ``` -->
<!-- ```{r} -->
<!-- dat %>%  -->
<!--   group_by(sol, rover) %>%  -->
<!--   summarize(sol_photos = sum(photos)) %>%  -->
<!-- # %>%  -->
<!-- #   tidyr::pivot_wider(names_from = "rover", values_from = "sol_photos", -->
<!-- #                      values_fill = 0) %>%  -->
<!-- #   ungroup() %>%  -->

<!--   data.table::as.data.table()-> dat_long -->
<!-- dat_long[, cur_cusum := cumsum(curiosity)] -->
<!-- dat_long[, oppr_cusum := cumsum(curiosity)] -->
<!-- dat_long <- dat[, .(sol_photos = sum(photos)), .(sol, rover)] -->

<!-- data.table::setkey(dat_long, "sol") -->
<!-- cumsum_photos <- dat_long[, .(sol_photos = cumsum(sol_photos)), .(rover)] -->
<!-- cumsum_photos[, sol := 1:.N, rover] -->
<!-- cumsum_photos %>%  -->
<!--   ggplot(aes(sol, sol_photos)) +  -->
<!--   geom_line(aes(color = rover)) +  -->
<!--   scale_y_continuous(labels = scales::label_number_si()) + -->
<!--   theme_bw() -->
<!-- ``` -->
<!-- ```{r fig.height=7} -->
<!-- library(ggTimeSeries) -->
<!-- library(hrbrthemes) -->
<!-- cam_tbl <- tribble( -->
<!--   ~camera, ~cam, -->
<!-- "PANCAM",  "Panoramic", -->
<!-- "FHAZ",    "Front Hazard", -->
<!-- "RHAZ",    "Rear Hazard", -->
<!-- "NAVCAM",  "Navigation", -->
<!-- "MAST",    "Mast", -->
<!-- "CHEMCAM", "Chemistry", -->
<!-- "MAHLI",   "Hand Lens", -->
<!-- "MARDI",   "Descent", -->
<!-- "MINITES", "Thermal", -->
<!-- "ENTRY", "Entry") -->
<!-- dat %>%  -->
<!--   select(sol, photos, rover) %>%  -->
<!--   distinct() %>%  -->
<!--   # pivot_wider(names_from = "rover",  -->
<!--   #             values_from = "photos",  -->
<!--   #             values_fill = 0) %>% -->
<!--   # pivot_longer(-sol, -->
<!--   #              values_to = "photos", -->
<!--   #              names_to = "rover") %>%  -->
<!--   arrange(sol) %>%  -->
<!--   ggplot(aes(x = sol,  -->
<!--            y = photos, -->
<!--            color = rover, -->
<!--            fill = rover)) + -->
<!--  # geom_area() +  -->
<!--  scale_y_continuous(labels = scales::label_number_si()) + -->
<!--  geom_line() + -->
<!--   # facet_wrap(~rover, ncol = 1) +# scales = "free_y") + -->
<!--   theme_ft_rc() + -->
<!--   theme(legend.position = "none") + -->
<!--   labs(x = "sol", -->
<!--        y = "Number of Photos Taken")-> p1 -->
<!-- gimme_pie <- function(dat,  -->
<!--                       .rover, -->
<!--                       legend_pos = "none") { -->
<!--   dat %>% -->
<!--     group_by(rover) %>% -->
<!--     count(camera) %>% -->
<!--     left_join(cam_tbl) %>% -->
<!--     group_by(rover) %>% -->
<!--     mutate(total_photos = sum(n), -->
<!--            pc = n / total_photos) %>% -->
<!--     arrange(rover, n) %>% -->
<!--     mutate( -->
<!--       ymax = cumsum(pc), -->
<!--       ymin = c(0, head(ymax, -1)), -->
<!--       labelPosition = (ymin + ymax) / 2, -->
<!--       label = glue::glue("{scales::label_number_si()(n)}") -->
<!--     ) %>% -->
<!--     filter(rover == .rover) %>% -->
<!--     mutate(cam = factor(cam, levels = cam_tbl$cam)) %>%  -->
<!--     ggplot(aes( -->
<!--       ymax = ymax, -->
<!--       ymin = ymin, -->
<!--       xmax = 4, -->
<!--       xmin = 3, -->
<!--       fill = cam -->
<!--     )) + -->
<!--     geom_rect() + -->
<!--     annotate(geom = "text",  -->
<!--              x = 2,  -->
<!--              y = 0,  -->
<!--              label = toupper(.rover), -->
<!--              size = 4.5, -->
<!--              color = "white") + -->
<!--     coord_polar(theta = "y") + -->
<!--     xlim(c(2, 4)) + -->
<!--     theme_ft_rc() + -->
<!--     theme( -->
<!--       panel.grid.minor = element_blank(), -->
<!--       panel.grid.major = element_blank(), -->
<!--       axis.text = element_blank(), -->
<!--       axis.text.x = element_blank(), -->
<!--       axis.text.y = element_blank(), -->
<!--       text = element_blank(), -->
<!--       axis.title.x = element_blank(), -->
<!--       axis.title.y = element_blank(), -->
<!--       legend.position = legend_pos, -->
<!--       strip.text = element_blank(), -->
<!--       plot.margin = unit(c(1,1,1,1), "mm"), -->
<!--       panel.border = element_blank() -->
<!--     ) -->
<!-- } -->
<!-- p2 <- gimme_pie(dat, "curiosity") -->
<!-- p3 <- gimme_pie(dat, "spirit") -->
<!-- p4 <- gimme_pie(dat, "opportunity") -->
<!-- # p1 / (p2 + p3 + p4) +  -->
<!-- #   plot_layout(heights = c(1.5, 1)) +  -->
<!-- #   theme(panel.background = element_rect(fill = theme_ft_rc()$rect$fill)) -->
<!-- # install.packages("cowplot") -->
<!-- library("cowplot") -->
<!-- cowplot::plot_grid( -->
<!--   p1,  -->
<!--   cowplot::plot_grid(p3, p4, p2, nrow = 1), -->
<!--   nrow = 2, -->
<!--   rel_heights = c(2, 1) -->
<!-- ) +  -->
<!--   theme(panel.background = element_rect(fill = theme_ft_rc()$rect$fill)) -->
<!-- ``` -->
<!-- ```{r} -->
<!-- # install.packages("billboarder") -->
<!-- library("billboarder") -->
<!-- dat %>% -->
<!--     group_by(rover) %>% -->
<!--     count(camera) %>% -->
<!--     left_join(cam_tbl) %>% -->
<!--     group_by(rover) %>% -->
<!--     mutate(total_photos = sum(n), -->
<!--            pc = n / total_photos) %>% -->
<!--     arrange(rover, n) %>% -->
<!--     mutate( -->
<!--       ymax = cumsum(pc), -->
<!--       ymin = c(0, head(ymax, -1)), -->
<!--       labelPosition = (ymin + ymax) / 2, -->
<!--       label = glue::glue("{scales::label_number_si()(n)}") -->
<!--     ) %>% -->
<!--     filter(rover == "curiosity") %>% -->
<!--     mutate(cam = factor(cam, levels = cam_tbl$cam)) %>%  -->
<!--     ggplot(aes( -->
<!--       ymax = ymax, -->
<!--       ymin = ymin, -->
<!--       xmax = 4, -->
<!--       xmin = 3, -->
<!--       fill = cam -->
<!--     )) + -->
<!--     geom_rect() + -->
<!--     annotate(geom = "text",  -->
<!--              x = 2,  -->
<!--              y = 0,  -->
<!--              label = toupper("curiosity"), -->
<!--              size = 4.5, -->
<!--              color = "white") + -->
<!--     coord_polar(theta = "y") + -->
<!--     xlim(c(2, 4)) + -->
<!--     theme_ft_rc() + -->
<!--     theme( -->
<!--       panel.grid.minor = element_blank(), -->
<!--       panel.grid.major = element_blank(), -->
<!--       axis.text = element_blank(), -->
<!--       axis.text.x = element_blank(), -->
<!--       axis.text.y = element_blank(), -->
<!--       # text = element_blank(), -->
<!--       axis.title.x = element_blank(), -->
<!--       axis.title.y = element_blank(), -->
<!--       legend.position = "bottom", -->
<!--       legend.title = element_blank(), -->
<!--       legend.spacing.x = unit(6, 'mm'), -->
<!--       legend.direction = "horizontal", -->
<!--       strip.text = element_blank(), -->
<!--       plot.margin = unit(c(0,0,0,0), "mm"), -->
<!--       panel.border = element_blank(), -->
<!--       panel.background = element_rect(fill = theme_ft_rc()$rect$fill) -->
<!--     ) -->
<!-- ``` -->
<!-- ```{r} -->
<!-- dat_smooth <- dat %>%  -->
<!--   select(sol, photos, rover) %>%  -->
<!--   distinct() %>%  -->
<!--   pivot_wider(names_from = "rover",  -->
<!--               values_from = "photos",  -->
<!--               values_fill = 0) %>%  -->
<!--   arrange(sol) -->
<!-- dat_smooth$cur_low = lowess(dat_smooth$sol, dat_smooth$curiosity, -->
<!--                             f = 0.00001)$y -->
<!-- dat_smooth$cur_low = TTR::SMA(dat_smooth$curiosity, n = 10) -->
<!-- dat_smooth %>%  -->
<!--   ggplot(aes(x = sol)) + -->
<!--   geom_line(aes(y = curiosity)) + -->
<!--   geom_line(aes(y = cur_low), color = "red") -->
<!-- ``` -->
<!-- ```{r} -->
<!-- dat %>%  -->
<!--     select(sol, photos, rover) %>%  -->
<!--     distinct() %>%  -->
<!--   ggplot(aes(photos,fill=rover)) + -->
<!--   geom_density() + -->
<!--   theme_ft_rc() -->
<!-- ``` -->
<!-- ```{r} -->
<!-- dat_long_by_date <- dat[, .(sol_photos = sum(photos)), .(date, rover)] -->

<!-- data.table::setkey(dat_long_by_date, "date") -->
<!-- library(patchwork) -->
<!-- p1 <- dat_long_by_date %>% -->
<!--   filter(rover == "curiosity") %>% -->
<!--   ggplot_calendar_heatmap('date', -->
<!--                           'sol_photos', -->
<!--                           monthBorderSize = 0.1, -->
<!--                           dayBorderColour = 0.3) + -->
<!--   scale_fill_continuous(low = 'green', high = 'red') + -->
<!--   facet_wrap(~ Year, ncol = 1) +  -->
<!--   xlab(NULL) +  -->
<!--   ylab(NULL) +  -->
<!--   scale_fill_continuous(low = 'green', high = 'red') +  -->
<!--   theme( -->
<!--     axis.text = element_blank(), -->
<!--     axis.ticks = element_blank(), -->
<!--     panel.grid = element_blank(), -->
<!--     panel.background = element_blank() -->
<!-- ,    # legend.position = 'none', -->
<!--     strip.background = element_blank() -->
<!--   ) -->
<!-- p2 <- dat_long_by_date %>% -->
<!--   filter(rover == "spirit") %>% -->
<!--   ggplot_calendar_heatmap('date', -->
<!--                           'sol_photos', -->
<!--                           monthBorderSize = 0.1, -->
<!--                           dayBorderColour = 0.3) + -->
<!--   scale_fill_continuous(low = 'green', high = 'red') + -->
<!--   facet_wrap(~ Year, ncol = 1) +  -->
<!--   xlab(NULL) +  -->
<!--   ylab(NULL) +  -->
<!--   scale_fill_continuous(low = 'green', high = 'red') +  -->
<!--   theme( -->
<!--     axis.text = element_blank(), -->
<!--     axis.ticks = element_blank(), -->
<!--     panel.grid = element_blank(), -->
<!--     panel.background = element_blank() -->
<!-- ,    # legend.position = 'none', -->
<!--     strip.background = element_blank() -->
<!--   ) -->
<!-- p1 | p2 -->
<!-- ``` -->
<!-- ```{r} -->
<!-- # install.packages("gganimate") -->
<!-- # library("gganimate") -->
<!-- # dat[,sum(photos),.(sol, camera,rover)] %>%  -->
<!-- #   filter(rover == "spirit") %>%  -->
<!-- #   ggplot(aes(area = V1, -->
<!-- #              fill = rover, -->
<!-- #              label = camera, -->
<!-- #              subgroup = rover)) + -->
<!-- #   geom_treemap() + -->
<!-- #   geom_treemap_subgroup_border() + -->
<!-- #   geom_treemap_text(fontface = "italic",  -->
<!-- #                     colour = "white",  -->
<!-- #                     place = "centre", -->
<!-- #                     grow = F) + -->
<!-- #  transition_time(sol) + -->
<!-- #   ease_aes('linear') + -->
<!-- #   labs(title = "Sol: {frame_time}")  -> p -->
<!-- #  -->
<!-- # anim_save("~/github/animated_treemap.gif", p, ) -->
<!-- ``` -->
<!-- ```{r} -->
<!-- cam_tbl <- tribble( -->
<!--   ~camera, ~cam, -->
<!-- "FHAZ",    "Front\nHazard", -->
<!-- "RHAZ",    "Rear\nHazard", -->
<!-- "MAST",    "Mast", -->
<!-- "CHEMCAM", "Chemistry", -->
<!-- "MAHLI",   "Hand Lens", -->
<!-- "MARDI",   "Descent", -->
<!-- "NAVCAM",  "Navigation", -->
<!-- "PANCAM",  "Panoramic", -->
<!-- "MINITES", "Thermal", -->
<!-- "ENTRY", "Entry") -->
<!-- # install.packages("treemapify") -->
<!-- library("treemapify") -->
<!-- # library("ggthemr") -->
<!-- dat[,sum(photos),.(camera,rover)] %>%  -->
<!--   left_join(cam_tbl) %>%  -->
<!--   ggplot(aes(area = V1, -->
<!--              fill = cam, -->
<!--              label = cam, -->
<!--              subgroup = rover)) + -->
<!--   geom_treemap() + -->
<!--   geom_treemap_subgroup_border(col = "black", -->
<!--                                size = 1) + -->
<!--   geom_treemap_text(fontface = "italic",  -->
<!--                     colour = "white",  -->
<!--                     place = "centre", -->
<!--                     grow = F) -->
<!--     ``` -->
<!-- ```{r} -->
<!-- # install.packages('hrbrthemes') -->
<!-- library("hrbrthemes") -->
<!-- dat %>%  -->
<!--   group_by(rover) %>%  -->
<!--   count(camera) %>%  -->
<!--   left_join(cam_tbl) %>%  -->
<!--   group_by(rover) %>%  -->
<!--   mutate(total_photos = sum(n), -->
<!--          pc = n / total_photos) %>%  -->
<!--   arrange(rover,n) %>%  -->
<!--   mutate(ymax = cumsum(pc), -->
<!--          ymin = c(0, head(ymax, -1)), -->
<!--          labelPosition = (ymin + ymax)/2, -->
<!--          label = glue::glue("{cam}: {scales::label_number_si()(n)}")) %>%  -->
<!--   ggplot(aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=cam)) + -->
<!--      geom_rect() + -->
<!--      coord_polar(theta="y") + -->
<!--   geom_text( x=4.5,  -->
<!--              aes(y=labelPosition,  -->
<!--                  label=label,  -->
<!--                  color=cam), size=4) + # x here controls label position (inner / outer) -->
<!--      xlim(c(2, 4)) + -->
<!--   facet_wrap(~rover)  + -->
<!--   theme_void() + -->
<!--   theme(legend.position = "none") -->
<!-- ``` -->
<!-- ```{r} -->
<!-- dat %>%  -->
<!--   mutate(year = lubridate::year(date)) %>%  -->
<!--   group_by(year, rover) %>%  -->
<!--   count(camera) %>%  -->
<!--   left_join(cam_tbl) %>%  -->
<!--   mutate(total_photos = sum(n), -->
<!--          pc = n / total_photos) %>%  -->
<!--   arrange(rover,year, n) %>%  -->
<!--   mutate(ymax = cumsum(pc), -->
<!--          ymin = c(0, head(ymax, -1)), -->
<!--          labelPosition = (ymin + ymax)/2, -->
<!--          label = glue::glue("{cam}: {scales::label_number_si()(n)}")) %>% -->
<!--   filter(rover == "spirit") %>%  -->
<!--   ggplot(aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=cam)) + -->
<!--      geom_rect() + -->
<!--      coord_polar(theta="y") + -->
<!--   geom_text( x=4.5,  -->
<!--              aes(y=labelPosition,  -->
<!--                  label=label,  -->
<!--                  color=cam), size=4) + # x here controls label position (inner / outer) -->
<!--      xlim(c(2, 4)) + -->
<!--   facet_wrap(~year, ncol = 1)  + -->
<!--   theme_void() + -->
<!--   theme(legend.position = "none") -->
<!-- ``` -->



 ]]></description>
  <category>Visualization</category>
  <guid>https://www.rsangole.com/posts/2021-04-13-30-day-chart-challenge/2021-04-13-30-day-chart-challenge.html</guid>
  <pubDate>Tue, 13 Apr 2021 04:00:00 GMT</pubDate>
  <media:content url="https://www.rsangole.com/posts/2021-04-13-30-day-chart-challenge/graph.png" medium="image" type="image/png" height="89" width="144"/>
</item>
<item>
  <title>TidyTuesday - The Tate Collection</title>
  <dc:creator>Rahul </dc:creator>
  <link>https://www.rsangole.com/posts/2021-01-19-tidytuesday-the-tate-collection/2021-01-19-tidytuesday-the-tate-collection.html</link>
  <description><![CDATA[ 



<div class="cell">
<div class="cell-output-display">
<blockquote class="twitter-tweet blockquote" data-width="550" data-lang="en" data-dnt="true" data-theme="light"><p lang="en" dir="ltr">Last week's <a href="https://twitter.com/hashtag/TidyTuesday?src=hash&amp;ref_src=twsrc%5Etfw">#TidyTuesday</a>. Had something very specific in mind &amp; it forced me to learn a new pkg and some base R to finish this plot.<br><br>I wanted to showcase the change in the dominant medium from Graphite to Screenprint, which we can see in this beeswarm plot.<a href="https://twitter.com/hashtag/rstats?src=hash&amp;ref_src=twsrc%5Etfw">#rstats</a> <a href="https://t.co/6uMCLHag4P">pic.twitter.com/6uMCLHag4P</a></p>‚Äî Rahul (@rsangole) <a href="https://twitter.com/rsangole/status/1351780885784195076?ref_src=twsrc%5Etfw">January 20, 2021</a></blockquote>

</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyr)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(data.table)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(beeswarm)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(extrafont)</span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># extrafont::font_import(paths = ".", prompt = F)</span></span>
<span id="cb1-7"></span>
<span id="cb1-8">artists <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data.table<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fread</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"artists.csv"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gender =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(gender), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Unknown"</span>, gender),</span>
<span id="cb1-10">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gender =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(gender,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Male"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Female"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Unknown"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ordered =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>),</span>
<span id="cb1-11">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">life_yr =</span> yearOfDeath <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> yearOfBirth,</span>
<span id="cb1-12">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pre_1850 =</span> yearOfBirth <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1850</span>,</span>
<span id="cb1-13">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name_len =</span> stringr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_length</span>(name) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">separate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"placeOfBirth"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">into =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"birth_city"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"birth_country"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">remove =</span> F) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">separate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"placeOfDeath"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">into =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"death_city"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"death_country"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">remove =</span> F) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">moved_countries =</span> birth_country <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> death_country,</span>
<span id="cb1-17">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">birth_country =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(birth_country), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Unknown"</span>, birth_country),</span>
<span id="cb1-18">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">death_country =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(death_country), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Unknown"</span>, death_country))</span>
<span id="cb1-19">artwork <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb1-20">    data.table<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fread</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"artwork.csv"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-21">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb1-22">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">artistRole =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(artistRole),</span>
<span id="cb1-23">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">medium =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(medium),</span>
<span id="cb1-24">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(units),</span>
<span id="cb1-25">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">area =</span> width <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> height,</span>
<span id="cb1-26">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title_len =</span> stringr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_length</span>(title)</span>
<span id="cb1-27">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-28">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(</span>
<span id="cb1-29">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> artists <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(name, gender, yearOfBirth, birth_city, birth_country, life_yr),</span>
<span id="cb1-30">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"artist"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>)</span>
<span id="cb1-31">    )</span>
<span id="cb1-32"></span>
<span id="cb1-33"></span>
<span id="cb1-34">color_pallete <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#005780"</span>,</span>
<span id="cb1-35">                   <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#3e487a"</span>,</span>
<span id="cb1-36">                   <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#955196"</span>,</span>
<span id="cb1-37">                   <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#dd5182"</span>,</span>
<span id="cb1-38">                   <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#ff6e54"</span>,</span>
<span id="cb1-39">                   <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#ffa600"</span>)</span>
<span id="cb1-40"></span>
<span id="cb1-41">artwork[,</span>
<span id="cb1-42">        medium_cleaned <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(</span>
<span id="cb1-43">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pattern =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Graphite"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> medium) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Graphite"</span>,</span>
<span id="cb1-44">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pattern =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Oil paint"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> medium) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Oil Paint"</span>,</span>
<span id="cb1-45">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pattern =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Screenprint"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> medium) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Screenprint"</span>,</span>
<span id="cb1-46">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pattern =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Watercolour"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> medium) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Watercolour"</span>,</span>
<span id="cb1-47">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pattern =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"photograph|Photograph"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> medium) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Photograph"</span>,</span>
<span id="cb1-48">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pattern =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chalk|Chalk"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> medium) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Chalk"</span></span>
<span id="cb1-49">        )]</span>
<span id="cb1-50">artwork[,</span>
<span id="cb1-51">        color <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(</span>
<span id="cb1-52">            medium_cleaned <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%like%</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Graphite"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> color_pallete[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb1-53">            medium_cleaned <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%like%</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Paint"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> color_pallete[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],</span>
<span id="cb1-54">            medium_cleaned <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%like%</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Screenprint"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> color_pallete[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>],</span>
<span id="cb1-55">            medium_cleaned <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%like%</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Watercolour"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> color_pallete[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>],</span>
<span id="cb1-56">            medium_cleaned <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%like%</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Photograph"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> color_pallete[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>],</span>
<span id="cb1-57">            medium_cleaned <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%like%</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Chalk"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> color_pallete[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb1-58">        )]</span>
<span id="cb1-59">medium_dat_2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> artwork[, .(year, medium_cleaned, color)]</span>
<span id="cb1-60"></span>
<span id="cb1-61">bees_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> medium_dat_2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-62">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(medium_cleaned), <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(year)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-63">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(year)</span>
<span id="cb1-64">bees_plot[, cutpts_numeric <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cut</span>(year, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1500</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2015</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> F)]</span>
<span id="cb1-65">bees_plot[, cutpts <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cut</span>(year, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1500</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2015</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))]</span>
<span id="cb1-66">bees_plot[, xaxis <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">substr</span>(cutpts, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))]</span>
<span id="cb1-67"></span>
<span id="cb1-68">bees_plot_reduced <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb1-69">    bees_plot[, .N, .(xaxis, medium_cleaned, color, cutpts_numeric)]</span>
<span id="cb1-70">bees_plot_reduced[, num_pts <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ceiling</span>(N <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)]</span>
<span id="cb1-71"></span>
<span id="cb1-72">datlist <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb1-73"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(bees_plot_reduced)) {</span>
<span id="cb1-74">    .nrows <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> bees_plot_reduced[i, num_pts]</span>
<span id="cb1-75">    .dlist <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb1-76">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (j <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>.nrows) {</span>
<span id="cb1-77">        .dlist[[j]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb1-78">            bees_plot_reduced[i, .(xaxis, medium_cleaned, color, cutpts_numeric)]</span>
<span id="cb1-79">    }</span>
<span id="cb1-80">    datlist[[i]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbindlist</span>(.dlist)</span>
<span id="cb1-81">}</span>
<span id="cb1-82"></span>
<span id="cb1-83">to_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbindlist</span>(datlist)</span>
<span id="cb1-84"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(to_plot)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 624
Columns: 4
$ xaxis          &lt;dbl&gt; 1540, 1555, 1560, 1565, 1570, 1575, 1585, 1590, 1595, 1‚Ä¶
$ medium_cleaned &lt;chr&gt; "Oil Paint", "Oil Paint", "Oil Paint", "Oil Paint", "Oi‚Ä¶
$ color          &lt;chr&gt; "#3e487a", "#3e487a", "#3e487a", "#3e487a", "#3e487a", ‚Ä¶
$ cutpts_numeric &lt;int&gt; 9, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, ‚Ä¶</code></pre>
</div>
</div>
<div class="cell page-columns page-full" data-layout-align="center">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">make_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(to_plot) {</span>
<span id="cb3-2">    categories <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(to_plot[, .(medium_cleaned, color)])</span>
<span id="cb3-3">    xleg <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>,  <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.8</span>,  <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.6</span>,  <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.8</span>,  <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8.2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10.0</span>)</span>
<span id="cb3-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">beeswarm</span>(</span>
<span id="cb3-5">        xleg,</span>
<span id="cb3-6">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pwcol =</span> categories<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>color,</span>
<span id="cb3-7">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">horizontal =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb3-8">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>,</span>
<span id="cb3-9">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.3</span>,</span>
<span id="cb3-10">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>,</span>
<span id="cb3-11">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>),</span>
<span id="cb3-12">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axes =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb3-13">    )</span>
<span id="cb3-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span>(</span>
<span id="cb3-15">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xleg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>,</span>
<span id="cb3-16">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb3-17">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">toupper</span>(categories<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>medium_cleaned),</span>
<span id="cb3-18">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray80"</span>,</span>
<span id="cb3-19">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pos =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb3-20">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span></span>
<span id="cb3-21">    )</span>
<span id="cb3-22">}</span>
<span id="cb3-23">make_plot_2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(to_plot) {</span>
<span id="cb3-24">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">beeswarm</span>(</span>
<span id="cb3-25">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> to_plot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>xaxis,</span>
<span id="cb3-26">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pwcol =</span> to_plot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>color,</span>
<span id="cb3-27">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">horizontal =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb3-28">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hex"</span>,</span>
<span id="cb3-29">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">spacing =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.1</span>,</span>
<span id="cb3-30">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>,</span>
<span id="cb3-31">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>,</span>
<span id="cb3-32">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1550</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2010</span>),</span>
<span id="cb3-33">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axes =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb3-34">    )</span>
<span id="cb3-35">    x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">from =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1550</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb3-36">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">axis</span>(</span>
<span id="cb3-37">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">side =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb3-38">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> x,</span>
<span id="cb3-39">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">at =</span> x,</span>
<span id="cb3-40">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>,</span>
<span id="cb3-41">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.ticks =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray80"</span>,</span>
<span id="cb3-42">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.axis =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray60"</span></span>
<span id="cb3-43">    )</span>
<span id="cb3-44">}</span>
<span id="cb3-45"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(</span>
<span id="cb3-46">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fig =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb3-47">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">new =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb3-48">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bg =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#292929"</span></span>
<span id="cb3-49">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># family = "Monoid"</span></span>
<span id="cb3-50">)</span>
<span id="cb3-51"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_plot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to_plot =</span> to_plot)</span>
<span id="cb3-52"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fig =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">new =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb3-53"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_plot_2</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to_plot =</span> to_plot)</span>
<span id="cb3-54"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mtext</span>(</span>
<span id="cb3-55">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The Tate"</span>,</span>
<span id="cb3-56">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">side =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb3-57">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb3-58">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray80"</span>,</span>
<span id="cb3-59">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">padj =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb3-60">)</span>
<span id="cb3-61"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mtext</span>(</span>
<span id="cb3-62">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"THE TOP 6 MEDIUMS FOR 40,000 PIECES OF ART. EACH DOT REPRESENTS UPTO 100 ARTWORKS."</span>,</span>
<span id="cb3-63">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">side =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb3-64">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb3-65">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray80"</span>,</span>
<span id="cb3-66">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">padj =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.5</span></span>
<span id="cb3-67">)</span>
<span id="cb3-68"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mtext</span>(</span>
<span id="cb3-69">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Image by @rsangole"</span>,</span>
<span id="cb3-70">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">side =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb3-71">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>,</span>
<span id="cb3-72">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#3e487a"</span>,</span>
<span id="cb3-73">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">padj =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,</span>
<span id="cb3-74">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">adj =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb3-75">)</span></code></pre></div>
<div class="cell-output-display column-page">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.rsangole.com/posts/2021-01-19-tidytuesday-the-tate-collection/2021-01-19-tidytuesday-the-tate-collection_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="1152"></p>
</figure>
</div>
</div>
</div>



 ]]></description>
  <category>TidyTuesday</category>
  <category>Visualization</category>
  <guid>https://www.rsangole.com/posts/2021-01-19-tidytuesday-the-tate-collection/2021-01-19-tidytuesday-the-tate-collection.html</guid>
  <pubDate>Tue, 19 Jan 2021 05:00:00 GMT</pubDate>
  <media:content url="https://www.rsangole.com/posts/2021-01-19-tidytuesday-the-tate-collection/graph.png" medium="image" type="image/png" height="168" width="144"/>
</item>
<item>
  <title>TidyTuesday - Transit Costs</title>
  <dc:creator>Rahul </dc:creator>
  <link>https://www.rsangole.com/posts/2021-01-11-tidytuesday-transit-costs/2021-01-11-tidytuesday-transit-costs.html</link>
  <description><![CDATA[ 



<div class="cell">
<div class="cell-output-display">
<blockquote class="twitter-tweet blockquote" data-width="550" data-lang="en" data-dnt="true" data-theme="light"><p lang="en" dir="ltr">Comparing Indian rail projects to our neighbour China, I find that, on average, Indian lines have a higher number of stations and longer lines than our Chinese counterparts. <br><br>Also, number of stations to track length is amazingly linear (duh).<a href="https://twitter.com/hashtag/TidyTuesday?src=hash&amp;ref_src=twsrc%5Etfw">#TidyTuesday</a> <a href="https://twitter.com/hashtag/rstats?src=hash&amp;ref_src=twsrc%5Etfw">#rstats</a> <a href="https://twitter.com/hashtag/dataviz?src=hash&amp;ref_src=twsrc%5Etfw">#dataviz</a> <a href="https://t.co/pL4eYBIKNE">pic.twitter.com/pL4eYBIKNE</a></p>‚Äî Rahul (@rsangole) <a href="https://twitter.com/rsangole/status/1348416031757242369?ref_src=twsrc%5Etfw">January 10, 2021</a></blockquote>

</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggrepel)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggdark)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggtext)</span>
<span id="cb1-6"></span>
<span id="cb1-7">transit_cost <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data.table<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fread</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transit_cost.csv"</span>)</span>
<span id="cb1-8"></span>
<span id="cb1-9">transit_cost <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> transit_cost <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tunnel_per =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace</span>(tunnel_per, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)),</span>
<span id="cb1-11">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">real_cost =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(real_cost),</span>
<span id="cb1-12">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">country =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(country), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Unk"</span>, country),</span>
<span id="cb1-13">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cc_id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(country,city))</span>
<span id="cb1-14"></span>
<span id="cb1-15">dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> transit_cost <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(country, city) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb1-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">total_projects =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(),</span>
<span id="cb1-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">total_stations =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(stations, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>),</span>
<span id="cb1-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">total_tunnel_len =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(tunnel, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>),</span>
<span id="cb1-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">total_len =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(length, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>),</span>
<span id="cb1-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tunnel_pc =</span> total_tunnel_len<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>total_len,</span>
<span id="cb1-23">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">total_cost =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(real_cost, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e3</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#now in Billions</span></span>
<span id="cb1-24">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">avg_stations =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(stations, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>),</span>
<span id="cb1-25">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">avg_tunnel_len =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(tunnel, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>),</span>
<span id="cb1-26">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">avg_len =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(length, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>),</span>
<span id="cb1-27">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tunnel_pc =</span> avg_tunnel_len<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>avg_len,</span>
<span id="cb1-28">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">avg_cost =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(real_cost, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb1-29">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(total_len <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>,</span>
<span id="cb1-31">         total_projects <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb1-32">         country <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CN"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IN"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cc_id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(country,city),</span>
<span id="cb1-34">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">country =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(country <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CN"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"China"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"India"</span>))</span>
<span id="cb1-35"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(dat)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 35
Columns: 13
Groups: country [2]
$ country          &lt;chr&gt; "China", "China", "China", "China", "China", "China",‚Ä¶
$ city             &lt;chr&gt; "Beijing", "Changchun", "Changsha", "Chengdu", "Chong‚Ä¶
$ total_projects   &lt;int&gt; 27, 7, 13, 11, 11, 7, 3, 10, 5, 11, 10, 8, 2, 5, 12, ‚Ä¶
$ total_stations   &lt;int&gt; 376, 81, 152, 152, 163, 66, 61, 121, 90, 154, 192, 10‚Ä¶
$ total_tunnel_len &lt;dbl&gt; 450.0686, 95.5000, 164.5400, 225.1000, 156.3370, 151.‚Ä¶
$ total_len        &lt;dbl&gt; 721.973, 116.000, 216.860, 252.950, 273.220, 166.940,‚Ä¶
$ tunnel_pc        &lt;dbl&gt; 0.7650659, 0.8232759, 0.8219666, 0.8898992, 0.7867776‚Ä¶
$ total_cost       &lt;dbl&gt; 138.86373, 16.92127, 38.33016, 44.59756, 41.87035, 25‚Ä¶
$ avg_stations     &lt;dbl&gt; 13.925926, 11.571429, 11.692308, 13.818182, 14.818182‚Ä¶
$ avg_tunnel_len   &lt;dbl&gt; 20.45766, 13.64286, 13.71167, 20.46364, 19.54213, 21.‚Ä¶
$ avg_len          &lt;dbl&gt; 26.73974, 16.57143, 16.68154, 22.99545, 24.83818, 23.‚Ä¶
$ avg_cost         &lt;dbl&gt; 5143.101, 2417.324, 2948.474, 4054.324, 3806.395, 364‚Ä¶
$ cc_id            &lt;chr&gt; "CN Beijing", "CN Changchun", "CN Changsha", "CN Chen‚Ä¶</code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">label_dat_india <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(country <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"India"</span>,</span>
<span id="cb3-3">         city <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gurgaon"</span>)</span>
<span id="cb3-4">label_dat_china <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(city <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Shanghai"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Beijing"</span>))</span>
<span id="cb3-6"></span>
<span id="cb3-7">to_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> transit_cost <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-8">  tidyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drop_na</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(cc_id <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> dat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cc_id,</span>
<span id="cb3-10">         country <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CN"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IN"</span>),</span>
<span id="cb3-11">         length <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">country =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(country <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CN"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"China"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"India"</span>))</span></code></pre></div>
</div>
<div class="cell page-columns page-full" data-layout-align="center">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">in_color <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#2a9d8f"</span></span>
<span id="cb4-2">cn_color <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#fca311"</span></span>
<span id="cb4-3"></span>
<span id="cb4-4">chennai <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(city <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Chennai"</span>)</span>
<span id="cb4-5">chennai_stations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chennai<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>total_stations</span>
<span id="cb4-6">chennai_projects <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chennai<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>total_projects</span>
<span id="cb4-7">chennai_x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chennai<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>avg_len</span>
<span id="cb4-8">chennai_y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chennai<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>avg_stations</span>
<span id="cb4-9">chennai_cost <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chennai<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>total_cost</span>
<span id="cb4-10"></span>
<span id="cb4-11">to_plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(length, stations)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#8d99ae"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(city<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Wenzhou"</span>),</span>
<span id="cb4-15">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(avg_len, avg_stations, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> country),</span>
<span id="cb4-16">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">se=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">span =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dat,</span>
<span id="cb4-18">             <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(avg_len, avg_stations, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> country, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> total_cost<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.3</span>),</span>
<span id="cb4-19">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text_repel</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> label_dat_india,</span>
<span id="cb4-21">                   <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(avg_len, avg_stations,</span>
<span id="cb4-22">                                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> city,</span>
<span id="cb4-23">                                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> country),</span>
<span id="cb4-24">                                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min.segment.length =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb4-25">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">box.padding =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"line"</span>),</span>
<span id="cb4-26">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nudge_x =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb4-27">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"curve"</span>,</span>
<span id="cb4-29">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> label_dat_china<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>avg_len[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> label_dat_china<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>avg_stations[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb4-30">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> label_dat_china<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>avg_len[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> label_dat_china<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>avg_stations[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,</span>
<span id="cb4-31">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">curvature =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mm"</span>)), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#fca311"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>,</span>
<span id="cb4-33">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> label_dat_china<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>avg_len[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> label_dat_china<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>avg_stations[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>,</span>
<span id="cb4-34">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Shanghai &amp; Beijing"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#fca311"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-35">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"curve"</span>,</span>
<span id="cb4-36">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-37">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>,</span>
<span id="cb4-38">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">curvature =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mm"</span>)), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#8d99ae"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-39">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>,</span>
<span id="cb4-40">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">11.5</span>,</span>
<span id="cb4-41">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Each point is a transit line"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#8d99ae"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-42">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"curve"</span>,</span>
<span id="cb4-43">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> chennai_x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> chennai_y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb4-44">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> chennai_x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> chennai_y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>,</span>
<span id="cb4-45">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">curvature =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mm"</span>)), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> in_color, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-46">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>,</span>
<span id="cb4-47">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> chennai_x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> chennai_y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>,</span>
<span id="cb4-48">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(</span>
<span id="cb4-49">             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{cost} over {stations} stations</span></span>
<span id="cb4-50"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">             in {chennai_projects} lines"</span>,</span>
<span id="cb4-51">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_number</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">accuracy =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">suffix =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" km"</span>)(chennai_x),</span>
<span id="cb4-52">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> chennai_y,</span>
<span id="cb4-53">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stations =</span> chennai_stations,</span>
<span id="cb4-54">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chennai_projects =</span> chennai_projects,</span>
<span id="cb4-55">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cost =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_dollar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">accuracy =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">suffix =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M"</span>)(chennai_cost)</span>
<span id="cb4-56">             ),</span>
<span id="cb4-57">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> in_color) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-58">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dark_theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-59">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-60">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-61">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_size</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Total City Cost"</span>,</span>
<span id="cb4-62">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.3</span>),</span>
<span id="cb4-63">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"$20M"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"$50M"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"$80M"</span>),</span>
<span id="cb4-64">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">range =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb4-65">             ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-66">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clip =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-67">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb4-68">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The Cost of Transit in the 21&lt;sup&gt;st&lt;/sup&gt; Century"</span>,</span>
<span id="cb4-69">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;span style='color:{cn_color};font-family:Inter-Medium;'&gt;China: &lt;/span&gt;253 projects in 28 cities, totaling $1T since 1998&lt;br /&gt;&lt;span style='color:{in_color};font-family:Inter-Medium;'&gt;India: &lt;/span&gt; 29 projects in 7 cities, totaling $2B since 2011&lt;br /&gt;&lt;span style='color:{in_color};font-family:Inter-Medium;'&gt;India&lt;/span&gt; has longer transit lines with more stations than &lt;span style='color:{cn_color};font-family:Inter-Medium;'&gt;China&lt;/span&gt;, driving up costs &lt;br /&gt;for each city."</span>),</span>
<span id="cb4-70">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Average Length"</span>,</span>
<span id="cb4-71">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Average Stations"</span>,</span>
<span id="cb4-72">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#tidytuesday</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">@rsangole"</span></span>
<span id="cb4-73">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-74">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb4-75">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray60"</span>),</span>
<span id="cb4-76">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.text =</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray60"</span>),</span>
<span id="cb4-77">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.ticks.x.bottom =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray30"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>),</span>
<span id="cb4-78">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.ticks.y.left =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray30"</span>),</span>
<span id="cb4-79">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">face =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"italic"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray60"</span>),</span>
<span id="cb4-80">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">face =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"italic"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray60"</span>),</span>
<span id="cb4-81">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_markdown</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Inter-Medium"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#f8f8f2"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span>,</span>
<span id="cb4-82">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">margin =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">margin</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">unit =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"line"</span>)),</span>
<span id="cb4-83">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.title.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot"</span>,</span>
<span id="cb4-84">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.subtitle =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_markdown</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#f8f8f2"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lineheight =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span>,</span>
<span id="cb4-85">                                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">margin =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">margin</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">unit =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"line"</span>)),</span>
<span id="cb4-86">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.margin =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">margin</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">unit =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"line"</span>),</span>
<span id="cb4-87">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb4-88">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-89">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_discrete_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">aesthetics =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color"</span>,</span>
<span id="cb4-90">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"India"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> in_color, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"China"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> cn_color),</span>
<span id="cb4-91">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">guide =</span> F)</span></code></pre></div>
<div class="cell-output-display column-page">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.rsangole.com/posts/2021-01-11-tidytuesday-transit-costs/2021-01-11-tidytuesday-transit-costs_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>



 ]]></description>
  <category>TidyTuesday</category>
  <category>Visualization</category>
  <guid>https://www.rsangole.com/posts/2021-01-11-tidytuesday-transit-costs/2021-01-11-tidytuesday-transit-costs.html</guid>
  <pubDate>Mon, 11 Jan 2021 05:00:00 GMT</pubDate>
  <media:content url="https://www.rsangole.com/posts/2021-01-11-tidytuesday-transit-costs/graph.png" medium="image" type="image/png" height="185" width="144"/>
</item>
<item>
  <title>TidyTuesday - Big Mac Index</title>
  <dc:creator>Rahul </dc:creator>
  <link>https://www.rsangole.com/posts/2021-01-06-tidytuesday-big-mac-index/2021-01-06-tidytuesday-big-mac-index.html</link>
  <description><![CDATA[ 



<div class="cell">
<div class="cell-output-display">
<blockquote class="twitter-tweet blockquote" data-width="550" data-lang="en" data-dnt="true" data-theme="light"><p lang="en" dir="ltr">For my first <a href="https://twitter.com/hashtag/TidyTuesday?src=hash&amp;ref_src=twsrc%5Etfw">#TidyTuesday</a> post, I've attempted a comparison of the 2015 to 2020 movement of the Big Mac index : <a href="https://t.co/AOGOvt3ve5">https://t.co/AOGOvt3ve5</a><a href="https://twitter.com/hashtag/RStats?src=hash&amp;ref_src=twsrc%5Etfw">#RStats</a> <a href="https://twitter.com/hashtag/dataviz?src=hash&amp;ref_src=twsrc%5Etfw">#dataviz</a> <a href="https://twitter.com/hashtag/r4ds?src=hash&amp;ref_src=twsrc%5Etfw">#r4ds</a> <a href="https://twitter.com/hashtag/ggplot2?src=hash&amp;ref_src=twsrc%5Etfw">#ggplot2</a> <a href="https://t.co/1TZTpAo3s0">pic.twitter.com/1TZTpAo3s0</a></p>‚Äî Rahul (@rsangole) <a href="https://twitter.com/rsangole/status/1346894661973987330?ref_src=twsrc%5Etfw">January 6, 2021</a></blockquote>

</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggrepel)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggdark)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggtext)</span>
<span id="cb1-6"></span>
<span id="cb1-7">bigmac <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data.table<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fread</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"big-mac.csv"</span>)</span>
<span id="cb1-8"></span>
<span id="cb1-9">bigmac_us_dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> bigmac <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-10">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(currency_code <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"USD"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-11">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bigmac_us_price_USD =</span> local_price)</span>
<span id="cb1-12"></span>
<span id="cb1-13">bigmac_value_dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> bigmac <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-14">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(date,</span>
<span id="cb1-15">                currency_code,</span>
<span id="cb1-16">                name,</span>
<span id="cb1-17">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bigmac_local_price =</span> local_price,</span>
<span id="cb1-18">                dollar_ex) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-19">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(</span>
<span id="cb1-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> bigmac_us_dat,</span>
<span id="cb1-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">on =</span> date</span>
<span id="cb1-22">  )</span>
<span id="cb1-23"></span>
<span id="cb1-24">bigmac_value_dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> bigmac_value_dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-25">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb1-26">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bigmac_ex_rate =</span> bigmac_local_price <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> bigmac_us_price_USD,</span>
<span id="cb1-27">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">valuation =</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> bigmac_ex_rate <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> dollar_ex</span>
<span id="cb1-28">    )</span>
<span id="cb1-29"></span>
<span id="cb1-30">bigmac_value_dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-31">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(date, name, valuation) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-32">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(date <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2020-07-01"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2015-07-01"</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-33">  tidyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_wider</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_from =</span> date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_from =</span> valuation) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-34">  janitor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clean_names</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-35">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">movement =</span> x2020_07_01 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x2015_07_01,</span>
<span id="cb1-36">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bw =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(x2020_07_01 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> x2015_07_01, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Valuation worse in 5 years"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Valuation better in 5 years"</span>),</span>
<span id="cb1-37">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bw =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(name <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"United States"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ref"</span>, bw),</span>
<span id="cb1-38">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bw =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(bw, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Valuation worse in 5 years"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Valuation better in 5 years"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ref"</span>)),</span>
<span id="cb1-39">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> forcats<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_reorder</span>(name, x2020_07_01),</span>
<span id="cb1-40">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label_pos =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(bw <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Valuation worse in 5 years"</span>,</span>
<span id="cb1-41">                                   x2020_07_01 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span>,</span>
<span id="cb1-42">                                   x2020_07_01 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-43">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(movement)  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-44">  tidyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drop_na</span>()<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-&gt;</span> to_plot</span>
<span id="cb1-45"></span>
<span id="cb1-46"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(to_plot)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 42
Columns: 6
$ name        &lt;fct&gt; Sri Lanka, Czech Republic, India, Ukraine, Thailand, Singa‚Ä¶
$ x2015_07_01 &lt;dbl&gt; 0.45409867, 0.40840293, 0.61738434, 0.67662319, 0.33855599‚Ä¶
$ x2020_07_01 &lt;dbl&gt; 0.359218095, 0.334283358, 0.557499169, 0.619139345, 0.2857‚Ä¶
$ movement    &lt;dbl&gt; -0.094880571, -0.074119572, -0.059885175, -0.057483840, -0‚Ä¶
$ bw          &lt;fct&gt; Valuation better in 5 years, Valuation better in 5 years, ‚Ä¶
$ label_pos   &lt;dbl&gt; 0.33921810, 0.31428336, 0.53749917, 0.59913935, 0.26574757‚Ä¶</code></pre>
</div>
</div>
<div class="cell page-columns page-full" data-layout-align="center">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">to_plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> name, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> bw)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_hline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb3-4">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray80"</span>,</span>
<span id="cb3-5">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-7">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray90"</span>,</span>
<span id="cb3-8">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x2015_07_01), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray70"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x2020_07_01, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> x2015_07_01, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> name), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray70"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(</span>
<span id="cb3-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> to_plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(name <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"United States"</span>),</span>
<span id="cb3-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x2020_07_01),</span>
<span id="cb3-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb3-15">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(</span>
<span id="cb3-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> to_plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(bw <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Valuation worse in 5 years"</span>),</span>
<span id="cb3-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> label_pos, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> name, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> name),</span>
<span id="cb3-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span>,</span>
<span id="cb3-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb3-22">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(</span>
<span id="cb3-24">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> to_plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(bw <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Valuation better in 5 years"</span>),</span>
<span id="cb3-25">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> label_pos, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> name, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> name),</span>
<span id="cb3-26">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span>,</span>
<span id="cb3-27">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb3-28">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb3-29">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_label</span>(</span>
<span id="cb3-31">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb3-32">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.50</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>),</span>
<span id="cb3-33">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb3-34">    ),</span>
<span id="cb3-35">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(</span>
<span id="cb3-36">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x,</span>
<span id="cb3-37">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y,</span>
<span id="cb3-38">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_percent</span>()(x)</span>
<span id="cb3-39">    ),</span>
<span id="cb3-40">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.8</span>,</span>
<span id="cb3-41">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray30"</span>,</span>
<span id="cb3-42">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,</span>
<span id="cb3-43">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label.size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-44">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label.padding =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lines"</span>)</span>
<span id="cb3-45">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-46">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(</span>
<span id="cb3-47">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"curve"</span>,</span>
<span id="cb3-48">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.674</span>,</span>
<span id="cb3-49">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">42.5</span>,</span>
<span id="cb3-50">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.674</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.04</span>,</span>
<span id="cb3-51">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">44</span>,</span>
<span id="cb3-52">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">curvature =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb3-53">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mm"</span>)),</span>
<span id="cb3-54">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#e76f51"</span></span>
<span id="cb3-55">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-56">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(</span>
<span id="cb3-57">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>,</span>
<span id="cb3-58">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.674</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.04</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.006</span>,</span>
<span id="cb3-59">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">44</span>,</span>
<span id="cb3-60">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2020"</span>,</span>
<span id="cb3-61">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>,</span>
<span id="cb3-62">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.4</span>,</span>
<span id="cb3-63">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#e76f51"</span></span>
<span id="cb3-64">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-65">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(</span>
<span id="cb3-66">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"curve"</span>,</span>
<span id="cb3-67">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.563</span>,</span>
<span id="cb3-68">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">42.5</span>,</span>
<span id="cb3-69">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.563</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.04</span>,</span>
<span id="cb3-70">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">44</span>,</span>
<span id="cb3-71">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">curvature =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb3-72">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mm"</span>)),</span>
<span id="cb3-73">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray70"</span></span>
<span id="cb3-74">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-75">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(</span>
<span id="cb3-76">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>,</span>
<span id="cb3-77">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.563</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.04</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.006</span>,</span>
<span id="cb3-78">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">44</span>,</span>
<span id="cb3-79">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2015"</span>,</span>
<span id="cb3-80">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>,</span>
<span id="cb3-81">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.4</span>,</span>
<span id="cb3-82">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray70"</span></span>
<span id="cb3-83">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-84">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-85">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb3-86">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb3-87">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.major =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb3-88">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.minor =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb3-89">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#264653"</span>)</span>
<span id="cb3-90">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-91">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb3-92">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.14</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>),</span>
<span id="cb3-93">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb3-94">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#264653"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">9.5</span>)</span>
<span id="cb3-95">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-96">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#e76f51"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#2a9d8f"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-97">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(</span>
<span id="cb3-98">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_percent</span>(),</span>
<span id="cb3-99">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>),</span>
<span id="cb3-100">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb3-101">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-102">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_discrete</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-103">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(</span>
<span id="cb3-104">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>,</span>
<span id="cb3-105">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>,</span>
<span id="cb3-106">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">44</span>,</span>
<span id="cb3-107">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Over Valued"</span>,</span>
<span id="cb3-108">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.4</span>,</span>
<span id="cb3-109">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#264653"</span></span>
<span id="cb3-110">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-111">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(</span>
<span id="cb3-112">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>,</span>
<span id="cb3-113">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>,</span>
<span id="cb3-114">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">44</span>,</span>
<span id="cb3-115">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Under Valued"</span>,</span>
<span id="cb3-116">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.4</span>,</span>
<span id="cb3-117">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#264653"</span></span>
<span id="cb3-118">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-119">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Big Mac Exchange Rate Valuation"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span></code></pre></div>
<div class="cell-output-display column-page">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.rsangole.com/posts/2021-01-06-tidytuesday-big-mac-index/2021-01-06-tidytuesday-big-mac-index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>



 ]]></description>
  <category>TidyTuesday</category>
  <category>Visualization</category>
  <guid>https://www.rsangole.com/posts/2021-01-06-tidytuesday-big-mac-index/2021-01-06-tidytuesday-big-mac-index.html</guid>
  <pubDate>Wed, 06 Jan 2021 05:00:00 GMT</pubDate>
  <media:content url="https://www.rsangole.com/posts/2021-01-06-tidytuesday-big-mac-index/graph.png" medium="image" type="image/png" height="185" width="144"/>
</item>
<item>
  <title>Perf Benchmarking Dummy Variables - Part II</title>
  <dc:creator>Rahul </dc:creator>
  <link>https://www.rsangole.com/posts/2020-12-16-perf-benchmarking-dummy-variables-part-ii/2020-12-16-perf-benchmarking-dummy-variables-part-ii.html</link>
  <description><![CDATA[ 



<p><img src="https://www.rsangole.com/posts/2020-12-16-perf-benchmarking-dummy-variables-part-ii/dummy.png" class="img-fluid"></p>
<section id="tldr" class="level2">
<h2 class="anchored" data-anchor-id="tldr">tl;dr</h2>
<ul>
<li><code>{stats}</code> continues to dominate the speed tests</li>
<li><code>{fastDummies}</code> had similar speeds only for dataframes with rows ~1M</li>
<li><code>{dummy}</code> and <code>{dummies}</code> are the slowest</li>
</ul>
</section>
<section id="motivation" class="level2">
<h2 class="anchored" data-anchor-id="motivation">Motivation</h2>
<p>In 2017, I compared the performance of four packages <code>{stats}</code>, <code>{dummies}</code>, <code>{dummy}</code> and <code>{caret}</code> to create dummy variables in this <a href="https://rsangole.netlify.app/post/2017/09/27/dummy-variables-one-hot-encoding/#large-datasets">post</a>.</p>
<p><a href="https://orcid.org/0000-0002-0601-0387">Jacob Kaplan</a> of UPenn has created a new package <a href="https://jacobkap.github.io/fastDummies/"><code>{fastdummies}</code></a> which claims to be faster than other existing packages.</p>
<p>Let‚Äôs test it out.</p>
</section>
<section id="machine" class="level2">
<h2 class="anchored" data-anchor-id="machine">Machine</h2>
<p>I‚Äôm running these tests on a 2019 MacBook Pro running macOS Catalina (10.15.7) on a 2.4 GHz 8-Core Intel i9 with 32 MB 2400 MHz DDR4, in a <a href="https://hub.docker.com/r/hatmatrix/blog">docker container</a> running:</p>
<pre><code>platform       x86_64-pc-linux-gnu         
arch           x86_64                      
os             linux-gnu                   
system         x86_64, linux-gnu           
status                                     
major          4                           
minor          0.0                         
year           2020                        
month          04                          
day            24                          
svn rev        78286                       
language       R                           
version.string R version 4.0.0 (2020-04-24)
nickname       Arbor Day </code></pre>
</section>
<section id="perf-testing" class="level2">
<h2 class="anchored" data-anchor-id="perf-testing">Perf Testing</h2>
<section id="a-quick-test" class="level3">
<h3 class="anchored" data-anchor-id="a-quick-test">A quick test</h3>
<p>Create a test dataset‚Ä¶</p>
<div class="cell" data-hash="2020-12-16-perf-benchmarking-dummy-variables-part-ii_cache/html/unnamed-chunk-1_28fce196823ad4b0c3cc6a0674b6566c">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">NROW  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e4</span></span>
<span id="cb2-2">fac_levels <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>)</span>
<span id="cb2-3">input_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb2-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">facVar_1 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(LETTERS[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>fac_levels[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> NROW, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)),</span>
<span id="cb2-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">facVar_2 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(LETTERS[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>fac_levels[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> NROW, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)),</span>
<span id="cb2-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">facVar_3 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(LETTERS[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>fac_levels[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> NROW, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)),</span>
<span id="cb2-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">facVar_4 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(LETTERS[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>fac_levels[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> NROW, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)),</span>
<span id="cb2-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">facVar_5 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(LETTERS[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>fac_levels[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> NROW, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)),</span>
<span id="cb2-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">facVar_6 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(LETTERS[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>fac_levels[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> NROW, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)),</span>
<span id="cb2-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">facVar_7 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(LETTERS[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>fac_levels[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> NROW, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)),</span>
<span id="cb2-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">facVar_8 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(LETTERS[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>fac_levels[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> NROW, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb2-12">)</span>
<span id="cb2-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(input_data)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>tibble [10,000 √ó 8] (S3: tbl_df/tbl/data.frame)
 $ facVar_1: Factor w/ 4 levels "A","B","C","D": 1 4 4 3 3 2 4 1 3 1 ...
 $ facVar_2: Factor w/ 4 levels "A","B","C","D": 4 1 4 4 4 4 4 3 3 4 ...
 $ facVar_3: Factor w/ 5 levels "A","B","C","D",..: 5 1 5 5 5 4 4 4 3 2 ...
 $ facVar_4: Factor w/ 5 levels "A","B","C","D",..: 2 3 1 1 5 5 1 4 2 3 ...
 $ facVar_5: Factor w/ 7 levels "A","B","C","D",..: 3 5 6 3 5 2 5 2 7 6 ...
 $ facVar_6: Factor w/ 7 levels "A","B","C","D",..: 5 2 1 3 3 5 5 6 2 2 ...
 $ facVar_7: Factor w/ 9 levels "A","B","C","D",..: 3 6 7 5 8 8 8 8 3 8 ...
 $ facVar_8: Factor w/ 9 levels "A","B","C","D",..: 5 8 7 3 6 2 7 8 8 2 ...</code></pre>
</div>
</div>
<p>Run microbenchmark‚Ä¶</p>
<div class="cell" data-hash="2020-12-16-perf-benchmarking-dummy-variables-part-ii_cache/html/unnamed-chunk-2_a20241e5ff3965e69508b7559faa52bf">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">stats_fn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(dat) stats<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">model.matrix</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>.<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,dat)</span>
<span id="cb4-2">dummies_fn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(dat) dummies<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dummy.data.frame</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(dat))</span>
<span id="cb4-3">dummy_fn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(dat) dummy<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dummy</span>(dat)</span>
<span id="cb4-4">caret_fn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(dat) {caret<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dummyVars</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">formula =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>.,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dat) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> dat)}</span>
<span id="cb4-5">fastDummies_fn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(dat) fastDummies<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dummy_cols</span>(dat)</span>
<span id="cb4-6"></span>
<span id="cb4-7">microbenchmark<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">microbenchmark</span>(</span>
<span id="cb4-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stats =</span>       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stats_fn</span>(input_data),</span>
<span id="cb4-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dummies =</span>     <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dummies_fn</span>(input_data),</span>
<span id="cb4-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dummy =</span>       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dummy_fn</span>(input_data),</span>
<span id="cb4-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caret =</span>       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">caret_fn</span>(input_data),</span>
<span id="cb4-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fastDummies =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fastDummies_fn</span>(input_data),</span>
<span id="cb4-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> 10L</span>
<span id="cb4-14">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">autoplot</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.rsangole.com/posts/2020-12-16-perf-benchmarking-dummy-variables-part-ii/2020-12-16-perf-benchmarking-dummy-variables-part-ii_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p><code>stats</code> is still clearly the fastest of all the packages, for this moderately sized dataset.</p>
</section>
<section id="dig-a-bit-deeper" class="level3">
<h3 class="anchored" data-anchor-id="dig-a-bit-deeper">Dig a bit deeper</h3>
<p>How does the performance vary when rows, columns, or number of factors are scaled?</p>
<p>First, make some functions to create dataframes with varying rows/cols/levels per variable, run benchmarks &amp; extract median execution times.</p>
<div class="cell" data-hash="2020-12-16-perf-benchmarking-dummy-variables-part-ii_cache/html/unnamed-chunk-3_9aa8b6cc4fca2bb897221afb39e75b5c">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">make_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">NROW =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">NCOL =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">NFAC =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>){</span>
<span id="cb5-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sapply</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>NCOL, </span>
<span id="cb5-3">           <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(LETTERS[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>NFAC], </span>
<span id="cb5-4">                              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> NROW, </span>
<span id="cb5-5">                              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-6">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>()</span>
<span id="cb5-7">    </span>
<span id="cb5-8">}</span>
<span id="cb5-9">run_benchmark <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(dat){</span>
<span id="cb5-10">    microbenchmark<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">microbenchmark</span>(</span>
<span id="cb5-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stats =</span>       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stats_fn</span>(dat),</span>
<span id="cb5-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dummies =</span>     <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dummies_fn</span>(dat),</span>
<span id="cb5-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dummy =</span>       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dummy_fn</span>(dat),</span>
<span id="cb5-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caret =</span>       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">caret_fn</span>(dat),</span>
<span id="cb5-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fastDummies =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fastDummies_fn</span>(dat),</span>
<span id="cb5-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> 10L</span>
<span id="cb5-17">    )</span>
<span id="cb5-18">}</span>
<span id="cb5-19">extract_median_time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(benchmarks){</span>
<span id="cb5-20">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>(benchmarks) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-21">        dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(expr) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-22">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">median_ms =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(time) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-6</span>)</span>
<span id="cb5-23">}</span></code></pre></div>
</div>
<p><code>make_data</code> makes a pretty simple tibble:</p>
<div class="cell" data-hash="2020-12-16-perf-benchmarking-dummy-variables-part-ii_cache/html/unnamed-chunk-4_2b9e6d34da24031cd25f187b4463d3a6">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_data</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">NROW =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">NCOL =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">NFAC =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 5 √ó 6
  V1    V2    V3    V4    V5    V6   
  &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;
1 A     C     A     C     A     B    
2 A     A     C     A     A     C    
3 A     C     C     A     A     A    
4 C     A     C     B     B     A    
5 C     A     C     A     A     B    </code></pre>
</div>
</div>
</section>
<section id="how-does-performance-scale-by-number-of-rows" class="level3">
<h3 class="anchored" data-anchor-id="how-does-performance-scale-by-number-of-rows">How does performance scale by number of rows?</h3>
<p><code>stats</code> still rocks. With very large datasets, <code>fastDummies</code> approaches similar speed.</p>
<div class="cell" data-hash="2020-12-16-perf-benchmarking-dummy-variables-part-ii_cache/html/unnamed-chunk-5_d50f891cacc2e05418b205755604333c">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">experiment_rows <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb8-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrows =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb8-3">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-4">    dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">input_data =</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(nrows, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_data</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">NROW =</span> .x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">NCOL =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">NFAC =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)),</span>
<span id="cb8-5">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">benchmarks =</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(input_data, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">run_benchmark</span>(.x)),</span>
<span id="cb8-6">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">median_times =</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(benchmarks, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">extract_median_time</span>(.x)))</span>
<span id="cb8-7">experiment_rows <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-8">    dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(nrows, median_times) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-9">    tidyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(median_times)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-10">    dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Package =</span> expr) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-11">    tidyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_wider</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_from =</span> Package, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_from =</span> median_ms) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-12">    dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb8-13">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dummies =</span> dummies<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>stats,</span>
<span id="cb8-14">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dummy =</span> dummy<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>stats,</span>
<span id="cb8-15">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caret =</span> caret<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>stats,</span>
<span id="cb8-16">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fastDummies =</span> fastDummies<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>stats,</span>
<span id="cb8-17">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stats =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb8-18">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-19">    tidyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>nrows) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-20">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(nrows, value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> name)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-21">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-22">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;b&gt;{title}&lt;/b&gt; {verb} {y}x"</span>, </span>
<span id="cb8-23">                                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> name, </span>
<span id="cb8-24">                                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verb =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(name <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stats"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">":"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slower by"</span>), </span>
<span id="cb8-25">                                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(value <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb8-26">                                            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(value),</span>
<span id="cb8-27">                                            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-28">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_log10</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_number</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">accuracy =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">suffix =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-29">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_log10</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_number_si</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-30">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of Rows"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Relative Execution Rates"</span>, </span>
<span id="cb8-31">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Row Performance (log-log scale)"</span>) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-&gt;</span> p</span>
<span id="cb8-32"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplotly</span>(p, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tooltip =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div id="htmlwidget-a7e48cc9e8beeafce22c" style="width:100%;height:464px;" class="plotly html-widget"></div>
<script type="application/json" data-for="htmlwidget-a7e48cc9e8beeafce22c">{"x":{"data":[{"x":[1,2,3,4,5,6],"y":[0.154219034521254,0.151325979461311,0.155675700387177,0.127490034302503,0.21553965701427,0.320314901759985],"text":"","type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)","dash":"solid"},"hoveron":"points","name":"caret","legendgroup":"caret","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6],"y":[1.94507590072563,1.87960747046177,1.81679473312091,1.55383234341633,1.27216861635278,1.42262559122684],"text":"","type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)","dash":"solid"},"hoveron":"points","name":"dummies","legendgroup":"dummies","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6],"y":[0.749890803412145,0.852258711182388,1.12165719130252,1.49563239018006,1.39792624697176,1.51023253300917],"text":"","type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)","dash":"solid"},"hoveron":"points","name":"dummy","legendgroup":"dummy","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6],"y":[0.385605975282837,0.408502089800709,0.476165219331304,0.634589536274189,0.49692240976482,0.669603578449124],"text":"","type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)","dash":"solid"},"hoveron":"points","name":"fastDummies","legendgroup":"fastDummies","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6],"y":[0,0,0,0,0,0],"text":"","type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)","dash":"solid"},"hoveron":"points","name":"stats","legendgroup":"stats","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6],"y":[0.154219034521254,0.151325979461311,0.155675700387177,0.127490034302503,0.21553965701427,0.320314901759985],"text":["<b>caret<\/b> slower by 1.4x","<b>caret<\/b> slower by 1.4x","<b>caret<\/b> slower by 1.4x","<b>caret<\/b> slower by 1.3x","<b>caret<\/b> slower by 1.6x","<b>caret<\/b> slower by 2x"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":1,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"caret","legendgroup":"caret","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6],"y":[1.94507590072563,1.87960747046177,1.81679473312091,1.55383234341633,1.27216861635278,1.42262559122684],"text":["<b>dummies<\/b> slower by 88x","<b>dummies<\/b> slower by 76x","<b>dummies<\/b> slower by 66x","<b>dummies<\/b> slower by 36x","<b>dummies<\/b> slower by 19x","<b>dummies<\/b> slower by 26x"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(163,165,0,1)","opacity":1,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)"}},"hoveron":"points","name":"dummies","legendgroup":"dummies","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6],"y":[0.749890803412145,0.852258711182388,1.12165719130252,1.49563239018006,1.39792624697176,1.51023253300917],"text":["<b>dummy<\/b> slower by 6x","<b>dummy<\/b> slower by 7x","<b>dummy<\/b> slower by 13x","<b>dummy<\/b> slower by 31x","<b>dummy<\/b> slower by 25x","<b>dummy<\/b> slower by 32x"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,125,1)","opacity":1,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)"}},"hoveron":"points","name":"dummy","legendgroup":"dummy","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6],"y":[0.385605975282837,0.408502089800709,0.476165219331304,0.634589536274189,0.49692240976482,0.669603578449124],"text":["<b>fastDummies<\/b> slower by 2x","<b>fastDummies<\/b> slower by 3x","<b>fastDummies<\/b> slower by 3x","<b>fastDummies<\/b> slower by 4x","<b>fastDummies<\/b> slower by 3x","<b>fastDummies<\/b> slower by 5x"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,176,246,1)","opacity":1,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)"}},"hoveron":"points","name":"fastDummies","legendgroup":"fastDummies","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6],"y":[0,0,0,0,0,0],"text":"<b>stats<\/b> : 1x","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(231,107,243,1)","opacity":1,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)"}},"hoveron":"points","name":"stats","legendgroup":"stats","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null}],"layout":{"margin":{"t":43.7625570776256,"r":7.30593607305936,"b":40.1826484018265,"l":48.9497716894977},"plot_bgcolor":"rgba(235,235,235,1)","paper_bgcolor":"rgba(255,255,255,1)","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187},"title":{"text":"Row Performance (log-log scale)","font":{"color":"rgba(0,0,0,1)","family":"","size":17.5342465753425},"x":0,"xref":"paper"},"xaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[0.75,6.25],"tickmode":"array","ticktext":["10","100","1K","10K","100K","1M"],"tickvals":[1,2,3,4,5,6],"categoryorder":"array","categoryarray":["10","100","1K","10K","100K","1M"],"nticks":null,"ticks":"outside","tickcolor":"rgba(51,51,51,1)","ticklen":3.65296803652968,"tickwidth":0.66417600664176,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(255,255,255,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y","title":{"text":"Number of Rows","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}},"hoverformat":".2f"},"yaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[-0.0972537950362813,2.04232969576191],"tickmode":"array","ticktext":["1x","10x","100x"],"tickvals":[0,1,2],"categoryorder":"array","categoryarray":["1x","10x","100x"],"nticks":null,"ticks":"outside","tickcolor":"rgba(51,51,51,1)","ticklen":3.65296803652968,"tickwidth":0.66417600664176,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(255,255,255,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x","title":{"text":"Relative Execution Rates","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}},"hoverformat":".2f"},"shapes":[{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0,"y1":1}],"showlegend":true,"legend":{"bgcolor":"rgba(255,255,255,1)","bordercolor":"transparent","borderwidth":1.88976377952756,"font":{"color":"rgba(0,0,0,1)","family":"","size":11.689497716895},"title":{"text":"name","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}}},"hovermode":"closest","barmode":"relative"},"config":{"doubleClick":"reset","modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false},"source":"A","attrs":{"4f851c5986d2":{"x":{},"y":{},"colour":{},"type":"scatter"},"4f8539a25388":{"x":{},"y":{},"colour":{},"text":{}}},"cur_data":"4f851c5986d2","visdat":{"4f851c5986d2":["function (y) ","x"],"4f8539a25388":["function (y) ","x"]},"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.2,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
</div>
</div>
</section>
<section id="how-does-performance-scale-by-number-of-columns" class="level3">
<h3 class="anchored" data-anchor-id="how-does-performance-scale-by-number-of-columns">How does performance scale by number of columns?</h3>
<p><code>stats</code> is the clear winner here.</p>
<div class="cell" data-hash="2020-12-16-perf-benchmarking-dummy-variables-part-ii_cache/html/unnamed-chunk-6_0ed0575ab09cb90206b177fd010c7f3e">
<div class="cell-output-display">
<div id="htmlwidget-0563db96c27e4c269710" style="width:100%;height:464px;" class="plotly html-widget"></div>
<script type="application/json" data-for="htmlwidget-0563db96c27e4c269710">{"x":{"data":[{"x":[10,20,30,40,50],"y":[0.114166787870591,0.115733933065692,0.0779027620630683,0.0840034854350027,0.0690892874019959],"text":"","type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)","dash":"solid"},"hoveron":"points","name":"caret","legendgroup":"caret","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[10,20,30,40,50],"y":[1.89083436136451,1.91897295197004,1.92741602312565,1.9114863983755,1.92815093802217],"text":"","type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)","dash":"solid"},"hoveron":"points","name":"dummies","legendgroup":"dummies","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[10,20,30,40,50],"y":[1.19083449266505,1.22124196224263,1.22032151963396,1.22215231030983,1.20193086851907],"text":"","type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)","dash":"solid"},"hoveron":"points","name":"dummy","legendgroup":"dummy","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[10,20,30,40,50],"y":[0.510279970081117,0.555785637125009,0.539189987756118,0.539786023118777,0.538844660558824],"text":"","type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)","dash":"solid"},"hoveron":"points","name":"fastDummies","legendgroup":"fastDummies","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[10,20,30,40,50],"y":[0,0,0,0,0],"text":"","type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)","dash":"solid"},"hoveron":"points","name":"stats","legendgroup":"stats","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[10,20,30,40,50],"y":[0.114166787870591,0.115733933065692,0.0779027620630683,0.0840034854350027,0.0690892874019959],"text":["<b>caret<\/b> slower by 1.3x","<b>caret<\/b> slower by 1.3x","<b>caret<\/b> slower by 1.2x","<b>caret<\/b> slower by 1.2x","<b>caret<\/b> slower by 1.2x"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":1,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"caret","legendgroup":"caret","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[10,20,30,40,50],"y":[1.89083436136451,1.91897295197004,1.92741602312565,1.9114863983755,1.92815093802217],"text":["<b>dummies<\/b> slower by 78x","<b>dummies<\/b> slower by 83x","<b>dummies<\/b> slower by 85x","<b>dummies<\/b> slower by 82x","<b>dummies<\/b> slower by 85x"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(163,165,0,1)","opacity":1,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)"}},"hoveron":"points","name":"dummies","legendgroup":"dummies","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[10,20,30,40,50],"y":[1.19083449266505,1.22124196224263,1.22032151963396,1.22215231030983,1.20193086851907],"text":["<b>dummy<\/b> slower by 16x","<b>dummy<\/b> slower by 17x","<b>dummy<\/b> slower by 17x","<b>dummy<\/b> slower by 17x","<b>dummy<\/b> slower by 16x"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,125,1)","opacity":1,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)"}},"hoveron":"points","name":"dummy","legendgroup":"dummy","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[10,20,30,40,50],"y":[0.510279970081117,0.555785637125009,0.539189987756118,0.539786023118777,0.538844660558824],"text":["<b>fastDummies<\/b> slower by 3x","<b>fastDummies<\/b> slower by 4x","<b>fastDummies<\/b> slower by 3x","<b>fastDummies<\/b> slower by 3x","<b>fastDummies<\/b> slower by 3x"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,176,246,1)","opacity":1,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)"}},"hoveron":"points","name":"fastDummies","legendgroup":"fastDummies","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[10,20,30,40,50],"y":[0,0,0,0,0],"text":"<b>stats<\/b> : 1x","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(231,107,243,1)","opacity":1,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)"}},"hoveron":"points","name":"stats","legendgroup":"stats","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null}],"layout":{"margin":{"t":43.7625570776256,"r":7.30593607305936,"b":40.1826484018265,"l":48.9497716894977},"plot_bgcolor":"rgba(235,235,235,1)","paper_bgcolor":"rgba(255,255,255,1)","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187},"title":{"text":"Column Performance (linear-log scale)","font":{"color":"rgba(0,0,0,1)","family":"","size":17.5342465753425},"x":0,"xref":"paper"},"xaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[8,52],"tickmode":"array","ticktext":["10","20","30","40","50"],"tickvals":[10,20,30,40,50],"categoryorder":"array","categoryarray":["10","20","30","40","50"],"nticks":null,"ticks":"outside","tickcolor":"rgba(51,51,51,1)","ticklen":3.65296803652968,"tickwidth":0.66417600664176,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(255,255,255,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y","title":{"text":"Number of Columns","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}},"hoverformat":".2f"},"yaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[-0.0964075469011085,2.02455848492328],"tickmode":"array","ticktext":["1x","10x","100x"],"tickvals":[0,1,2],"categoryorder":"array","categoryarray":["1x","10x","100x"],"nticks":null,"ticks":"outside","tickcolor":"rgba(51,51,51,1)","ticklen":3.65296803652968,"tickwidth":0.66417600664176,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(255,255,255,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x","title":{"text":"Relative Execution Rates","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}},"hoverformat":".2f"},"shapes":[{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0,"y1":1}],"showlegend":true,"legend":{"bgcolor":"rgba(255,255,255,1)","bordercolor":"transparent","borderwidth":1.88976377952756,"font":{"color":"rgba(0,0,0,1)","family":"","size":11.689497716895},"title":{"text":"name","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}}},"hovermode":"closest","barmode":"relative"},"config":{"doubleClick":"reset","modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false},"source":"A","attrs":{"4f859e14235":{"x":{},"y":{},"colour":{},"type":"scatter"},"4f8523c1aaa4":{"x":{},"y":{},"colour":{},"text":{}}},"cur_data":"4f859e14235","visdat":{"4f859e14235":["function (y) ","x"],"4f8523c1aaa4":["function (y) ","x"]},"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.2,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
</div>
</div>
</section>
<section id="how-does-performance-scale-by-number-of-levels" class="level3">
<h3 class="anchored" data-anchor-id="how-does-performance-scale-by-number-of-levels">How does performance scale by number of levels?</h3>
<p>Interestingly, number of levels per factor have little/no impact on performance for <code>stats</code>, <code>caret</code> and <code>dummies</code>. <code>fastDummies</code> &amp; <code>dummies</code> show a positive correlation to levels.</p>
<div class="cell" data-hash="2020-12-16-perf-benchmarking-dummy-variables-part-ii_cache/html/unnamed-chunk-7_bd9542b6a4ce5f5b8a0ba633e5f61662">
<div class="cell-output-display">
<div id="htmlwidget-ed0ae316cbfc8d2a6060" style="width:100%;height:464px;" class="plotly html-widget"></div>
<script type="application/json" data-for="htmlwidget-ed0ae316cbfc8d2a6060">{"x":{"data":[{"x":[5,10,15,20],"y":[0.156615913179122,0.163660664479217,0.191282043687439,0.166146060223717],"text":"","type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)","dash":"solid"},"hoveron":"points","name":"caret","legendgroup":"caret","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[5,10,15,20],"y":[1.82649717191687,1.80184669120386,1.81080676846869,1.76743176336922],"text":"","type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)","dash":"solid"},"hoveron":"points","name":"dummies","legendgroup":"dummies","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[5,10,15,20],"y":[1.12202458956948,1.34054562225855,1.50616652467899,1.57711574339398],"text":"","type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)","dash":"solid"},"hoveron":"points","name":"dummy","legendgroup":"dummy","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[5,10,15,20],"y":[0.482243544870215,0.602727921008835,0.746989983502225,0.808632596579784],"text":"","type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)","dash":"solid"},"hoveron":"points","name":"fastDummies","legendgroup":"fastDummies","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[5,10,15,20],"y":[0,0,0,0],"text":"","type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)","dash":"solid"},"hoveron":"points","name":"stats","legendgroup":"stats","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[5,10,15,20],"y":[0.156615913179122,0.163660664479217,0.191282043687439,0.166146060223717],"text":["<b>caret<\/b> slower by 1.4x","<b>caret<\/b> slower by 1.5x","<b>caret<\/b> slower by 1.6x","<b>caret<\/b> slower by 1.5x"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":1,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"caret","legendgroup":"caret","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[5,10,15,20],"y":[1.82649717191687,1.80184669120386,1.81080676846869,1.76743176336922],"text":["<b>dummies<\/b> slower by 67x","<b>dummies<\/b> slower by 63x","<b>dummies<\/b> slower by 65x","<b>dummies<\/b> slower by 59x"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(163,165,0,1)","opacity":1,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)"}},"hoveron":"points","name":"dummies","legendgroup":"dummies","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[5,10,15,20],"y":[1.12202458956948,1.34054562225855,1.50616652467899,1.57711574339398],"text":["<b>dummy<\/b> slower by 13x","<b>dummy<\/b> slower by 22x","<b>dummy<\/b> slower by 32x","<b>dummy<\/b> slower by 38x"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,125,1)","opacity":1,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)"}},"hoveron":"points","name":"dummy","legendgroup":"dummy","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[5,10,15,20],"y":[0.482243544870215,0.602727921008835,0.746989983502225,0.808632596579784],"text":["<b>fastDummies<\/b> slower by 3x","<b>fastDummies<\/b> slower by 4x","<b>fastDummies<\/b> slower by 6x","<b>fastDummies<\/b> slower by 6x"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,176,246,1)","opacity":1,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)"}},"hoveron":"points","name":"fastDummies","legendgroup":"fastDummies","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[5,10,15,20],"y":[0,0,0,0],"text":"<b>stats<\/b> : 1x","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(231,107,243,1)","opacity":1,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)"}},"hoveron":"points","name":"stats","legendgroup":"stats","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null}],"layout":{"margin":{"t":43.7625570776256,"r":7.30593607305936,"b":40.1826484018265,"l":43.1050228310502},"plot_bgcolor":"rgba(235,235,235,1)","paper_bgcolor":"rgba(255,255,255,1)","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187},"title":{"text":"Factor Levels Performance (linear-log scale)","font":{"color":"rgba(0,0,0,1)","family":"","size":17.5342465753425},"x":0,"xref":"paper"},"xaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[4.25,20.75],"tickmode":"array","ticktext":["5","10","15","20"],"tickvals":[5,10,15,20],"categoryorder":"array","categoryarray":["5","10","15","20"],"nticks":null,"ticks":"outside","tickcolor":"rgba(51,51,51,1)","ticklen":3.65296803652968,"tickwidth":0.66417600664176,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(255,255,255,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y","title":{"text":"Number of Factor Levels","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}},"hoverformat":".2f"},"yaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[-0.0913248585958433,1.91782203051271],"tickmode":"array","ticktext":["1x","3x","10x","30x"],"tickvals":[0,0.477121254719662,1,1.47712125471966],"categoryorder":"array","categoryarray":["1x","3x","10x","30x"],"nticks":null,"ticks":"outside","tickcolor":"rgba(51,51,51,1)","ticklen":3.65296803652968,"tickwidth":0.66417600664176,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(255,255,255,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x","title":{"text":"Relative Execution Rates","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}},"hoverformat":".2f"},"shapes":[{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0,"y1":1}],"showlegend":true,"legend":{"bgcolor":"rgba(255,255,255,1)","bordercolor":"transparent","borderwidth":1.88976377952756,"font":{"color":"rgba(0,0,0,1)","family":"","size":11.689497716895},"title":{"text":"name","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}}},"hovermode":"closest","barmode":"relative"},"config":{"doubleClick":"reset","modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false},"source":"A","attrs":{"4f8565c4a955":{"x":{},"y":{},"colour":{},"type":"scatter"},"4f8552493fa5":{"x":{},"y":{},"colour":{},"text":{}}},"cur_data":"4f8565c4a955","visdat":{"4f8565c4a955":["function (y) ","x"],"4f8552493fa5":["function (y) ","x"]},"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.2,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
</div>
</div>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>See tl;dr</p>


</section>

 ]]></description>
  <category>Benchmarking</category>
  <guid>https://www.rsangole.com/posts/2020-12-16-perf-benchmarking-dummy-variables-part-ii/2020-12-16-perf-benchmarking-dummy-variables-part-ii.html</guid>
  <pubDate>Wed, 16 Dec 2020 05:00:00 GMT</pubDate>
</item>
<item>
  <title>M5 Competition Virtual Awards Ceremony</title>
  <dc:creator>Rahul </dc:creator>
  <link>https://www.rsangole.com/posts/2020-10-29_m5-competition-notes/2020-10-29-m5-competition-notes.html</link>
  <description><![CDATA[ 



<p>The <a href="https://mofc.unic.ac.cy/m5-competition/">M5 Forecasting Competiton</a> recently finished, this past Jun 2020. On the 29th of Oct, M Open Forecasting Center (MOFC) held a <a href="https://youtu.be/cQ_xPo9F9h4">virtual awards ceremony</a>. I jotted down some notes for myself from the key note speakers.</p>
<section id="key-note-speakers" class="level1">
<h1>Key Note Speakers</h1>
<section id="spyros-makridakis-founder" class="level2">
<h2 class="anchored" data-anchor-id="spyros-makridakis-founder">Spyros Makridakis / Founder</h2>
<section id="history-of-forecasting-competitions" class="level3">
<h3 class="anchored" data-anchor-id="history-of-forecasting-competitions">History of forecasting competitions</h3>
<ul>
<li>Initial forecasting work focused on simpler statistical models and valued human judgement (albeit with minimal improvement in forecasting accuracy). The participants for the first many forecasting competitions were largely statistians and the like.</li>
<li>M3 competition was huge push forward, ~10% accuracy improvement</li>
<li>M4 onwards, lots more machine learning solutions</li>
</ul>
<p><img src="https://www.rsangole.com/posts/2020-10-29_m5-competition-notes/Screen Shot 2020-10-29 at 10.14.26 AM.png" class="img-fluid" width="550"></p>
</section>
<section id="m5-competition" class="level3">
<h3 class="anchored" data-anchor-id="m5-competition">M5 Competition</h3>
<ul>
<li>Best method is 22.4% more accurate than best statistical benchmark</li>
<li>Higher levels of hierarchy show better improvement than lower levels</li>
<li>Middle of CI distribution shows most improvement; marginal/worse at tails</li>
</ul>
</section>
<section id="what-is-the-value-of-experience" class="level3">
<h3 class="anchored" data-anchor-id="what-is-the-value-of-experience">What is the value of experience?</h3>
<ul>
<li>Winner is an undergraduate student, has no experience in forecasting, and little/no experience in data science!</li>
<li>Winner beat 7000+ masters &amp; grand masters!</li>
<li>Winning method <code>LightGBM</code> used by top 50 competitors</li>
<li>Evidence that understanding the computational algorithms instead of forecasting itself is paying off</li>
</ul>
<p><img src="https://www.rsangole.com/posts/2020-10-29_m5-competition-notes/Screen Shot 2020-10-29 at 10.22.47 AM.png" class="img-fluid" width="550"></p>
</section>
</section>
<section id="chris-fry-google" class="level2">
<h2 class="anchored" data-anchor-id="chris-fry-google">Chris Fry / Google</h2>
<ul>
<li>Chris got involved by analyzing M4, it‚Äôs applicability to real world data sets. His critique and subsequent issues addressed in the M5 competition:</li>
</ul>
<p><img src="https://www.rsangole.com/posts/2020-10-29_m5-competition-notes/Screen Shot 2020-10-29 at 10.31.22 AM.png" class="img-fluid" width="550"></p>
<ul>
<li>Spoke of the challenge of single time-window submission:
<ul>
<li>Short period of 28 days</li>
<li>Results are subject to ‚Äòuniqueness‚Äô of test window</li>
<li><span class="citation" data-cites="google">@google</span>, they do something a bit different:
<ul>
<li>large sample for evaluation</li>
<li>year long window will cover all holidays &amp; other events</li>
<li>should provide better stability in measurement of algorithm performance</li>
</ul></li>
</ul></li>
</ul>
<p><img src="https://www.rsangole.com/posts/2020-10-29_m5-competition-notes/Screen Shot 2020-10-29 at 10.38.06 AM.png" class="img-fluid" width="550"></p>
<ul>
<li>75% of score is across top 9 levels. Bottom three are disaggregated intermittent noizy series.</li>
</ul>
<p><img src="https://www.rsangole.com/posts/2020-10-29_m5-competition-notes/Screen Shot 2020-10-29 at 10.41.28 AM.png" class="img-fluid" width="550"></p>
<ul>
<li>Price weighting : 90% of the weight came from 11% of the total series. Competiton winners can focus on left sliver and win‚Ä¶ but businesses do care about the right (inventory, spoilage etc).</li>
</ul>
<p><img src="https://www.rsangole.com/posts/2020-10-29_m5-competition-notes/Screen Shot 2020-10-29 at 10.42.45 AM.png" class="img-fluid" width="550"></p>
</section>
<section id="brian-seaman-walmart" class="level2">
<h2 class="anchored" data-anchor-id="brian-seaman-walmart">Brian Seaman / Walmart</h2>
<p>Walmart sponsored the M5 competiton and offered their real world data for the competition.</p>
<p><img src="https://www.rsangole.com/posts/2020-10-29_m5-competition-notes/Screen Shot 2020-10-29 at 10.46.14 AM.png" class="img-fluid" width="550"></p>
<ul>
<li>Why Walmart cares about forecasts?
<ul>
<li>Inventory management, capacity planning, labor planning, financials, real estate, network capacity etc</li>
</ul></li>
<li>Walmart challenges
<ul>
<li>10k Stores x 100k Items, 2m associates!</li>
<li>Varied - Top sellers, Long Tails, Seasonal/Steady series</li>
<li>New stores - cold start challenges</li>
</ul></li>
<li>Opportunities
<ul>
<li>Scaling &amp; better reliability by relying on Cloud based solutions</li>
<li>Develop relationships (product hierarchies), (product obsoluetlece, superceding)</li>
<li>Events like holidays</li>
</ul></li>
<li>M5 competition
<ul>
<li>Tried to keep datasets large without getting overwhelming</li>
<li>Intermittent demand, short histories and discontinued items; but no cold-starts since you need to develop some relationship models to previous like-items</li>
<li>Item relationships - product taxonomy + geography</li>
<li>Others - Events, pricing, weather</li>
</ul></li>
</ul>
</section>
<section id="addison-howard-kaggle" class="level2">
<h2 class="anchored" data-anchor-id="addison-howard-kaggle">Addison Howard / Kaggle</h2>
<ul>
<li>Overview of how Kaggle works</li>
<li>Balance of expertize vs industry specific knowledge?</li>
<li>Yet again, Addison spoke about the <em>need</em> for expertize in a domain vs computational prowess given the development in AI/ML.
<ul>
<li>This as a very eye-opening revalition!</li>
</ul></li>
</ul>
<p><img src="https://www.rsangole.com/posts/2020-10-29_m5-competition-notes/Screen Shot 2020-10-29 at 11.26.36 AM.png" class="img-fluid" width="550"></p>
<ul>
<li>He spoke about how competitions are an excellent platform for pushing our collective wisdom to solve complex problems. Look at these error bars for the same problem Martin solved, when picked up by teams!</li>
</ul>
<p><img src="https://www.rsangole.com/posts/2020-10-29_m5-competition-notes/Screen Shot 2020-10-29 at 11.27.01 AM.png" class="img-fluid"> - Some insights into the M5 competition:</p>
<p><img src="https://www.rsangole.com/posts/2020-10-29_m5-competition-notes/Screen Shot 2020-10-29 at 11.27.44 AM.png" class="img-fluid"></p>
</section>
<section id="len-tashman-editor-of-foresight" class="level2">
<h2 class="anchored" data-anchor-id="len-tashman-editor-of-foresight">Len Tashman / Editor of <a href="https://foresight.forecasters.org">Foresight</a></h2>
<p>Comments about takeaways of M5:</p>
<ul>
<li>Good
<ul>
<li>M5 was based on real data</li>
<li>Data were hierarchical, and dirty (intermittent, noisy)</li>
<li>ML is proving extremely valuable</li>
</ul></li>
<li>But‚Ä¶
<ul>
<li>ML methods are still quite black-boxy. Business don‚Äôt inherently accept these models.</li>
<li>Firms need to access how these methods improve their operational performance</li>
<li>Spoke of firms which do not use any methodical forecasting at all. How can they be brought into the fold?</li>
<li>How can we find the balance between traditional statistical approaches and these new ML approches in this field?</li>
</ul></li>
</ul>


</section>
</section>

 ]]></description>
  <category>Notes</category>
  <guid>https://www.rsangole.com/posts/2020-10-29_m5-competition-notes/2020-10-29-m5-competition-notes.html</guid>
  <pubDate>Thu, 29 Oct 2020 04:00:00 GMT</pubDate>
  <media:content url="https://www.rsangole.com/posts/2020-10-29_m5-competition-notes/m5.jpeg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Reproducible Work in R</title>
  <dc:creator>Rahul </dc:creator>
  <link>https://www.rsangole.com/posts/2020-10-10-reproducible-work-in-R/2020-10-10-reproducible-work-in-R.html</link>
  <description><![CDATA[ 



<p><img src="https://www.rsangole.com/posts/2020-10-10-reproducible-work-in-R/elephant.jpeg" class="img-fluid"></p>
<section id="source-of-pain" class="level1">
<h1>Source of Pain</h1>
<ul>
<li>One of the biggest challenges we face as data-scientists while working on production-grade codebases is ensuring end-to-end reproduciblity and stability over time.
<ul>
<li>This would extend to the academia as well, but I‚Äôm not an academician.</li>
</ul></li>
<li>A basic R setup has no built-in functionality to store the package versions &amp; dependencies (unlike running within a conda environment, for example).</li>
<li>If your default repository is CRAN, it‚Äôs a major problem since CRAN gets updated on a daily basis.</li>
<li>I‚Äôve found some solutions like <code>pkgdown</code> too cumbersome to use. I‚Äôve even tried working within a conda environment setup for R, but I am not a fan.</li>
<li>Collaborating in a team between data-scientists adds an additional layer of complexity. In my experience:
<ul>
<li>Folks within one team can have different versions of everything - OS, the R kernel, packages, libraries, environment variables‚Ä¶ !</li>
<li>Some folks are conservative in upgrading their systems; others are excited to try newer versions of packages</li>
</ul></li>
<li>Working across OS can often introduce unexpected problems (IME, particularly with functions which allow parallel compute <code>mcapply</code>, <code>future</code>.)
<ul>
<li>This becomes problematic when developing codebases on a local system (which might be Windows) but deploying codebases in another environment (which might be Linux)</li>
</ul></li>
</ul>
</section>
<section id="solution" class="level1">
<h1>Solution</h1>
<p>In my experience, the solution I‚Äôve outlined below offers me an excellent approach for long term reproducibility and code stability:</p>
<ol type="1">
<li>Lock down your R package versions using MRAN snapshots</li>
<li>Lock down your working environment using a Docker image</li>
<li>Do all your development within Docker containers</li>
<li>Accompany all projects with a Docker image</li>
</ol>
<p>This has worked so well that I haven‚Äôt bothered using R/Rstudio on my local machine in well over half a year now.</p>
<section id="mran-time-machine" class="level2">
<h2 class="anchored" data-anchor-id="mran-time-machine">1. MRAN Time Machine</h2>
<p>Microsoft R Application Network (MRAN) offers a ‚Äú<a href="https://mran.microsoft.com/timemachine">time machine</a>‚Äù. This service takes a daily snapshot of the <a href="http://cran.r-project.org">CRAN repository</a> repository - going as far back as Sep 2014. You can browse the snapshots on their page:</p>
<p><img src="https://www.rsangole.com/posts/2020-10-10-reproducible-work-in-R/rdocker-mran.png" class="img-fluid" width="450"></p>
<p>MRAN snapshots help us lock-down package versions using a date as the ‚Äòindex‚Äô. For example, running:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lattice"</span>, </span>
<span id="cb1-2">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repos =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://mran.microsoft.com/snapshot/2020-10-01"</span>)</span></code></pre></div>
<p>will install the version of <code>{lattice}</code> as of 1st Oct, 2020.</p>
<p>Now, this approach doesn‚Äôt make it easier to choose <em>specific versions</em> of packages <em>released over time</em>, but instead allows you to lock down a date and get only those versions available on the selected date. What that means is that running ‚ÄúUpdate Packages‚Äù on any date after 1st of Oct won‚Äôt change your package configuration.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repos =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://mran.microsoft.com/snapshot/2020-10-01"</span>)</span>
<span id="cb2-2"><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getOption</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"repos"</span>)</span>
<span id="cb2-3">[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://mran.microsoft.com/snapshot/2020-10-01"</span></span></code></pre></div>
</section>
<section id="docker-image" class="level2">
<h2 class="anchored" data-anchor-id="docker-image">2. Docker Image</h2>
<section id="the-dockerfile" class="level3">
<h3 class="anchored" data-anchor-id="the-dockerfile">The Dockerfile</h3>
<p>The <code>Dockerfile</code> holds the definition of how a docker image is built. The Dockerfile which I use to maintain this blog is saved <a href="https://github.com/rsangole/blog/blob/master/docker/Dockerfile">here</a>. It‚Äôs hosted on <a href="https://hub.docker.com/repository/docker/hatmatrix/blog">hub.docker.com</a> too.</p>
<p>Here‚Äôs a quick explanation of the file. For a deeper dive into Dockerfiles, there are lots of resources online <a href="https://rollout.io/blog/a-beginners-guide-to-the-dockerfile/">1</a>, <a href="https://linuxhint.com/understand_dockerfile/">2</a>, <a href="https://blog.hipolabs.com/understanding-docker-without-losing-your-shit-cf2b30307c63">3</a>.</p>
<section id="from" class="level4">
<h4 class="anchored" data-anchor-id="from">FROM</h4>
<p>I‚Äôm using the <code>rocker/tidyverse:4.0.0</code> <a href="https://hub.docker.com/layers/rocker/tidyverse/4.0.0/images/sha256-b5dca99adfd18ae14ba50dcbc4aaaec2674138bc75015104a77a9805694c157a?context=explore">image</a>, which offers a great starting point. It has R version 4.0.0 and the tidyverse packages preinstalled.</p>
<pre class="docker"><code>FROM rocker/tidyverse:4.0.0</code></pre>
</section>
<section id="run" class="level4">
<h4 class="anchored" data-anchor-id="run">RUN</h4>
<p>This installs many of the linux libraries needed for the subsequent R packages to work. I‚Äôve also installed some useful utility packages like <code>curl</code>, <code>jq</code> and <code>vim</code>.</p>
<pre class="docker"><code>RUN apt-get update &amp;&amp; apt-get install -y --no-install-recommends \
        libgit2-dev \
        libxml2-dev \
        ... \
        ... \
        curl \
        tree \
        jq \
        htop \
        texinfo \
        vim \
        man-db \
        less</code></pre>
</section>
<section id="env-r-pkg-install" class="level4">
<h4 class="anchored" data-anchor-id="env-r-pkg-install">ENV + R PKG INSTALL</h4>
<p>Here‚Äôs where I set the MRAN Build Date and then install the R packages I need using <code>install2.r</code> with the <code>-r</code> argument to point to MRAN Time Machine instead of CRAN.</p>
<pre class="docker"><code>ENV MRAN_BUILD_DATE=2020-09-01

# Install Basic Utility R Packages
RUN install2.r -r https://cran.microsoft.com/snapshot/${MRAN_BUILD_DATE} \
    --error \
    rgl \
    data.table \
    reprex \
    # ~ 30 more R Packages
    ... \
    ... \</code></pre>
</section>
<section id="build-push" class="level4">
<h4 class="anchored" data-anchor-id="build-push">Build &amp; Push</h4>
<p>Build the docker image and push it to <code>hub.docker.com</code>.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> build . <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> hatmatrix/blog:latest</span>
<span id="cb6-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> push hatmatrix/blog:latest</span></code></pre></div>
<p>Your docker image is now avaiable online for anyone running your project to pull.</p>
</section>
</section>
</section>
<section id="develop-in-docker" class="level2">
<h2 class="anchored" data-anchor-id="develop-in-docker">3. Develop in Docker</h2>
<p>Now I have a stable docker image to use for this blog. I can run the image with this shell cmd:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> run </span>
<span id="cb7-2">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-d</span> </span>
<span id="cb7-3">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-e</span> PASSWORD=1234 </span>
<span id="cb7-4">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-v</span> ~/github/:/home/rstudio/projects/ </span>
<span id="cb7-5">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-p</span> 3838:3838 </span>
<span id="cb7-6">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-p</span> 8787:8787 </span>
<span id="cb7-7">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">hatmatrix/blog:latest</span></span></code></pre></div>
<p>The components of this command are:</p>
<ul>
<li><code>docker run</code> : Run a docker image‚Ä¶</li>
<li><code>-d</code> : in detached mode, i.e.&nbsp;once the image is run in the background, you get your shell prompt</li>
<li><code>-e PASSWORD=1234</code> : <code>-e</code> are additional arguments. Here, we‚Äôve set the Rstudio password to 1234</li>
<li><code>-v</code> : this maps <code>~/github/</code> on my local machine to <code>~/home/rstudio/projects/</code> within the docker container</li>
<li><code>-p</code> : these args map ports from my local machine to ports within docker. We need one for rstudio (8787) and one for any shiny apps we launch from within rstudio (3838)</li>
<li><code>hatmatrix/blog:latest</code> : this is the name of the docker image</li>
</ul>
<p><strong>The importance of <code>-v</code>:</strong> Without <code>-v</code> you won‚Äôt have access to any of your local files within the docker container. Remember, docker containers are fully isolated from your local machine. Also, since containers are ephemeral (i.e.&nbsp;short-lived &amp; temporary), once the container is shutdown, you will lose any data stored within it permanently. Mapping to a local folder allows you to work on projects stored locally within the container.</p>
</section>
<section id="docker-images-accompany-r-projects" class="level2">
<h2 class="anchored" data-anchor-id="docker-images-accompany-r-projects">4. Docker images accompany R projects</h2>
<p>Just create a <code>/docker</code> folder in your working project directory, and save your Dockerfile. Here‚Äôs my example for this blog: <a href="https://github.com/rsangole/blog/tree/master/docker">example docker folder</a>. Optionally, create a <code>docker-build.sh</code> to save on some typing down the line.</p>
</section>
</section>
<section id="thats-it" class="level1">
<h1>That‚Äôs it!</h1>
<p>This is a lightweight workflow which has allowed me to maintain full reproducibility and code stability no matter which OS I‚Äôm working on.</p>
</section>
<section id="useful-links" class="level1">
<h1>Useful Links</h1>
<ul>
<li>https://mran.microsoft.com/timemachine</li>
<li>https://github.com/rocker-org/rocker</li>
</ul>


</section>

 ]]></description>
  <category>Docker</category>
  <category>Programming Practices</category>
  <guid>https://www.rsangole.com/posts/2020-10-10-reproducible-work-in-R/2020-10-10-reproducible-work-in-R.html</guid>
  <pubDate>Sat, 10 Oct 2020 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Using tryCatch for robust R scripts</title>
  <dc:creator>Rahul </dc:creator>
  <link>https://www.rsangole.com/posts/2018-08-02-try-catch/2018-08-02-try-catch.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.rsangole.com/posts/2018-08-02-try-catch/trycatch.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Using <code>tryCatch</code> to write robust R code can be a bit confusing. I found the help file dry to read. There are some resources which explore <code>tryCatch</code>, linked below. Over the years, I have developed a few programming paradigms which I‚Äôve repeatedly found useful. A quick introduction to <code>tryCatch</code> below, followed by three use-cases I use on a regular basis.</p>
<section id="syntax" class="level1">
<h1>Syntax</h1>
<p><code>tryCatch</code> has a slightly complex syntax structure. However, once we understand the 4 parts which constitute a complete <code>tryCatch</code> call as shown below, it becomes easy to remember:</p>
<ul>
<li><code>expr</code> : [Required] R code(s) to be evaluated</li>
<li><code>error</code> : [Optional] What should run if an error occured while evaluating the codes in <code>expr</code></li>
<li><code>warning</code> : [Optional] What should run if a warning occured while evaluating the codes in <code>expr</code></li>
<li><code>finally</code> : [Optional] What should run just before quitting the <code>tryCatch</code> call, irrespective of if <code>expr</code> ran succcessfuly, with an error, or with a warning</li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tryCatch</span>(</span>
<span id="cb1-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expr =</span> {</span>
<span id="cb1-3">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Your code...</span></span>
<span id="cb1-4">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># goes here...</span></span>
<span id="cb1-5">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ...</span></span>
<span id="cb1-6">    },</span>
<span id="cb1-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">error =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(e){ </span>
<span id="cb1-8">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (Optional)</span></span>
<span id="cb1-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Do this if an error is caught...</span></span>
<span id="cb1-10">    },</span>
<span id="cb1-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">warning =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(w){</span>
<span id="cb1-12">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (Optional)</span></span>
<span id="cb1-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Do this if an warning is caught...</span></span>
<span id="cb1-14">    },</span>
<span id="cb1-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">finally =</span> {</span>
<span id="cb1-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (Optional)</span></span>
<span id="cb1-17">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Do this at the end before quitting the tryCatch structure...</span></span>
<span id="cb1-18">    }</span>
<span id="cb1-19">)</span></code></pre></div>
</div>
<section id="hello-world-example" class="level2">
<h2 class="anchored" data-anchor-id="hello-world-example">Hello World example</h2>
<p>This is a toy example showing how a function can use <code>tryCatch</code> to handle execution.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">log_calculator <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x){</span>
<span id="cb2-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tryCatch</span>(</span>
<span id="cb2-3">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expr =</span> {</span>
<span id="cb2-4">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(x))</span>
<span id="cb2-5">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Successfully executed the log(x) call."</span>)</span>
<span id="cb2-6">        },</span>
<span id="cb2-7">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">error =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(e){</span>
<span id="cb2-8">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Caught an error!'</span>)</span>
<span id="cb2-9">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(e)</span>
<span id="cb2-10">        },</span>
<span id="cb2-11">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">warning =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(w){</span>
<span id="cb2-12">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Caught an warning!'</span>)</span>
<span id="cb2-13">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(w)</span>
<span id="cb2-14">        },</span>
<span id="cb2-15">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">finally =</span> {</span>
<span id="cb2-16">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'All done, quitting.'</span>)</span>
<span id="cb2-17">        }</span>
<span id="cb2-18">    )    </span>
<span id="cb2-19">}</span></code></pre></div>
</div>
<p>If x is a valid number, <code>expr</code> and <code>finally</code> are executed:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log_calculator</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb3-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 2.30258509299405</span></span>
<span id="cb3-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Successfully executed the log(x) call.</span></span>
<span id="cb3-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## All done, quitting.</span></span></code></pre></div>
</div>
<p>If x is an invalid number (negative, zero, <code>NA</code>), <code>expr</code> is attempted, and <code>warning</code> and <code>finally</code> are executed:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log_calculator</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb4-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Caught an warning!</span></span>
<span id="cb4-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## &lt;simpleWarning in log(x): NaNs produced&gt;</span></span>
<span id="cb4-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## All done, quitting.</span></span></code></pre></div>
</div>
<p>If x is an invalid entry which raises an error, <code>expr</code> is attempted, and <code>error</code> and <code>finally</code> are executed:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log_calculator</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"log_me"</span>)</span>
<span id="cb5-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Caught an error!</span></span>
<span id="cb5-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## &lt;simpleError in log(x): non-numeric argument to mathematical function&gt;</span></span>
<span id="cb5-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## All done, quitting.</span></span></code></pre></div>
</div>
<hr>
</section>
</section>
<section id="more-useful-examples" class="level1">
<h1>More useful examples</h1>
<section id="use-trycatch-within-loops" class="level2">
<h2 class="anchored" data-anchor-id="use-trycatch-within-loops">Use <code>tryCatch</code> within loops</h2>
<p>There are cases at work where I have quite large datasets to pre-process before model building can begin. The sources of these data can be varied and thus the quality of these data can vary. While each dataset <em>should</em> conform to our data quality standards (datatypes, data dictionaries, other domain-specific constraints), very often these isn‚Äôt the case. As a result, common data preprocessing functions might fail on few datasets. We can use <code>tryCatch</code> within the <code>for</code> loop to catch errors without breaking the loop.</p>
<p><em>Another toy example:</em> Say, we have a nested dataframe of the <code>mtcars</code> data, nested on the cylinder numbers, and say, we had a few character values in <code>mpg</code> which is our response variable.</p>
<div class="cell" data-paged.print="false">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example nested dataframe</span></span>
<span id="cb6-2">df_nested <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">split</span>(mtcars, mtcars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cyl)</span>
<span id="cb6-3"></span>
<span id="cb6-4">df_nested[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]][<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>),<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mpg"</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span></span>
<span id="cb6-5">df_nested</span>
<span id="cb6-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## $`4`</span></span>
<span id="cb6-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##                 mpg cyl  disp  hp drat    wt  qsec vs am gear carb</span></span>
<span id="cb6-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Datsun 710     22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1</span></span>
<span id="cb6-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Merc 240D      24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2</span></span>
<span id="cb6-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Merc 230       22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2</span></span>
<span id="cb6-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Fiat 128       32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1</span></span>
<span id="cb6-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Honda Civic    30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2</span></span>
<span id="cb6-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Toyota Corolla 33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1</span></span>
<span id="cb6-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Toyota Corona  21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1</span></span>
<span id="cb6-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Fiat X1-9      27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1</span></span>
<span id="cb6-16"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Porsche 914-2  26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2</span></span>
<span id="cb6-17"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Lotus Europa   30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2</span></span>
<span id="cb6-18"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Volvo 142E     21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2</span></span>
<span id="cb6-19"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## </span></span>
<span id="cb6-20"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## $`6`</span></span>
<span id="cb6-21"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##                 mpg cyl  disp  hp drat    wt  qsec vs am gear carb</span></span>
<span id="cb6-22"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Mazda RX4        21   6 160.0 110 3.90 2.620 16.46  0  1    4    4</span></span>
<span id="cb6-23"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Mazda RX4 Wag    21   6 160.0 110 3.90 2.875 17.02  0  1    4    4</span></span>
<span id="cb6-24"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Hornet 4 Drive 21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1</span></span>
<span id="cb6-25"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Valiant           a   6 225.0 105 2.76 3.460 20.22  1  0    3    1</span></span>
<span id="cb6-26"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Merc 280          a   6 167.6 123 3.92 3.440 18.30  1  0    4    4</span></span>
<span id="cb6-27"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Merc 280C      17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4</span></span>
<span id="cb6-28"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Ferrari Dino   19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6</span></span>
<span id="cb6-29"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## </span></span>
<span id="cb6-30"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## $`8`</span></span>
<span id="cb6-31"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##                      mpg cyl  disp  hp drat    wt  qsec vs am gear carb</span></span>
<span id="cb6-32"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2</span></span>
<span id="cb6-33"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4</span></span>
<span id="cb6-34"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3</span></span>
<span id="cb6-35"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3</span></span>
<span id="cb6-36"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3</span></span>
<span id="cb6-37"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4</span></span>
<span id="cb6-38"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4</span></span>
<span id="cb6-39"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4</span></span>
<span id="cb6-40"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2</span></span>
<span id="cb6-41"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2</span></span>
<span id="cb6-42"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4</span></span>
<span id="cb6-43"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2</span></span>
<span id="cb6-44"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4</span></span>
<span id="cb6-45"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8</span></span></code></pre></div>
</div>
<p>We wish to run a few custom preprocessors, including taking the log of <code>mpg</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">convert_gear_to_factors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb7-2">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(df) {</span>
<span id="cb7-3">    df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-4">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gear =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(gear, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gear_"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)))</span>
<span id="cb7-5">  }</span>
<span id="cb7-6">transform_response_to_log <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb7-7">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(df) {</span>
<span id="cb7-8">    df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log_mpg =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(mpg)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>mpg)</span>
<span id="cb7-9">  }</span></code></pre></div>
</div>
<p>How do we run our preprocessors over all the rows without error-ing out?</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (indx <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(df_nested)) {</span>
<span id="cb8-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tryCatch</span>(</span>
<span id="cb8-3">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expr =</span> {</span>
<span id="cb8-4">            df_nested[[indx]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  df_nested[[indx]] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-5">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">convert_gear_to_factors</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-6">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform_response_to_log</span>()</span>
<span id="cb8-7">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Iteration "</span>, indx, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" successful."</span>)</span>
<span id="cb8-8">        },</span>
<span id="cb8-9">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">error =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(e){</span>
<span id="cb8-10">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"* Caught an error on itertion "</span>, indx)</span>
<span id="cb8-11">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(e)</span>
<span id="cb8-12">        }</span>
<span id="cb8-13">    )</span>
<span id="cb8-14">}</span>
<span id="cb8-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Iteration 1 successful.</span></span>
<span id="cb8-16"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## * Caught an error on itertion 2</span></span>
<span id="cb8-17"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## &lt;error/dplyr:::mutate_error&gt;</span></span>
<span id="cb8-18"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Error in `mutate()`:</span></span>
<span id="cb8-19"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ! Problem while computing `log_mpg = log(mpg)`.</span></span>
<span id="cb8-20"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Caused by error in `log()`:</span></span>
<span id="cb8-21"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ! non-numeric argument to mathematical function</span></span>
<span id="cb8-22"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ---</span></span>
<span id="cb8-23"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Backtrace:</span></span>
<span id="cb8-24"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   1. base::tryCatch(...)</span></span>
<span id="cb8-25"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  10. dplyr:::mutate.data.frame(., log_mpg = log(mpg))</span></span>
<span id="cb8-26"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  11. dplyr:::mutate_cols(.data, dplyr_quosures(...), caller_env = caller_env())</span></span>
<span id="cb8-27"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  13. mask$eval_all_mutate(quo)</span></span>
<span id="cb8-28"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Iteration 3 successful.</span></span></code></pre></div>
</div>
<p>We‚Äôre able to handle the error on iteration 2, let the user know, and run the remaining iterations.</p>
</section>
<section id="catch-issues-early-log-progress-often" class="level2">
<h2 class="anchored" data-anchor-id="catch-issues-early-log-progress-often">Catch issues early, log progress often</h2>
<p>An important component of preparing ‚Äòdevelopment‚Äô code to be ‚Äòproduction‚Äô ready is implementation of good defensive programming and logging practices. I won‚Äôt go into details of either here, except to showcase the style of programs I have been writing to prepare code before it goes to our production cluster.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">preprocess_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(df, x, b, ...){</span>
<span id="cb9-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-- Within preprocessor"</span>)</span>
<span id="cb9-3">    df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-4">        assertive<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">assert_is_data.frame</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-5">        assertive<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">assert_is_non_empty</span>()</span>
<span id="cb9-6">    x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-7">        assertive<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">assert_is_numeric</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-8">        assertive<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">assert_all_are_greater_than</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.14</span>)</span>
<span id="cb9-9">    b <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-10">        assertive<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">assert_is_a_bool</span>()</span>
<span id="cb9-11">    </span>
<span id="cb9-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Code here...</span></span>
<span id="cb9-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ....</span></span>
<span id="cb9-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ....</span></span>
<span id="cb9-15">    </span>
<span id="cb9-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(df)</span>
<span id="cb9-17">}</span>
<span id="cb9-18">build_model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(...){<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-- Building model..."</span>)}</span>
<span id="cb9-19">eval_model  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(...) {<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-- Evaluating model..."</span>)}</span>
<span id="cb9-20">save_model  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(...) {<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-- Saving model..."</span>)}</span>
<span id="cb9-21"></span>
<span id="cb9-22">main_executor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(...){</span>
<span id="cb9-23">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tryCatch</span>(</span>
<span id="cb9-24">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expr =</span> {</span>
<span id="cb9-25">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">preprocess_data</span>(df, x, b, more_args,...) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-26">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">build_model</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-27">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eval_model</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-28">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">save_model</span>()</span>
<span id="cb9-29">        },</span>
<span id="cb9-30">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">error =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(e){</span>
<span id="cb9-31">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'** ERR at '</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.time</span>(), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" **"</span>)</span>
<span id="cb9-32">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(e)</span>
<span id="cb9-33">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_to_log_file</span>(e, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">logger_level =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ERR"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Custom logging function</span></span>
<span id="cb9-34">        },</span>
<span id="cb9-35">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">warning =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(w){</span>
<span id="cb9-36">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'** WARN at '</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.time</span>(), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" **"</span>)</span>
<span id="cb9-37">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(w)</span>
<span id="cb9-38">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_to_log_file</span>(w, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">logger_level =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"WARN"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Custom logging function</span></span>
<span id="cb9-39">        },</span>
<span id="cb9-40">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">finally =</span> {</span>
<span id="cb9-41">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--- Main Executor Complete ---"</span>)</span>
<span id="cb9-42">        }</span>
<span id="cb9-43">    )</span>
<span id="cb9-44">}</span></code></pre></div>
</div>
<p>Each utility function starts with checking arguments. There are plenty of packages which allow run-time testing. My favorite one is <a href="https://cran.r-project.org/web/packages/assertive/index.html">assertive</a>. It‚Äôs easy to read the code, and it‚Äôs pipe-able. Errors and warnings are handled using <code>tryCatch</code> - they are printed to the console if running in interactive mode, and then written to log files as well. I have written my own custom logging functions, but there are packages like <a href="https://cran.r-project.org/web/packages/logging/logging.pdf">logging</a> and <a href="https://cran.r-project.org/web/packages/log4r/index.html">log4r</a> which work perfectly fine.</p>
</section>
<section id="use-trycatch-while-model-building" class="level2">
<h2 class="anchored" data-anchor-id="use-trycatch-while-model-building">Use <code>tryCatch</code> while model building</h2>
<p><code>tryCatch</code> is quite invaluable during model building. This is an actual piece of code I wrote for a kaggle competition as part of my midterm work at school. <a href="https://github.com/rsangole/413_midterm_kaggle">Github link here</a>. The details of what‚Äôs going on isn‚Äôt important. At a high level, I was fitting <code>stlf</code> models using <a href="https://www.rdocumentation.org/packages/forecast/versions/8.4/topics/forecast.stl"><code>forecast</code></a> for each shop, among 60 unique shop-ID numbers. For various reasons, for some shops, an <code>stlf</code> model could not be be fit, in which case a default seasonal naive model using <code>snaive</code> was to be used. <code>tryCatch</code> is a perfect way to handle such exceptions as shown below. I used a similar approach while building models at an ‚Äúitem‚Äù level: the number of unique items was in the 1000s; manually debugging one at a time is impossible. <code>tryCatch</code> allows us to programatically handle such situations.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">stlf_yhats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vector</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mode =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'list'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(unique_shops))</span>
<span id="cb10-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_along</span>(unique_shops)) {</span>
<span id="cb10-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Processing shop'</span>, unique_shops[i])</span>
<span id="cb10-4">    tr_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> c6_tr <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(shop_id <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> unique_shops[i])</span>
<span id="cb10-5">    tr_data_ts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb10-6">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dcast</span>(</span>
<span id="cb10-7">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">formula =</span> yw <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> shop_id,</span>
<span id="cb10-8">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> tr_data,</span>
<span id="cb10-9">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fun.aggregate =</span> sum,</span>
<span id="cb10-10">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value.var =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'total_sales'</span>,</span>
<span id="cb10-11">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb10-12">        )</span>
<span id="cb10-13">    tr_data_ts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts</span>(tr_data_ts[, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">frequency =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">52</span>)</span>
<span id="cb10-14"></span>
<span id="cb10-15">    <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##################</span></span>
<span id="cb10-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># &lt;--Look here --&gt;</span></span>
<span id="cb10-17">    fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tryCatch</span>(</span>
<span id="cb10-18">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expr =</span> {tr_data_ts <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stlf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lambda =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'auto'</span>)},</span>
<span id="cb10-19">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">error =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(e) { tr_data_ts <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">snaive</span>()}</span>
<span id="cb10-20">      )</span>
<span id="cb10-21">    <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##################</span></span>
<span id="cb10-22">  </span>
<span id="cb10-23">    fc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> fit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">forecast</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h =</span> h)</span>
<span id="cb10-24">    stlf_yhats[[i]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(fc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>mean)</span>
<span id="cb10-25">    stlf_yhats[[i]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(stlf_yhats[[i]] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, stlf_yhats[[i]])</span>
<span id="cb10-26">}</span></code></pre></div>
</div>
<p>Hope this is useful to others learning <code>tryCatch</code>. Cheers.</p>
</section>
</section>
<section id="links" class="level1">
<h1>Links</h1>
<ul>
<li>https://www.rdocumentation.org/packages/R.oo/versions/1.2.7/topics/trycatch</li>
<li>https://www.r-bloggers.com/careful-with-trycatch/</li>
<li>http://adv-r.had.co.nz/Exceptions-Debugging.html</li>
</ul>


</section>

 ]]></description>
  <category>Programming Practices</category>
  <guid>https://www.rsangole.com/posts/2018-08-02-try-catch/2018-08-02-try-catch.html</guid>
  <pubDate>Thu, 20 Dec 2018 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Performance Benchmarking for Date-Time conversions</title>
  <dc:creator>Rahul </dc:creator>
  <link>https://www.rsangole.com/posts/2018-04-12-performance-benchmarking-for-date-time-conversions/2018-04-12-performance-benchmarking-for-date-time-conversions.html</link>
  <description><![CDATA[ 



<section id="motivation" class="level2">
<h2 class="anchored" data-anchor-id="motivation">Motivation</h2>
<p>Once more, there‚Äôs was an opportunity at work to optimize code and reduce run-time. The last time was for <a href="http://rsangole.netlify.com/post/dummy-variables-one-hot-encoding/">dummy-variable creation</a>. Upon querying large data from our hive tables, the returned dataframe contains values of class <code>character</code>. Thus, everything has to be first type converted before any processing can be done.</p>
<p>The most time consuming of these has been <code>character</code> to <code>date-time</code> conversion for which I traditionally used <code>base::as.POSIXct</code>.</p>
<p>Upon searching for some options myself, some help from Twitter, I‚Äôve compared the performance of 6 functions on a 1e7 size character vector.</p>
<p><img src="https://www.rsangole.com/posts/2018-04-12-performance-benchmarking-for-date-time-conversions/Henning_on_Twitter.png" class="img-fluid" width="450"></p>
</section>
<section id="performance-comparison" class="level2">
<h2 class="anchored" data-anchor-id="performance-comparison">Performance comparison</h2>
<p>I‚Äôve run these benchmarks on my Macbook Pro:</p>
<ul>
<li>Processor Name: Intel Core i5</li>
<li>Processor Speed: 2.4 GHz</li>
<li>Number of Processors: 1</li>
<li>Total Number of Cores: 2</li>
<li>L2 Cache (per Core): 256 KB</li>
<li>L3 Cache: 3 MB</li>
<li>Memory: 8 GB</li>
</ul>
</section>
<section id="packages-compared" class="level2">
<h2 class="anchored" data-anchor-id="packages-compared">Packages compared</h2>
<ul>
<li><code>base::strptime</code></li>
<li><code>base::as.POSIXct</code></li>
<li><code>lubridate::parse_date_time</code></li>
<li><code>lubridate::parse_date_time2</code> [fast C parser]</li>
<li><code>lubridate::fast_strptime</code> [fast C parser]</li>
<li><code>fasttime::fastPOSIXct</code> [fast C parser]</li>
</ul>
<div class="cell" data-hash="2018-04-12-performance-benchmarking-for-date-time-conversions_cache/html/unnamed-chunk-1_c1e71945d4f8e79a5e6097c32dedd438">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">tvec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.time</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e9</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e9</span>)),<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e7</span>)</span>
<span id="cb1-2"></span>
<span id="cb1-3">strp_fn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(tvec) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strptime</span>(tvec, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">format =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'%Y-%m-%d %H:%M:%S'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tz =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'UTC'</span>)</span>
<span id="cb1-4">POSIX_fn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(tvec) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.POSIXct</span>(tvec, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">format =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'%Y-%m-%d %H:%M:%S'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tz =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'UTC'</span>)</span>
<span id="cb1-5">pdt_fn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(tvec) lubridate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parse_date_time</span>(tvec, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">orders =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Ymd H M S'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tz =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'UTC'</span>)</span>
<span id="cb1-6">pdt2_fn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(tvec) lubridate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parse_date_time2</span>(tvec, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">orders =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Ymd H M S'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tz =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'UTC'</span>)</span>
<span id="cb1-7">faststrp_fn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(tvec) lubridate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fast_strptime</span>(tvec, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">format =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'%Y-%m-%d %H:%M:%OS'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tz =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'UTC'</span>)</span>
<span id="cb1-8">fasttime_fn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(tvec) fasttime<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fastPOSIXct</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> tvec, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tz =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'UTC'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">required.components =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb1-9"></span>
<span id="cb1-10">benchmarks <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> microbenchmark<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">microbenchmark</span>(</span>
<span id="cb1-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">strptime =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strp_fn</span>(tvec),          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">asPOSIXct =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">POSIX_fn</span>(tvec),</span>
<span id="cb1-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parse_date_time =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pdt_fn</span>(tvec),    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parse_date_time2 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pdt2_fn</span>(tvec),</span>
<span id="cb1-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fast_strptime =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">faststrp_fn</span>(tvec), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fastPOSIXct =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fasttime_fn</span>(tvec),</span>
<span id="cb1-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> 30L, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">unit =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'s'</span>)</span>
<span id="cb1-15"></span>
<span id="cb1-16">ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">autoplot</span>(benchmarks, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log =</span> F)</span>
<span id="cb1-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(benchmarks) ; <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(benchmarks, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">unit =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'relative'</span>)</span></code></pre></div>
</div>
</section>
<section id="results" class="level2">
<h2 class="anchored" data-anchor-id="results">Results</h2>
<div class="cell" data-hash="2018-04-12-performance-benchmarking-for-date-time-conversions_cache/html/unnamed-chunk-2_bfaf3caa7fe79b90c6c67dd68fd6d329">
<div class="cell-output-display">
<p><img src="https://www.rsangole.com/posts/2018-04-12-performance-benchmarking-for-date-time-conversions/2018-04-12-performance-benchmarking-for-date-time-conversions_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>The results are quite amazing. <code>fastPOSIXct</code> wins by a massive margin. <code>as.POSIXct</code> is 10x slower than <code>fastPOSIXct</code> and has a wider spread too.</p>
<div class="cell" data-hash="2018-04-12-performance-benchmarking-for-date-time-conversions_cache/html/unnamed-chunk-3_2c7bc6c6610ca420f33e7267275e7777">
<div class="cell-output cell-output-stdout">
<pre><code>Unit: relative
             expr       min        lq     mean    median       uq      max
         strptime  7.140213  6.995050 6.587170  6.931937 6.243467 5.545282
        asPOSIXct 10.888603 10.668598 9.886067 10.338859 9.127702 8.170841
  parse_date_time  3.658794  3.700901 3.607782  3.840411 3.530341 3.136295
 parse_date_time2  1.973176  1.957485 1.864200  1.924281 1.753341 1.701600
    fast_strptime  1.795452  1.753926 1.717556  1.772935 1.605809 1.588742
      fastPOSIXct  1.000000  1.000000 1.000000  1.000000 1.000000 1.000000
 neval
    30
    30
    30
    30
    30
    30</code></pre>
</div>
</div>
<p>If you run these bench marks on more powerful machines or larger datasets, share your results too. It‚Äôll be interesting to see if this result scales.</p>
<p>Thanks <a href="https://twitter.com/henningsway">Henning</a> for the winning package suggestion! I owe you some beer!</p>


</section>

 ]]></description>
  <category>Benchmarking</category>
  <category>Programming Practices</category>
  <guid>https://www.rsangole.com/posts/2018-04-12-performance-benchmarking-for-date-time-conversions/2018-04-12-performance-benchmarking-for-date-time-conversions.html</guid>
  <pubDate>Thu, 12 Apr 2018 04:00:00 GMT</pubDate>
  <media:content url="https://www.rsangole.com/posts/2018-04-12-performance-benchmarking-for-date-time-conversions/clocks.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Books I Reference</title>
  <dc:creator>Rahul </dc:creator>
  <link>https://www.rsangole.com/posts/2018-02-13-books-i-reference/2018-02-13-books-i-reference.html</link>
  <description><![CDATA[ 



<p><img src="https://www.rsangole.com/posts/2018-02-13-books-i-reference/books.png" class="img-fluid"></p>
<p>The full list of the books in my shelf is on my <a href="https://www.goodreads.com/review/list/28286118-rahul?utf8=%E2%9C%93&amp;utf8=%E2%9C%93&amp;print=true&amp;shelf=data-science&amp;title=rahul&amp;sort=position&amp;order=a&amp;per_page=75">Goodreads account</a> <sup>1</sup>. The ones I refer to the most are listed here:</p>
<div class="cell-output-display">
<div class="table-responsive">
<table class="table table-striped table-hover table-condensed" data-quarto-postprocess="true">
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th"></th>
<th style="text-align: left;" data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd" data-grouplength="4">
<td colspan="2" style="border-bottom: 1px solid"><strong>Deep Learning</strong></td>
</tr>
<tr class="even">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Deep Learning with R</td>
<td style="text-align: left; width: 12em;">Francois Chollet</td>
</tr>
<tr class="odd">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Handbook Of Neural Computing Applications</td>
<td style="text-align: left; width: 12em;">Alianna J Maren</td>
</tr>
<tr class="even">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Deep Learning</td>
<td style="text-align: left; width: 12em;">Ian Goodfellow</td>
</tr>
<tr class="odd">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">LSTM with Python</td>
<td style="text-align: left; width: 12em;">Jason Brownlee</td>
</tr>
<tr class="even" data-grouplength="4">
<td colspan="2" style="border-bottom: 1px solid"><strong>GLM</strong></td>
</tr>
<tr class="odd">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Generalized Additive Models: An Introduction with R, Second Edition</td>
<td style="text-align: left; width: 12em;">Simon Wood</td>
</tr>
<tr class="even">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Applied Regression Modeling</td>
<td style="text-align: left; width: 12em;">Iain Pardoe</td>
</tr>
<tr class="odd">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Generalized Linear Models</td>
<td style="text-align: left; width: 12em;">John P. Hoffmann</td>
</tr>
<tr class="even">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Introduction to Linear Regression Analysis</td>
<td style="text-align: left; width: 12em;">Douglas Montgomery</td>
</tr>
<tr class="odd" data-grouplength="4">
<td colspan="2" style="border-bottom: 1px solid"><strong>ML</strong></td>
</tr>
<tr class="even">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Hands-On Machine Learning with Scikit-Learn and Tensorflow: Concepts, Tools, and Techniques to Build Intelligent Systems</td>
<td style="text-align: left; width: 12em;">Aurelien Geron</td>
</tr>
<tr class="odd">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Flexible Imputation of Missing Data</td>
<td style="text-align: left; width: 12em;">Stef van Buuren</td>
</tr>
<tr class="even">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Applied Predictive Modeling</td>
<td style="text-align: left; width: 12em;">Max Kuhn</td>
</tr>
<tr class="odd">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">An Introduction to Statistical Learning: With Applications in R</td>
<td style="text-align: left; width: 12em;">Trevor Hastie</td>
</tr>
<tr class="even" data-grouplength="3">
<td colspan="2" style="border-bottom: 1px solid"><strong>Python</strong></td>
</tr>
<tr class="odd">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Python for Data Analysis</td>
<td style="text-align: left; width: 12em;">Wes McKinney</td>
</tr>
<tr class="even">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Introducing Python: Modern Computing in Simple Packages</td>
<td style="text-align: left; width: 12em;">Bill Lubanovic</td>
</tr>
<tr class="odd">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Python Cookbook</td>
<td style="text-align: left; width: 12em;">David Beazley</td>
</tr>
<tr class="even" data-grouplength="4">
<td colspan="2" style="border-bottom: 1px solid"><strong>Quality</strong></td>
</tr>
<tr class="odd">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Multivariate Statistical Quality Control Using R</td>
<td style="text-align: left; width: 12em;">Edgar Santos</td>
</tr>
<tr class="even">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Statistics for Experimenters: Design, Innovation, and Discovery</td>
<td style="text-align: left; width: 12em;">George Box</td>
</tr>
<tr class="odd">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Quality Control with R: An ISO Standards Approach</td>
<td style="text-align: left; width: 12em;">Emilio L Cano</td>
</tr>
<tr class="even">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Design and Analysis of Experiments with R</td>
<td style="text-align: left; width: 12em;">John Lawson</td>
</tr>
<tr class="odd" data-grouplength="4">
<td colspan="2" style="border-bottom: 1px solid"><strong>R</strong></td>
</tr>
<tr class="even">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">R for Data Science: Import, Tidy, Transform, Visualize, and Model Data</td>
<td style="text-align: left; width: 12em;">Hadley Wickham</td>
</tr>
<tr class="odd">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Testing R Code</td>
<td style="text-align: left; width: 12em;">Richard Cotton</td>
</tr>
<tr class="even">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">R Packages</td>
<td style="text-align: left; width: 12em;">Hadley Wickham</td>
</tr>
<tr class="odd">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Advanced R</td>
<td style="text-align: left; width: 12em;">Hadley Wickham</td>
</tr>
<tr class="even" data-grouplength="7">
<td colspan="2" style="border-bottom: 1px solid"><strong>Stats</strong></td>
</tr>
<tr class="odd">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">The Essentials of Probability</td>
<td style="text-align: left; width: 12em;">Richard Durrett</td>
</tr>
<tr class="even">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Probability and Statistical Inference</td>
<td style="text-align: left; width: 12em;">Robert Hogg</td>
</tr>
<tr class="odd">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Applied Multivariate Statistical Analysis</td>
<td style="text-align: left; width: 12em;">Richard Johnson</td>
</tr>
<tr class="even">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Multivariate Statistical Methods</td>
<td style="text-align: left; width: 12em;">Donald Morrison</td>
</tr>
<tr class="odd">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Mathematical Statistics and Data Analysis</td>
<td style="text-align: left; width: 12em;">John Rice</td>
</tr>
<tr class="even">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Best Practices in Data Cleaning: A Complete Guide to Everything You Need to Do Before and After Collecting Your Data</td>
<td style="text-align: left; width: 12em;">Jason Osborne</td>
</tr>
<tr class="odd">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Multivariable Modeling and Multivariate Analysis for the Behavioral Sciences</td>
<td style="text-align: left; width: 12em;">Brian Everitt</td>
</tr>
<tr class="even" data-grouplength="2">
<td colspan="2" style="border-bottom: 1px solid"><strong>Text</strong></td>
</tr>
<tr class="odd">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Natural Language Processing with Python</td>
<td style="text-align: left; width: 12em;">Steven Bird</td>
</tr>
<tr class="even">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Text Mining with R</td>
<td style="text-align: left; width: 12em;">Julia Silge</td>
</tr>
<tr class="odd" data-grouplength="4">
<td colspan="2" style="border-bottom: 1px solid"><strong>Visualization</strong></td>
</tr>
<tr class="even">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Information Dashboard Design: Displaying Data for At-a-Glance Monitoring</td>
<td style="text-align: left; width: 12em;">Stephen Few</td>
</tr>
<tr class="odd">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Lattice: Multivariate Data Visualization with R</td>
<td style="text-align: left; width: 12em;">Deepayan Sarkar</td>
</tr>
<tr class="even">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">ggplot2: Elegant Graphics for Data Analysis</td>
<td style="text-align: left; width: 12em;">Hadley Wickham</td>
</tr>
<tr class="odd">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">Data Visualisation: A Handbook for Data Driven Design</td>
<td style="text-align: left; width: 12em;">Andy Kirk</td>
</tr>
</tbody>
</table>
</div>


</div>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Most of them are a result of my <a href="https://sps.northwestern.edu/masters/data-science/">MSPA coursework</a>. Others are from colleagues. I‚Äôm always searching for good literature to study from. If you have suggestions, please drop me a note.‚Ü©Ô∏é</p></li>
</ol>
</section></div> ]]></description>
  <category>Books</category>
  <guid>https://www.rsangole.com/posts/2018-02-13-books-i-reference/2018-02-13-books-i-reference.html</guid>
  <pubDate>Tue, 13 Feb 2018 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Visualising Linear Discriminant Analyses</title>
  <dc:creator>Rahul </dc:creator>
  <link>https://www.rsangole.com/posts/2018-01-27-visualize-lda/2018-01-27-visualize-lda.html</link>
  <description><![CDATA[ 



<p><a href="https://shiny.rstudio.com/">Shiny</a> had interested me for a while for it‚Äôs power to quickly communicate and visualize data and models. I hadn‚Äôt delved into it due to lack of time to do so, until now.</p>
<p>Quick visualization I‚Äôve created as my 1st foray into R Shiny. Nothing earth shattering, but was helpful to learn the tool.</p>
<ul>
<li>Hosted on shinyapps for free, at <a href="https://rsangole.shinyapps.io/LDA_Visual/">link</a></li>
<li>Github code <a href="https://github.com/rsangole/r_shiny_visuals">here</a></li>
</ul>
<p><img src="https://www.rsangole.com/posts/2018-01-27-visualize-lda/LDA_Discriminant_Line_Projections.jpg" class="img-fluid"></p>



 ]]></description>
  <category>Shiny</category>
  <category>Visualization</category>
  <guid>https://www.rsangole.com/posts/2018-01-27-visualize-lda/2018-01-27-visualize-lda.html</guid>
  <pubDate>Sat, 27 Jan 2018 05:00:00 GMT</pubDate>
  <media:content url="https://www.rsangole.com/posts/2018-01-27-visualize-lda/LDA_Discriminant_Line_Projections.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Performance Benchmarking for Dummy Variable Creation</title>
  <dc:creator>Rahul </dc:creator>
  <link>https://www.rsangole.com/posts/2017-09-26_dummy-variables-one-hot-encoding/2017-09-26-dummy-variables-one-hot-encoding.html</link>
  <description><![CDATA[ 



<section id="motivation" class="level2">
<h2 class="anchored" data-anchor-id="motivation">Motivation</h2>
<p>Very recently, at work, we got into a discussion about creation of dummy variables in R code. We were dealing with a fairly large dataset of roughly 500,000 observations for roughly 120 predictor variables. Almost all of them were categorical variables, many of them with a fairly large number of factor levels (think 20-100). The types of models we needed to investigate required creation of dummy variables (think <a href="http://xgboost.readthedocs.io">xgboost</a>). There are a few ways to convert categoricals into dummy variables in R. However, I did not find any comparison of performance for large datasets.</p>
<p>So here it goes.</p>
</section>
<section id="why-do-we-need-dummy-variables" class="level2">
<h2 class="anchored" data-anchor-id="why-do-we-need-dummy-variables">Why do we need dummy variables?</h2>
<p>I won‚Äôt say any more here. Plenty of good resources on the web: <a href="https://stats.idre.ucla.edu/other/mult-pkg/faq/general/faqwhat-is-dummy-coding/">here</a>, <a href="http://www.sjsu.edu/people/edward.cohen/courses/c2/s1/Week_14_dummy_variable_slides.pdf">here</a>, and <a href="http://www.polsci.ucsb.edu/faculty/glasgow/ps15/ps15lect15.pdf">here</a>.</p>
</section>
<section id="ways-to-create-dummy-variables-in-r" class="level2">
<h2 class="anchored" data-anchor-id="ways-to-create-dummy-variables-in-r">Ways to create dummy variables in R</h2>
<p>These are the methods I‚Äôve found to create dummy variables in R. I‚Äôve explored each of these</p>
<ul>
<li>stats::model.matrix()</li>
<li>dummies::dummy.data.frame()</li>
<li>dummy::dummy()<br>
</li>
<li>caret::dummyVars()</li>
</ul>
<p>Prepping some data to try these out. Using the <code>HairEyeColor</code> dataset as an example. It consists of 3 categorical vars and 1 numerical var. Perfect to try things out. Adding a response variable <code>Y</code> too.</p>
<div class="cell" data-hash="2017-09-26-dummy-variables-one-hot-encoding_cache/html/unnamed-chunk-1_18467bb0bb61953fb398bde9202dd4a9">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(readr)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(purrr)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(magrittr)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HairEyeColor"</span>)</span>
<span id="cb1-6">HairEyeColor <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&lt;&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tbl_df</span>()</span>
<span id="cb1-7">HairEyeColor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(HairEyeColor)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> T) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'No'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Yes'</span>))</span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(HairEyeColor)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 32
Columns: 5
$ Hair &lt;chr&gt; "Black", "Brown", "Red", "Blond", "Black", "Brown", "Red", "Blond‚Ä¶
$ Eye  &lt;chr&gt; "Brown", "Brown", "Brown", "Brown", "Blue", "Blue", "Blue", "Blue‚Ä¶
$ Sex  &lt;chr&gt; "Male", "Male", "Male", "Male", "Male", "Male", "Male", "Male", "‚Ä¶
$ n    &lt;dbl&gt; 32, 53, 10, 3, 11, 50, 10, 30, 10, 25, 7, 5, 3, 15, 7, 8, 36, 66,‚Ä¶
$ Y    &lt;fct&gt; Yes, Yes, Yes, No, Yes, No, Yes, No, Yes, No, No, Yes, No, No, Ye‚Ä¶</code></pre>
</div>
</div>
<p>Let‚Äôs look at each package:</p>
<section id="stats-package" class="level3">
<h3 class="anchored" data-anchor-id="stats-package"><code>stats</code> package</h3>
<p>The <code>stats</code> package has a function called <code>model.matrix</code> which converts factor variables to dummy variables. It also drops the response variable.</p>
<p><em>Some pros</em></p>
<ul>
<li>Works with tibbles</li>
<li>Really fast</li>
<li>Retains numerical columns as is</li>
<li>Formula interface allows one to specify what <code>Y</code> is</li>
</ul>
<p><em>Some cons</em></p>
<ul>
<li>Need to add the response <code>Y</code> back into the mix, if we need it</li>
</ul>
<div class="cell" data-hash="2017-09-26-dummy-variables-one-hot-encoding_cache/html/unnamed-chunk-2_b1dfbab2b616f219a2e500b5660769dc">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">model.matrix</span>(Y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>.<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,HairEyeColor),<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  HairBlack HairBlond HairBrown HairRed EyeBrown EyeGreen EyeHazel SexMale  n
1         1         0         0       0        1        0        0       1 32
2         0         0         1       0        1        0        0       1 53
3         0         0         0       1        1        0        0       1 10</code></pre>
</div>
</div>
</section>
<section id="dummies-package" class="level3">
<h3 class="anchored" data-anchor-id="dummies-package"><code>dummies</code> package</h3>
<p><code>dummies</code> has a command called <code>dummy.data.frame</code> which does the needful.</p>
<p><em>Some pros</em></p>
<ul>
<li>Retains numerical columns as is</li>
<li>Can create based dummy variables for numeric columns too</li>
</ul>
<p><em>Some cons</em></p>
<ul>
<li>Doesn‚Äôt work with tibbles</li>
<li>Doesn‚Äôt have a formula interface to specify what <code>Y</code> is. Need to manually remove response variable from dataframe</li>
</ul>
<div class="cell" data-hash="2017-09-26-dummy-variables-one-hot-encoding_cache/html/unnamed-chunk-3_a02c6f327abf6977b6fba089d3310a2d">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dummies)</span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dummy.data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(HairEyeColor),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>),<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  Hair.Black Hair.Blond Hair.Brown Hair.Red Eye.Blue Eye.Brown Eye.Green
1          1          0          0        0        0         1         0
2          0          0          1        0        0         1         0
3          0          0          0        1        0         1         0
  Eye.Hazel Sex.Female Sex.Male  n Y.No Y.Yes
1         0          0        1 32    0     1
2         0          0        1 53    0     1
3         0          0        1 10    0     1</code></pre>
</div>
</div>
</section>
<section id="dummy-package" class="level3">
<h3 class="anchored" data-anchor-id="dummy-package"><code>dummy</code> package</h3>
<p><code>dummy</code> creates dummy variables of all the factors and character vectors in a data frame. It also supports settings in which the user only wants to compute dummies for the categorical values that were present in another data set. This is especially useful in the context of predictive modeling, in which the new (test) data has more or other categories than the training data. <sup>1</sup></p>
<p><em>Some pros</em></p>
<ul>
<li>Works with tibbles</li>
<li>Retains numerical columns as is</li>
<li>Can create based dummy variables for numeric columns too</li>
<li><code>p</code> parameter can select terms in terms of frequency</li>
<li>Can grab only those variables in a separate dataframe</li>
<li>Can create based dummy variables for numeric columns too</li>
</ul>
<p><em>Some cons</em></p>
<ul>
<li>Doesn‚Äôt have a formula interface to specify what <code>Y</code> is. Need to manually remove response variable from dataframe</li>
</ul>
<div class="cell" data-hash="2017-09-26-dummy-variables-one-hot-encoding_cache/html/unnamed-chunk-4_2adaaa2132dad0181031362b6b32edae">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dummy)</span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dummy</span>(HairEyeColor),<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  Hair_Black Hair_Blond Hair_Brown Hair_Red Eye_Blue Eye_Brown Eye_Green
1          1          0          0        0        0         1         0
2          0          0          1        0        0         1         0
3          0          0          0        1        0         1         0
  Eye_Hazel Sex_Female Sex_Male Y_No Y_Yes
1         0          0        1    0     1
2         0          0        1    0     1
3         0          0        1    0     1</code></pre>
</div>
</div>
<p><em>Side note:</em> there‚Äôs a useful feature to grab all the categories in a factor variable.</p>
<div class="cell" data-hash="2017-09-26-dummy-variables-one-hot-encoding_cache/html/unnamed-chunk-5_eb5e51606652bad1212aa74964b908ff">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">categories</span>(HairEyeColor)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$Hair
[1] "Black" "Blond" "Brown" "Red"  

$Eye
[1] "Blue"  "Brown" "Green" "Hazel"

$Sex
[1] "Female" "Male"  

$Y
[1] "No"  "Yes"</code></pre>
</div>
</div>
</section>
<section id="caret-package" class="level3">
<h3 class="anchored" data-anchor-id="caret-package"><code>caret</code> package</h3>
<p>Lastly, there‚Äôs the <code>caret</code> package‚Äôs <code>dummyVars()</code>. This follows a different paradigm. First, we create reciepe of sorts, which just creates an object that specifies how the dataframe gets dummy-fied. Then, use the <code>predict()</code> to make the actual conversions.</p>
<p><em>Some pros</em></p>
<ul>
<li>Works on creating full rank &amp; less than full rank matrix post-conversion</li>
<li>Has a feature to keep only the level names in the final dummy columns</li>
<li>Can directly create a sparse matrix</li>
<li>Retains numerical columns as is</li>
</ul>
<p><em>Some cons</em></p>
<ul>
<li><code>Y</code> needs a factor</li>
<li>If the cateogical variables aren‚Äôt factors, you can‚Äôt use the <code>sep=' '</code> feature</li>
</ul>
<div class="cell" data-hash="2017-09-26-dummy-variables-one-hot-encoding_cache/html/unnamed-chunk-6_4539745b9471e9be5f5143b4790acca4">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(caret)</span>
<span id="cb11-2">HairEyeColor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Hair <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(HairEyeColor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Hair)</span>
<span id="cb11-3">HairEyeColor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Eye <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(HairEyeColor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Eye)</span>
<span id="cb11-4">HairEyeColor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Sex <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(HairEyeColor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Sex)</span>
<span id="cb11-5">dV <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dummyVars</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">formula =</span> Y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>.,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> HairEyeColor)</span>
<span id="cb11-6">dV</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Dummy Variable Object

Formula: Y ~ .
5 variables, 4 factors
Variables and levels will be separated by '.'
A less than full rank encoding is used</code></pre>
</div>
</div>
<div class="cell" data-hash="2017-09-26-dummy-variables-one-hot-encoding_cache/html/unnamed-chunk-7_a96121ec20926be223e298d4743b48a4">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object =</span> dV, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> HairEyeColor),<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  Hair.Black Hair.Blond Hair.Brown Hair.Red Eye.Blue Eye.Brown Eye.Green
1          1          0          0        0        0         1         0
2          0          0          1        0        0         1         0
3          0          0          0        1        0         1         0
  Eye.Hazel Sex.Female Sex.Male  n
1         0          0        1 32
2         0          0        1 53
3         0          0        1 10</code></pre>
</div>
</div>
</section>
</section>
<section id="performance-comparison" class="level2">
<h2 class="anchored" data-anchor-id="performance-comparison">Performance comparison</h2>
<p>I‚Äôve run these benchmarks on my Macbook Pro with these specs:</p>
<ul>
<li>Processor Name: Intel Core i5</li>
<li>Processor Speed: 2.4 GHz</li>
<li>Number of Processors: 1</li>
<li>Total Number of Cores: 2</li>
<li>L2 Cache (per Core): 256 KB</li>
<li>L3 Cache: 3 MB</li>
<li>Memory: 8 GB</li>
</ul>
<section id="smaller-datasets" class="level3">
<h3 class="anchored" data-anchor-id="smaller-datasets">Smaller datasets</h3>
<p>The first dataset used is the <code>HairEyeColor</code>. 32 rows, 1 numeric var, 3 categorical var. All the resulting dataframes are as similar as possible‚Ä¶ they all retain the <code>Y</code> variable at the end.</p>
<div class="cell" data-hash="2017-09-26-dummy-variables-one-hot-encoding_cache/html/unnamed-chunk-8_aba05315a5eb427bf714ccc351e7dd9d">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(microbenchmark)</span>
<span id="cb15-2">HairEyeColor_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(HairEyeColor)</span>
<span id="cb15-3"></span>
<span id="cb15-4">stats_fn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(D){</span>
<span id="cb15-5">    stats<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">model.matrix</span>(Y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>.<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,D) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb15-6">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(D<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Y)</span>
<span id="cb15-7">}</span>
<span id="cb15-8"></span>
<span id="cb15-9">dummies_fn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(D){</span>
<span id="cb15-10">    dummies<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dummy.data.frame</span>(D[,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb15-11">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(D<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Y)</span>
<span id="cb15-12">}</span>
<span id="cb15-13"></span>
<span id="cb15-14">dummy_fn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(D){</span>
<span id="cb15-15">    dummy<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dummy</span>(D[,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb15-16">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(D<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Y)</span>
<span id="cb15-17">}</span>
<span id="cb15-18"></span>
<span id="cb15-19">caret_fn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(D){</span>
<span id="cb15-20">    dV <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> caret<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dummyVars</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">formula =</span> Y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>.,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> D)</span>
<span id="cb15-21">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object =</span> dV, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> D) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb15-22">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(D<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Y)</span>
<span id="cb15-23">    }</span>
<span id="cb15-24"></span>
<span id="cb15-25">microbenchmark<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">microbenchmark</span>(</span>
<span id="cb15-26">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stats =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stats_fn</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">D =</span> HairEyeColor),</span>
<span id="cb15-27">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dummies =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dummies_fn</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">D =</span> HairEyeColor_df),</span>
<span id="cb15-28">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dummy =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dummy_fn</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">D =</span> HairEyeColor),</span>
<span id="cb15-29">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caret =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">caret_fn</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">D =</span> HairEyeColor),</span>
<span id="cb15-30">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> 1000L,</span>
<span id="cb15-31">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">order =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'block'</span>),</span>
<span id="cb15-32">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">unit =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'s'</span></span>
<span id="cb15-33">    ) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-&gt;</span> benchmarks</span>
<span id="cb15-34"></span>
<span id="cb15-35"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">autoplot</span>(benchmarks)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.rsangole.com/posts/2017-09-26_dummy-variables-one-hot-encoding/2017-09-26-dummy-variables-one-hot-encoding_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>The results speak for themself. The <code>stats</code> is clearly the fastest with <code>dummies</code> and <code>caret</code> being a more distant 2nd &amp; 3rd.</p>
</section>
<section id="large-datasets" class="level3">
<h3 class="anchored" data-anchor-id="large-datasets">Large datasets</h3>
<p>To leverage a large dataset for this analysis, I‚Äôm using the <a href="https://www.kaggle.com/daveianhickey/2000-16-traffic-flow-england-scotland-wales/data">Accident &amp; Traffic Flow</a> dataset, which is fairly big - 570,011 rows and 33 columns. I‚Äôve narrowed down to 7 categorical variables to test the packages, and I‚Äôve created a fake response variable as well.</p>
<div class="cell" data-hash="2017-09-26-dummy-variables-one-hot-encoding_cache/html/unnamed-chunk-9_9e26e0b1cca373f7c9d2ee949e4b6c60">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'~/github/github.com/blog-large-data/accidents_2005_to_2007.csv'</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">progress =</span> F)</span>
<span id="cb16-2">data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&lt;&gt;%</span></span>
<span id="cb16-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transmute</span>(</span>
<span id="cb16-4">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Day_of_Week =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(Day_of_Week),</span>
<span id="cb16-5">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Road_Type =</span> Road_Type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> stringr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace_all</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'[()/ ]'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> as.factor,</span>
<span id="cb16-6">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Weather =</span> Weather_Conditions <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> stringr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace_all</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'[()/ ]'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> as.factor,</span>
<span id="cb16-7">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">RoadSurface =</span> Road_Surface_Conditions <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> stringr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace_all</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'[()/ ]'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> as.factor,</span>
<span id="cb16-8">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PedHC =</span>  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Pedestrian_Crossing-Human_Control</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> stringr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace_all</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'[()/ ]'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> as.factor,</span>
<span id="cb16-9">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PedPF =</span>  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Pedestrian_Crossing-Physical_Facilities</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> stringr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace_all</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'[()/ ]'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> as.factor,</span>
<span id="cb16-10">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Year =</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(Year)</span>
<span id="cb16-11">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb16-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb16-13">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(data)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> T) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'No'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Yes'</span>))</span>
<span id="cb16-14">    )</span>
<span id="cb16-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(data)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 570011      8</code></pre>
</div>
</div>
<p>In total, there will be 39 dummy variable columns created for these 7 factor variables, as we can see here:</p>
<div class="cell" data-hash="2017-09-26-dummy-variables-one-hot-encoding_cache/html/unnamed-chunk-10_838b03d3fe16fcd598a131bb271f4f9f">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_int</span>(data,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">levels</span>(.x)))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Day_of_Week   Road_Type     Weather RoadSurface       PedHC       PedPF 
          7           6           9           5           3           6 
       Year           Y 
          3           2 </code></pre>
</div>
</div>
<p>Now for the benchmarks:</p>
<div class="cell" data-hash="2017-09-26-dummy-variables-one-hot-encoding_cache/html/unnamed-chunk-11_8e5ceaa80fc166d4b8fdb68dc2705ab0">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">data_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(data)</span>
<span id="cb20-2">stats_fn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(D){</span>
<span id="cb20-3">    stats<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">model.matrix</span>(Y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>.<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,D) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb20-4">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(D<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Y)</span>
<span id="cb20-5">}</span>
<span id="cb20-6"></span>
<span id="cb20-7">dummies_fn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(D){</span>
<span id="cb20-8">    dummies<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dummy.data.frame</span>(D[,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb20-9">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(D<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Y)</span>
<span id="cb20-10">}</span>
<span id="cb20-11"></span>
<span id="cb20-12">dummy_fn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(D){</span>
<span id="cb20-13">    dummy<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dummy</span>(D[,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb20-14">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(D<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Y)</span>
<span id="cb20-15">}</span>
<span id="cb20-16"></span>
<span id="cb20-17">caret_fn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(D){</span>
<span id="cb20-18">    dV <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> caret<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dummyVars</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">formula =</span> Y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>.,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> D)</span>
<span id="cb20-19">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object =</span> dV, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> D) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb20-20">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(D<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Y)</span>
<span id="cb20-21">    }</span>
<span id="cb20-22"></span>
<span id="cb20-23">microbenchmark<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">microbenchmark</span>(</span>
<span id="cb20-24">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stats =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stats_fn</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">D =</span> data),</span>
<span id="cb20-25">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dummies =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dummies_fn</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">D =</span> data_df),</span>
<span id="cb20-26">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dummy =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dummy_fn</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">D =</span> data),</span>
<span id="cb20-27">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caret =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">caret_fn</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">D =</span> data),</span>
<span id="cb20-28">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> 30L,</span>
<span id="cb20-29">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">order =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'block'</span>)</span>
<span id="cb20-30">    ) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-&gt;</span> benchmarks</span>
<span id="cb20-31"></span>
<span id="cb20-32"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">autoplot</span>(benchmarks)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.rsangole.com/posts/2017-09-26_dummy-variables-one-hot-encoding/2017-09-26-dummy-variables-one-hot-encoding_files/figure-html/unnamed-chunk-11-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Just like before, <code>stats</code> is clerly the fastest.</p>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<ul>
<li>Stick to <code>stats::model.matrix()</code>. It works with tibbles, it‚Äôs fast, and it takes a formula.</li>
<li>If you like the <code>caret</code> package and it‚Äôs interface, it‚Äôs the 2nd best choice.</li>
<li><code>dummy</code> or <code>dummies</code> doesn‚Äôt seem to offer any advantages to these packages.</li>
</ul>
</section>
<section id="qs" class="level2">
<h2 class="anchored" data-anchor-id="qs">Qs</h2>
<ul>
<li>Are there other packages you recommend for dummy variable creation? If yes, please let me know in the comments.</li>
<li>Could you run the bench marks on more powerful machines and larger datasets, and share your results? I‚Äôd like to append them here.</li>
</ul>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Straight from the <code>dummy</code> <a href="https://cran.r-project.org/web/packages/dummy/dummy.pdf">help file</a>‚Ü©Ô∏é</p></li>
</ol>
</section></div> ]]></description>
  <category>Benchmarking</category>
  <guid>https://www.rsangole.com/posts/2017-09-26_dummy-variables-one-hot-encoding/2017-09-26-dummy-variables-one-hot-encoding.html</guid>
  <pubDate>Wed, 27 Sep 2017 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Pur(r)ify Your Carets</title>
  <dc:creator>Rahul </dc:creator>
  <link>https://www.rsangole.com/posts/2017-09-17-pur-r-ify-your-carets/2017-09-17-pur-r-ify-your-carets.html</link>
  <description><![CDATA[ 



<section id="the-motivation" class="level2">
<h2 class="anchored" data-anchor-id="the-motivation">The motivation</h2>
<p>I want to write a quick blogpost on two phenomenal pieces of code written by Kuhn et al, and Wickham et al, namely - <a href="https://cran.r-project.org/web/packages/purrr/index.html">purrr</a>, <a href="https://cran.r-project.org/web/packages/caret/index.html">caret</a>. These play so well with the <a href="https://cran.r-project.org/web/packages/tidyverse/index.html">tidyverse</a> that they have become an indispensible part of my repertoire.</p>
<p>In any datascience project, I want to investigate the effect of various combinations of:</p>
<ul>
<li>Variable transformations</li>
<li>Variable selection</li>
<li>Grouped vs ungrouped categorical variables</li>
<li>Models of different types</li>
<li>Different hyperparameter tuning methods</li>
</ul>
<p>For each of the various combinations possible, I want to quantify model performance using common performance metrics like AIC or SBC. Commonly, I‚Äôll select the model that has the ‚Äòbest‚Äô possible performance among all such models.</p>
<p>Traditionally, I end up with many R objects: one for each new combination of transformation-model_type-tuning_method. For example, <code>boostFit</code>, <code>xgbFit</code>, <code>glmFit</code>, <code>elastinetFit</code> for untransformed variables. If I have any transformations, I might also have <code>boostFit.xform</code>, <code>xgbFit.xform</code>, <code>glmFit.xform</code> etc. Add to that, investigation of grouped vs ungrouped variables‚Ä¶ <code>boostFit.xform.grouped</code>, <code>xgbFit.xform.ungrouped</code> etc. You get the idea.</p>
<p>The challenge with this approach is that the data and the models remain separated, there‚Äôs a lot of repeat code for object management, manipulation and plotting, and in order to compare all the models together, we have to somehow stitch the results together. (For the last point, <code>resamples()</code> in <code>caret</code> works beautifully, but requires the same number of resamples in each model.)</p>
<p>The approach I‚Äôm presenting below is a combination of a few approaches I learnt through the <a href="http://appliedpredictivemodeling.com/">APM</a> book, the <code>caret</code> documentation, grammar and verbage in <code>tidyverse</code>, as well as a couple of useful talks in the 2017 R Studio conferenence in Orlando [Notably ones on <a href="https://www.rstudio.com/resources/videos/happy-r-users-purrr/">purrr</a> and <a href="https://www.rstudio.com/resources/videos/using-list-cols-in-your-dataframe/">list-cols</a>]. What you‚Äôll also see is that the code is extremely succint, which is simply a joy to write and read.</p>
</section>
<section id="an-example-using-bostonhousing-data" class="level2">
<h2 class="anchored" data-anchor-id="an-example-using-bostonhousing-data">An example using <code>BostonHousing</code> data</h2>
<section id="load-libs-data" class="level3">
<h3 class="anchored" data-anchor-id="load-libs-data">Load libs &amp; data</h3>
<p>The libraries I‚Äôm using here are <code>tidyr</code>, <code>tibble</code>, <code>dplyr</code>, <code>magrittr</code>, <code>purrr</code>, and <code>caret</code>. The dataset is from <code>mlbench</code>.</p>
<div class="cell" data-hash="2017-09-17-pur-r-ify-your-carets_cache/html/unnamed-chunk-1_9a4ffa60cd7ca987c7085d8e5aa98770">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyr)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tibble)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(magrittr)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(purrr)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(caret)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(mlbench)</span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(xgboost)</span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BostonHousing"</span>)</span></code></pre></div>
</div>
<hr>
<section id="transformations-on-xs" class="level4">
<h4 class="anchored" data-anchor-id="transformations-on-xs">Transformations on Xs</h4>
<p>For the purposes of this demonstration, I‚Äôll simply create two new sets variables using a Box-Cox transformation - <code>caret</code>‚Äôs <code>preProcess()</code> makes this easy - and the squared values of the originals. Save each new variable-set in a new character vector which follows the naming convention <code>preds.xxxx</code>.<sup>1</sup></p>
<div class="cell" data-hash="2017-09-17-pur-r-ify-your-carets_cache/html/unnamed-chunk-2_29e74589ad734698932afef7eec1dfe4">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The originals</span></span>
<span id="cb2-2">response <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'medv'</span></span>
<span id="cb2-3">preds.original <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(BostonHousing[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>])</span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Box-Cox transformation</span></span>
<span id="cb2-6">prepTrain <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">preProcess</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> BostonHousing[,preds.original], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'BoxCox'</span>))</span>
<span id="cb2-7">boxcoxed <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(prepTrain,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> BostonHousing[,preds.original])</span>
<span id="cb2-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(boxcoxed) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(boxcoxed),<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.boxed'</span>)</span>
<span id="cb2-9">preds.boxcoxed <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(boxcoxed)</span>
<span id="cb2-10"></span>
<span id="cb2-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Squaring</span></span>
<span id="cb2-12">squared <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (BostonHousing[,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>)])<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(squared) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(squared),<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.sq'</span>)</span>
<span id="cb2-14">preds.sq <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(squared)</span>
<span id="cb2-15"></span>
<span id="cb2-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># All together now...</span></span>
<span id="cb2-17">BostonHousing <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&lt;&gt;%</span> </span>
<span id="cb2-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(boxcoxed,squared)</span>
<span id="cb2-19"></span>
<span id="cb2-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make sure everything is a numerical (for xgboost to work), and also NOT a tibble (some caret functions have trouble with tibbles)</span></span>
<span id="cb2-21">BostonHousing <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&lt;&gt;%</span> </span>
<span id="cb2-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_df</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.f =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(.x)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>()</span>
<span id="cb2-23"></span>
<span id="cb2-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(BostonHousing)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>'data.frame':   506 obs. of  39 variables:
 $ crim         : num  0.00632 0.02731 0.02729 0.03237 0.06905 ...
 $ zn           : num  18 0 0 0 0 0 12.5 12.5 12.5 12.5 ...
 $ indus        : num  2.31 7.07 7.07 2.18 2.18 2.18 7.87 7.87 7.87 7.87 ...
 $ chas         : num  1 1 1 1 1 1 1 1 1 1 ...
 $ nox          : num  0.538 0.469 0.469 0.458 0.458 0.458 0.524 0.524 0.524 0.524 ...
 $ rm           : num  6.58 6.42 7.18 7 7.15 ...
 $ age          : num  65.2 78.9 61.1 45.8 54.2 58.7 66.6 96.1 100 85.9 ...
 $ dis          : num  4.09 4.97 4.97 6.06 6.06 ...
 $ rad          : num  1 2 2 3 3 3 5 5 5 5 ...
 $ tax          : num  296 242 242 222 222 222 311 311 311 311 ...
 $ ptratio      : num  15.3 17.8 17.8 18.7 18.7 18.7 15.2 15.2 15.2 15.2 ...
 $ b            : num  397 397 393 395 397 ...
 $ lstat        : num  4.98 9.14 4.03 2.94 5.33 ...
 $ medv         : num  24 21.6 34.7 33.4 36.2 28.7 22.9 27.1 16.5 18.9 ...
 $ crim.boxed   : num  -5.06 -3.6 -3.6 -3.43 -2.67 ...
 $ zn.boxed     : num  18 0 0 0 0 0 12.5 12.5 12.5 12.5 ...
 $ indus.boxed  : num  0.994 2.966 2.966 0.914 0.914 ...
 $ chas.boxed   : num  1 1 1 1 1 1 1 1 1 1 ...
 $ nox.boxed    : num  -0.83 -1.09 -1.09 -1.13 -1.13 ...
 $ rm.boxed     : num  2.81 2.76 3 2.94 2.99 ...
 $ age.boxed    : num  175 224 161 110 137 ...
 $ dis.boxed    : num  1.41 1.6 1.6 1.8 1.8 ...
 $ rad.boxed    : num  0 0.693 0.693 1.099 1.099 ...
 $ tax.boxed    : num  1.88 1.87 1.87 1.87 1.87 ...
 $ ptratio.boxed: num  117 158 158 174 174 ...
 $ b.boxed      : num  78764 78764 77157 77866 78764 ...
 $ lstat.boxed  : num  1.89 2.78 1.61 1.2 1.99 ...
 $ crim.sq      : num  3.99e-05 7.46e-04 7.45e-04 1.05e-03 4.77e-03 ...
 $ zn.sq        : num  324 0 0 0 0 ...
 $ indus.sq     : num  5.34 49.98 49.98 4.75 4.75 ...
 $ nox.sq       : num  0.289 0.22 0.22 0.21 0.21 ...
 $ rm.sq        : num  43.2 41.2 51.6 49 51.1 ...
 $ age.sq       : num  4251 6225 3733 2098 2938 ...
 $ dis.sq       : num  16.7 24.7 24.7 36.8 36.8 ...
 $ rad.sq       : num  1 4 4 9 9 9 25 25 25 25 ...
 $ tax.sq       : num  87616 58564 58564 49284 49284 ...
 $ ptratio.sq   : num  234 317 317 350 350 ...
 $ b.sq         : num  157530 157530 154315 155733 157530 ...
 $ lstat.sq     : num  24.8 83.54 16.24 8.64 28.41 ...</code></pre>
</div>
</div>
<p>Here‚Äôs our new predictor variable sets:</p>
<div class="cell" data-hash="2017-09-17-pur-r-ify-your-carets_cache/html/unnamed-chunk-3_ee822c8b11a752c59b7b922277cda175">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">pred_varsets <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ls</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pattern =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'preds'</span>)</span>
<span id="cb4-2">pred_varsets</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "preds.boxcoxed" "preds.original" "preds.sq"      </code></pre>
</div>
</div>
<hr>
</section>
</section>
<section id="create-a-starter-dataframe" class="level3">
<h3 class="anchored" data-anchor-id="create-a-starter-dataframe">Create a starter dataframe</h3>
<p>I first create a starter dataframe where the input data is repeated as many times as the number of predictor variable sets. <code>enframe()</code> allows us to embed objects a dataframe column.</p>
<div class="cell" data-hash="2017-09-17-pur-r-ify-your-carets_cache/html/unnamed-chunk-4_9e284ada7a6c4c3db3543efec5ea662e">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">num_var_select <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(pred_varsets)</span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(BostonHousing) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(num_var_select) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enframe</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'id'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rawdata'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pred_varsets =</span> pred_varsets) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-&gt;</span> starter_df</span>
<span id="cb6-6">starter_df</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 3 √ó 3
     id rawdata         pred_varsets  
  &lt;int&gt; &lt;list&gt;          &lt;chr&gt;         
1     1 &lt;df [506 √ó 39]&gt; preds.boxcoxed
2     2 &lt;df [506 √ó 39]&gt; preds.original
3     3 &lt;df [506 √ó 39]&gt; preds.sq      </code></pre>
</div>
</div>
<p>Now, I split the raw data into <code>train.X</code> column which houses data only for those predictor variables identified in the <code>pred_varsets</code> column. <code>map2</code> is a great function which allows a mapping to be done over two variables and passed to a function.</p>
<p>I also create a <code>train.Y</code> for the response variable here.</p>
<div class="cell" data-hash="2017-09-17-pur-r-ify-your-carets_cache/html/unnamed-chunk-5_b55085a588748f0c5aa71ed9a14e6088">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Function to select columns in the raw data</span></span>
<span id="cb8-2">filterColumns <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x,y){</span>
<span id="cb8-3">    x[,(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(x) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eval</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parse</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text=</span>y)))]</span>
<span id="cb8-4">}</span>
<span id="cb8-5"></span>
<span id="cb8-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create X and Y columns</span></span>
<span id="cb8-7">starter_df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&lt;&gt;%</span> </span>
<span id="cb8-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transmute</span>(</span>
<span id="cb8-9">  id,</span>
<span id="cb8-10">  pred_varsets,</span>
<span id="cb8-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">train.X =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map2</span>(rawdata, pred_varsets,  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filterColumns</span>(.x, .y)),</span>
<span id="cb8-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">train.Y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(rawdata, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> .x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>medv)</span>
<span id="cb8-13">  )</span>
<span id="cb8-14"></span>
<span id="cb8-15">starter_df</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 3 √ó 4
     id pred_varsets   train.X         train.Y    
  &lt;int&gt; &lt;chr&gt;          &lt;list&gt;          &lt;list&gt;     
1     1 preds.boxcoxed &lt;df [506 √ó 13]&gt; &lt;dbl [506]&gt;
2     2 preds.original &lt;df [506 √ó 13]&gt; &lt;dbl [506]&gt;
3     3 preds.sq       &lt;df [506 √ó 12]&gt; &lt;dbl [506]&gt;</code></pre>
</div>
</div>
<hr>
</section>
<section id="select-the-models" class="level3">
<h3 class="anchored" data-anchor-id="select-the-models">Select the models</h3>
<p>This is where I can select which models I want in the analysis. Each model should be in a function of this style:</p>
<pre><code>modelName &lt;- function(X, Y){
    ctrl &lt;- trainControl(
        ...
    )
    train(
        x = X,
        y = Y,
        trContrl = ctrl,
        method = '## modelname ##',
        ...
    )
}</code></pre>
<p>I‚Äôm using <code>caret</code> exclusively, so each function needs a <code>trainControl()</code> and a <code>train()</code>. Learn more about <code>caret</code> <a href="http://topepo.github.io/caret/index.html">here</a>.</p>
<div class="cell" data-hash="2017-09-17-pur-r-ify-your-carets_cache/html/unnamed-chunk-6_1853505d25be86dd9c108bbdec28be93">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">rpartModel <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(X, Y) {</span>
<span id="cb11-2">    ctrl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trainControl</span>(</span>
<span id="cb11-3">        <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 5-fold CV</span></span>
<span id="cb11-4">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"repeatedcv"</span>,</span>
<span id="cb11-5">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">number =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb11-6">    )</span>
<span id="cb11-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">train</span>(</span>
<span id="cb11-8">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> X,</span>
<span id="cb11-9">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> Y,</span>
<span id="cb11-10">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rpart2'</span>,</span>
<span id="cb11-11">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trControl =</span> ctrl,</span>
<span id="cb11-12">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tuneGrid =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">maxdepth=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)),</span>
<span id="cb11-13">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">preProc =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'center'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'scale'</span>)</span>
<span id="cb11-14">    )</span>
<span id="cb11-15">}</span>
<span id="cb11-16">xgbTreeModel <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(X,Y){</span>
<span id="cb11-17">    ctrl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trainControl</span>(</span>
<span id="cb11-18">        <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 5-fold CV</span></span>
<span id="cb11-19">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"repeatedcv"</span>,</span>
<span id="cb11-20">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">number =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb11-21">    )</span>
<span id="cb11-22">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">train</span>(</span>
<span id="cb11-23">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>X,</span>
<span id="cb11-24">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>Y,</span>
<span id="cb11-25">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'xgbTree'</span>,</span>
<span id="cb11-26">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trControl =</span> ctrl,</span>
<span id="cb11-27">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tuneGrid =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expand.grid</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrounds =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>), </span>
<span id="cb11-28">                              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max_depth =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>) ,</span>
<span id="cb11-29">                              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">eta =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb11-30">                              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gamma =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, </span>
<span id="cb11-31">                              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colsample_bytree =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, </span>
<span id="cb11-32">                              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min_child_weight =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, </span>
<span id="cb11-33">                              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subsample =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb11-34">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">preProc =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'center'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'scale'</span>)</span>
<span id="cb11-35">    )</span>
<span id="cb11-36">}</span></code></pre></div>
</div>
<p>Once these functions are setup, <code>enframe</code> these into a dataframe.</p>
<div class="cell" data-hash="2017-09-17-pur-r-ify-your-carets_cache/html/unnamed-chunk-7_35c9e34f23227ac64cfaad4a53b5d6e2">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">model_list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rpartModel=</span>rpartModel,</span>
<span id="cb12-2">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xgbModel=</span>xgbTreeModel) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enframe</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'modelName'</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'model'</span>)</span>
<span id="cb12-4"></span>
<span id="cb12-5">model_list</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 2 √ó 2
  modelName  model 
  &lt;chr&gt;      &lt;list&gt;
1 rpartModel &lt;fn&gt;  
2 xgbModel   &lt;fn&gt;  </code></pre>
</div>
</div>
<hr>
</section>
<section id="create-data-model-combinations" class="level3">
<h3 class="anchored" data-anchor-id="create-data-model-combinations">Create data-model combinations</h3>
<p>Now, we‚Äôre ready to combine the two together. <code>train_df</code> has all the predictor varset combinations, <code>model_list</code> has the list of all models. I‚Äôm assuming I want to run each combination of the two; so if I have 3 variable sets, and 2 models, I have a total of 6 models to run. This code sets that up:</p>
<div class="cell" data-hash="2017-09-17-pur-r-ify-your-carets_cache/html/unnamed-chunk-8_1597d47504d4c74a2fc7b7f2f3116b92">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">train_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb14-2">    starter_df[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(starter_df),<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(model_list)),]</span>
<span id="cb14-3"></span>
<span id="cb14-4">train_df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&lt;&gt;%</span></span>
<span id="cb14-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(</span>
<span id="cb14-6">        model_list[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(model_list),<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(starter_df)),] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(modelName)</span>
<span id="cb14-7">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb14-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(.))</span>
<span id="cb14-9">train_df</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 √ó 6
     id pred_varsets   train.X         train.Y     modelName  model 
  &lt;int&gt; &lt;chr&gt;          &lt;list&gt;          &lt;list&gt;      &lt;chr&gt;      &lt;list&gt;
1     1 preds.boxcoxed &lt;df [506 √ó 13]&gt; &lt;dbl [506]&gt; rpartModel &lt;fn&gt;  
2     2 preds.original &lt;df [506 √ó 13]&gt; &lt;dbl [506]&gt; rpartModel &lt;fn&gt;  
3     3 preds.sq       &lt;df [506 √ó 12]&gt; &lt;dbl [506]&gt; rpartModel &lt;fn&gt;  
4     4 preds.boxcoxed &lt;df [506 √ó 13]&gt; &lt;dbl [506]&gt; xgbModel   &lt;fn&gt;  
5     5 preds.original &lt;df [506 √ó 13]&gt; &lt;dbl [506]&gt; xgbModel   &lt;fn&gt;  
6     6 preds.sq       &lt;df [506 √ó 12]&gt; &lt;dbl [506]&gt; xgbModel   &lt;fn&gt;  </code></pre>
</div>
</div>
<hr>
</section>
<section id="solve-the-models" class="level3">
<h3 class="anchored" data-anchor-id="solve-the-models">Solve the models</h3>
<p>The data is almost all setup now. <code>invoke_map()</code> is a function which can call functions and pass it arguments. Since we need to pass both <code>train.X</code> and <code>train.Y</code> together, there‚Äôs an intermediate call to <code>map2()</code> to ‚Äúlistify‚Äù these first into <code>params</code>.</p>
<p>All them models solve, and their results (the model object itself) is stored in <code>modelFits</code>.</p>
<div class="cell" data-hash="2017-09-17-pur-r-ify-your-carets_cache/html/unnamed-chunk-9_42b58f75322d562792c3e217a7234b26">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">train_df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&lt;&gt;%</span></span>
<span id="cb16-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">params =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map2</span>(train.X, train.Y,  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">X =</span> .x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Y =</span> .y)),</span>
<span id="cb16-3">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">modelFits=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">invoke_map</span>(model,params)</span>
<span id="cb16-4">         )</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[21:00:12] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:12] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:12] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:12] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:12] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:12] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:13] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:13] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:13] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:13] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:13] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:13] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:13] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:13] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:14] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:14] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:14] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:14] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:14] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:14] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:14] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:14] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:15] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:15] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:15] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:15] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:15] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:15] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:15] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:15] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:16] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:16] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:16] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:16] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:16] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:16] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:17] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:17] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:17] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:17] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:17] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:17] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:17] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:17] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:17] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:17] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:18] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:18] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:18] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:18] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:18] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:18] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:19] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:19] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:19] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:19] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:19] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:19] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:20] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:20] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:20] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:20] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:20] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:20] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:21] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:21] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:21] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:21] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:21] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:21] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:21] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:21] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:21] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:21] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:22] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:22] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:22] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:22] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:22] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:22] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:22] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:22] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:23] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:23] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:23] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:23] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:23] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:23] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:23] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.
[21:00:23] WARNING: amalgamation/../src/c_api/c_api.cc:785: `ntree_limit` is deprecated, use `iteration_range` instead.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">train_df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(pred_varsets,modelName,params,modelFits)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 √ó 4
  pred_varsets   modelName  params           modelFits
  &lt;chr&gt;          &lt;chr&gt;      &lt;list&gt;           &lt;list&gt;   
1 preds.boxcoxed rpartModel &lt;named list [2]&gt; &lt;train&gt;  
2 preds.original rpartModel &lt;named list [2]&gt; &lt;train&gt;  
3 preds.sq       rpartModel &lt;named list [2]&gt; &lt;train&gt;  
4 preds.boxcoxed xgbModel   &lt;named list [2]&gt; &lt;train&gt;  
5 preds.original xgbModel   &lt;named list [2]&gt; &lt;train&gt;  
6 preds.sq       xgbModel   &lt;named list [2]&gt; &lt;train&gt;  </code></pre>
</div>
</div>
<hr>
</section>
<section id="extract-results" class="level3">
<h3 class="anchored" data-anchor-id="extract-results">Extract results</h3>
<p>Now, I can extract pretty much any model performance or hypertuning parameter using <code>purrr</code>. Since <code>caret</code> is so lovingly standardized, it doesn‚Äôt matter if I‚Äôm using a glm, xgboost, rpart2, or ann - the code remains the same.</p>
<div class="cell" data-hash="2017-09-17-pur-r-ify-your-carets_cache/html/unnamed-chunk-10_a585e5429551fb1fdc63b4d509857074">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">train_df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&lt;&gt;%</span> </span>
<span id="cb20-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb20-3">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">RMSE=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dbl</span>(modelFits,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(.x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>results<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>RMSE)),</span>
<span id="cb20-4">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">RMSESD=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dbl</span>(modelFits,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(.x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>results<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>RMSESD)),</span>
<span id="cb20-5">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Rsq=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dbl</span>(modelFits,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(.x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>results<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Rsquared)),</span>
<span id="cb20-6">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bestTune=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(modelFits,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>.x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bestTune)</span>
<span id="cb20-7">    )</span>
<span id="cb20-8">train_df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>train.X,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>train.Y,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>params,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>modelFits)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 √ó 8
     id pred_varsets   modelName  model   RMSE RMSESD   Rsq bestTune    
  &lt;int&gt; &lt;chr&gt;          &lt;chr&gt;      &lt;list&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;list&gt;      
1     1 preds.boxcoxed rpartModel &lt;fn&gt;    6.15  0.698 0.711 &lt;df [1 √ó 1]&gt;
2     2 preds.original rpartModel &lt;fn&gt;    5.87  1.15  0.742 &lt;df [1 √ó 1]&gt;
3     3 preds.sq       rpartModel &lt;fn&gt;    6.28  0.950 0.719 &lt;df [1 √ó 1]&gt;
4     4 preds.boxcoxed xgbModel   &lt;fn&gt;    3.44  0.532 0.887 &lt;df [1 √ó 7]&gt;
5     5 preds.original xgbModel   &lt;fn&gt;    3.27  0.493 0.902 &lt;df [1 √ó 7]&gt;
6     6 preds.sq       xgbModel   &lt;fn&gt;    3.31  0.683 0.895 &lt;df [1 √ó 7]&gt;</code></pre>
</div>
</div>
<p>This allows us to very quickly visualize the results using <code>lattice</code> or <code>ggplot</code> <em>across all models</em>.</p>
<div class="cell" data-hash="2017-09-17-pur-r-ify-your-carets_cache/html/unnamed-chunk-11_f1ec4de0dda308fb0e74f8d412a29af5">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1">lattice<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dotplot</span>(Rsq<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>pred_varsets<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>modelName,train_df)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.rsangole.com/posts/2017-09-17-pur-r-ify-your-carets/2017-09-17-pur-r-ify-your-carets_files/figure-html/unnamed-chunk-11-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1">train_df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb23-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>pred_varsets,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>modelName))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>RMSE),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_errorbar</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> RMSE<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>RMSESD,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax=</span> RMSE<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>RMSESD),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width=</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.rsangole.com/posts/2017-09-17-pur-r-ify-your-carets/2017-09-17-pur-r-ify-your-carets_files/figure-html/unnamed-chunk-11-2.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Since the model fit objects themselves are embedded, I can still look <em>at each model‚Äôs</em> internals. For example, to plot the results of the 5-fold CV on the grid search for the xgboost model:</p>
<div class="cell" data-hash="2017-09-17-pur-r-ify-your-carets_cache/html/unnamed-chunk-12_d79bd1d7c6cc3e1ea15285fff027dc54">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(train_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>modelFits[train_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>modelName<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'xgbModel'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> train_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pred_varsets<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'preds.original'</span>][[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]])</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.rsangole.com/posts/2017-09-17-pur-r-ify-your-carets/2017-09-17-pur-r-ify-your-carets_files/figure-html/unnamed-chunk-12-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
</section>
<section id="in-conclusion" class="level2">
<h2 class="anchored" data-anchor-id="in-conclusion">In conclusion</h2>
<p>These packages make investigating a <em>very</em> large number of datasets and models easy. With just a few lines of code, I ran a total of 6 different models - and for each model: a 5-fold cross validation, and for the xgboost models: a grid search across two tuning parameters - to select the best model on any number of performance criteria. Yet, everything remains neatly arranged in one dataframe, which can be saved as .RData and retrived later.</p>
<p>Also remember that the raw data replicated in the <code>data</code> column of <code>starter_df</code> doesn‚Äôt have to be the exact same dataset for each row either. so you could leverage this methodology for a train-validate-test approach, or for resampled training sets, where each row has completely different datasets embedded within. Really depends on your creativity and how you write subsequent code. You‚Äôre definitely going to find more material online on this topic, be sure to check <a href="https://www.google.com/url?q=https://www.r-bloggers.com&amp;sa=D&amp;ust=1506507002058000&amp;usg=AFQjCNGK9mqK55zVwsCvoDn7e40KFBTrbg">r-bloggers</a>.</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>This makes it super easy to find all such variable sets quickly using <code>ls(pattern = 'preds')</code> and store it in a character vector.‚Ü©Ô∏é</p></li>
</ol>
</section></div> ]]></description>
  <category>Programming Practices</category>
  <guid>https://www.rsangole.com/posts/2017-09-17-pur-r-ify-your-carets/2017-09-17-pur-r-ify-your-carets.html</guid>
  <pubDate>Sun, 17 Sep 2017 04:00:00 GMT</pubDate>
  <media:content url="https://www.rsangole.com/posts/2017-09-17-pur-r-ify-your-carets/carrots.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
