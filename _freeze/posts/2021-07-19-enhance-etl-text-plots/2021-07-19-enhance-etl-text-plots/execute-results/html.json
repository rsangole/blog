{
  "hash": "6be4b10d87213d6e54b6f4aad38dca33",
  "result": {
    "markdown": "---\ntitle: Enhance ETL pipeline monitoring with text plots\n# author: Rahul\ndate: '2021-07-19'\nslug: enhance-etl-text-plots\ncategories:\n  - R\ntags:\n  - visualization\n  - docker\noutput: \n  blogdown::html_page:\n    toc: true\n---\n\n\n\n\nI often use data ETL pipeline scripts cron-jobed on text-only interfaces (be it Jenkins, or cron-jobed in shell). While I print  descriptive stats to keep tabs on ETL runs, I've found [`{txtplot}`](https://cran.r-project.org/web/packages/txtplot/index.html) adds a higher level of fidelity in my logfiles. [Bjoern Bornkamp](https://www.rdocumentation.org/collaborators/name/Bjoern%20Bornkamp)'s package offers a simple and effective way to enhance my logfiles. \n\nWill I use them to visualize my data? No. Are they useful tokeep an eye on your pipelines and quickly diagnose issues? Yes, I've been able to diagnose more than a few data quality spills very quickly because I had these rudimentary plots in my logfiles.\n\nSome examples...\n\n### What's the distribution of a variable?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat <- dplyr::starwars %>% \n  mutate(across(where(is.character), forcats::fct_infreq))\n\ndat %>%\n  tidyr::drop_na(height) %>% \n  pull(height) %>% \n  txtdensity(., xlab = \"starwars: height distribution\", width = 70, height = 12, pch = \"o\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      +-----------+--------------+-------oo----+-------------+-------+\n 0.02 +                                oooooo                        +\n      |                               oo    oo                       |\n0.015 +                              oo      o                       +\n      |                             oo        o                      |\n 0.01 +                             o         oo                     +\n      |                            o           oo                    |\n0.005 +         ooo              oo              ooo                 +\n      |  oooooooo oooooooooooooooo                 ooooooooo   ooo   |\n    0 +-----------+--------------+-------------+-----------ooooo-----+\n                 100            150           200           250       \n                       starwars: height distribution                  \n```\n:::\n:::\n\n\n### Counts of a factor?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntxtbarchart(dat$sex, width = 70, height = 12, pch = \"x\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   +--x--------------+--------------+--------------+--------------+--+\n60 +  x                                                              +\n   |  x                                                              |\n   |  x                                                              |\n40 +  x                                                              +\n   |  x                                                              |\n20 +  x              x                                               +\n   |  x              x                                               |\n   |  x              x              x              x              x  |\n 0 +--x--------------x--------------x--------------x--------------x--+\n      1              2              3              4              5   \nLegend: 1=male, 2=female, 3=none, 4=hermaphroditic, 5=NA's\n```\n:::\n:::\n\n\n### Boxplots\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntxtboxplot(dat$height, dat$mass, width = 70, height = 12)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n 0            50            100           150           200           \n |-------------+-------------+-------------+-------------+-----------|\n                                                +---+--+              \n1                                       --------|   |  |---------     \n                                                +---+--+              \n                 +-----+-+                                            \n2     -----------|     | |----------                                  \n                 +-----+-+                                            \n     +                                                                \n3    |                                                                \n     +                                                                \nLegend: 1=dat$height, 2=dat$mass, 3=12\n```\n:::\n:::\n\n\n### Time series plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntxtplot(y = LakeHuron, x = 1875:1972, width = 70, height = 12, xlab = \"year\", ylab = \"level\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  582 +--*--+----------+-----------+----------+-----------+----------+\n      |      ****                                                    |\n  581 +  *****  *                       *            **              +\nl 580 +    *     ** *     ***    **                  * *       ***   +\ne 579 +           **  ****   * * ***     *      ****   *  *     *    +\nv     |             ** *     **    **   *       *       *  *  **     |\ne 578 +                       * *    * *     **     *   *  *  *      +\nl 577 +                               *  ** ** *         ** **       +\n      |                                    *                         |\n  576 +-----+----------+-----------+----------+-----------+-*--------+\n          1880       1900        1920       1940        1960          \n                                   year                               \n```\n:::\n:::\n\n\nACF plots, though I've not used these in production yet.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntxtacf(sunspot.year, width = 70, height = 12)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  1 +--*--------------+-------------+--------------+--------------+--+\n    |  *                                                             |\n    |  *  *                                                          |\n    |  *  *                         *  *                             |\n0.5 +  *  *  *                   *  *  *  *                          +\n    |  *  *  *                   *  *  *  *                       *  |\n    |  *  *  *                 * *  *  *  *  *                    *  |\n  0 +  *  *  *  *  *  *  *  *  * *  *  *  *  *  *  *  *  *  *  *  *  +\n    |              *  *  *  *                   *  *  *  *  *        |\n    |              *  *  *                         *  *  *           |\n    +--+--------------*-------------+--------------+--------------+--+\n       0              5            10             15             20   \n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}